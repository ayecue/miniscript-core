// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parse default scripts anonymous-functions.ms 1`] = `
"Chunk[1:1-23:14][
	CallExpression[1:1-1:23][Identifier[1:1-1:4][Foo](Function[1:5-3:13][ =>
		ReturnStatement[2:3-2:11][Literal[2:10-2:11][1]]
	], Literal[1:17-1:23][test])]
	CallExpression[5:1-5:23][Identifier[5:1-5:4][Foo](Literal[5:5-5:11][test], Function[5:13-7:13][ =>
		ReturnStatement[6:3-6:11][Literal[6:10-6:11][1]]
	])]
	AssignmentStatement[9:1-9:27][Identifier[9:1-9:4][Foo] = MapConstructor[9:7-9:27][
		MapKeyString[9:8-11:13][Literal[9:8-9:14][test]: Function[9:16-11:13][ =>
			ReturnStatement[10:3-10:11][Literal[10:10-10:11][1]]
		]]
	]]
	AssignmentStatement[13:1-13:19][Identifier[13:1-13:4][Foo] = ListConstructor[13:7-13:19][
		ListValue[13:8-15:13][Function[13:8-15:13][ =>
			ReturnStatement[14:3-14:11][Literal[14:10-14:11][1]]
		]]
	]]
	AssignmentStatement[17:1-21:13][Identifier[17:1-17:4][foo] = Function[17:7-21:13][ =>
		ReturnStatement[18:5-20:17][Function[18:12-20:17][ =>
			ReturnStatement[19:9-19:21][Literal[19:16-19:21][faa]]
		]]
	]]
	CallExpression[23:1-23:14][Identifier[23:1-23:6][print](CallExpression[23:7-23:14][CallExpression[23:7-23:12][Identifier[23:7-23:10][foo]()]()])]
]"
`;

exports[`parse default scripts anonymous-functions.ms 2`] = `undefined`;

exports[`parse default scripts anonymous-functions.ms 3`] = `8`;

exports[`parse default scripts anonymous-functions.ms 4`] = `5`;

exports[`parse default scripts anonymous-functions.ms unsafe 1`] = `
"Chunk[1:1-23:14][
	CallExpression[1:1-1:23][Identifier[1:1-1:4][Foo](Function[1:5-3:13][ =>
		ReturnStatement[2:3-2:11][Literal[2:10-2:11][1]]
	], Literal[1:17-1:23][test])]
	CallExpression[5:1-5:23][Identifier[5:1-5:4][Foo](Literal[5:5-5:11][test], Function[5:13-7:13][ =>
		ReturnStatement[6:3-6:11][Literal[6:10-6:11][1]]
	])]
	AssignmentStatement[9:1-9:27][Identifier[9:1-9:4][Foo] = MapConstructor[9:7-9:27][
		MapKeyString[9:8-11:13][Literal[9:8-9:14][test]: Function[9:16-11:13][ =>
			ReturnStatement[10:3-10:11][Literal[10:10-10:11][1]]
		]]
	]]
	AssignmentStatement[13:1-13:19][Identifier[13:1-13:4][Foo] = ListConstructor[13:7-13:19][
		ListValue[13:8-15:13][Function[13:8-15:13][ =>
			ReturnStatement[14:3-14:11][Literal[14:10-14:11][1]]
		]]
	]]
	AssignmentStatement[17:1-21:13][Identifier[17:1-17:4][foo] = Function[17:7-21:13][ =>
		ReturnStatement[18:5-20:17][Function[18:12-20:17][ =>
			ReturnStatement[19:9-19:21][Literal[19:16-19:21][faa]]
		]]
	]]
	CallExpression[23:1-23:14][Identifier[23:1-23:6][print](CallExpression[23:7-23:14][CallExpression[23:7-23:12][Identifier[23:7-23:10][foo]()]()])]
]"
`;

exports[`parse default scripts ascii.ms 1`] = `
"Chunk[1:1-71:29][
	AssignmentStatement[1:1-1:14][Identifier[1:1-1:9][AsciiGen] = MapConstructor[1:12-1:14][]]
	AssignmentStatement[3:1-3:9][Identifier[3:1-3:4][map] = MapConstructor[3:7-3:9][]]
	AssignmentStatement[5:1-5:39][MemberExpression[5:1-5:6][Identifier[5:1-5:4][map].Identifier[5:5-5:6][a]] = ListConstructor[5:9-5:39][
		ListValue[5:10-5:18][Literal[5:10-5:18][||¯|| ]]
		ListValue[5:20-5:28][Literal[5:20-5:28][||_|| ]]
		ListValue[5:30-5:38][Literal[5:30-5:38][|| || ]]
	]]
	AssignmentStatement[6:1-6:36][MemberExpression[6:1-6:6][Identifier[6:1-6:4][map].Identifier[6:5-6:6][b]] = ListConstructor[6:9-6:36][
		ListValue[6:10-6:17][Literal[6:10-6:17][||¯/ ]]
		ListValue[6:19-6:26][Literal[6:19-6:26][|| \\\\ ]]
		ListValue[6:28-6:35][Literal[6:28-6:35][||_/ ]]
	]]
	AssignmentStatement[7:1-7:33][MemberExpression[7:1-7:6][Identifier[7:1-7:4][map].Identifier[7:5-7:6][c]] = ListConstructor[7:9-7:33][
		ListValue[7:10-7:16][Literal[7:10-7:16][||¯ ]]
		ListValue[7:18-7:24][Literal[7:18-7:24][||  ]]
		ListValue[7:26-7:32][Literal[7:26-7:32][||_ ]]
	]]
	AssignmentStatement[8:1-8:39][MemberExpression[8:1-8:6][Identifier[8:1-8:4][map].Identifier[8:5-8:6][d]] = ListConstructor[8:9-8:39][
		ListValue[8:10-8:18][Literal[8:10-8:18][||¯\\\\\\\\ ]]
		ListValue[8:20-8:28][Literal[8:20-8:28][|| // ]]
		ListValue[8:30-8:38][Literal[8:30-8:38][||//  ]]
	]]
	AssignmentStatement[9:1-9:33][MemberExpression[9:1-9:6][Identifier[9:1-9:4][map].Identifier[9:5-9:6][e]] = ListConstructor[9:9-9:33][
		ListValue[9:10-9:16][Literal[9:10-9:16][||¯ ]]
		ListValue[9:18-9:24][Literal[9:18-9:24][||- ]]
		ListValue[9:26-9:32][Literal[9:26-9:32][||_ ]]
	]]
	AssignmentStatement[10:1-10:33][MemberExpression[10:1-10:6][Identifier[10:1-10:4][map].Identifier[10:5-10:6][f]] = ListConstructor[10:9-10:33][
		ListValue[10:10-10:16][Literal[10:10-10:16][||¯ ]]
		ListValue[10:18-10:24][Literal[10:18-10:24][||_ ]]
		ListValue[10:26-10:32][Literal[10:26-10:32][||  ]]
	]]
	AssignmentStatement[11:1-11:39][MemberExpression[11:1-11:6][Identifier[11:1-11:4][map].Identifier[11:5-11:6][g]] = ListConstructor[11:9-11:39][
		ListValue[11:10-11:18][Literal[11:10-11:18][||¯¯  ]]
		ListValue[11:20-11:28][Literal[11:20-11:28][|| \\\\\\\\ ]]
		ListValue[11:30-11:38][Literal[11:30-11:38][||_|| ]]
	]]
	AssignmentStatement[12:1-12:39][MemberExpression[12:1-12:6][Identifier[12:1-12:4][map].Identifier[12:5-12:6][h]] = ListConstructor[12:9-12:39][
		ListValue[12:10-12:18][Literal[12:10-12:18][|| || ]]
		ListValue[12:20-12:28][Literal[12:20-12:28][||-|| ]]
		ListValue[12:30-12:38][Literal[12:30-12:38][|| || ]]
	]]
	AssignmentStatement[13:1-13:30][MemberExpression[13:1-13:6][Identifier[13:1-13:4][map].Identifier[13:5-13:6][i]] = ListConstructor[13:9-13:30][
		ListValue[13:10-13:15][Literal[13:10-13:15][|| ]]
		ListValue[13:17-13:22][Literal[13:17-13:22][|| ]]
		ListValue[13:24-13:29][Literal[13:24-13:29][|| ]]
	]]
	AssignmentStatement[14:1-14:39][MemberExpression[14:1-14:6][Identifier[14:1-14:4][map].Identifier[14:5-14:6][j]] = ListConstructor[14:9-14:39][
		ListValue[14:10-14:18][Literal[14:10-14:18][ ¯||¯ ]]
		ListValue[14:20-14:28][Literal[14:20-14:28][  ||  ]]
		ListValue[14:30-14:38][Literal[14:30-14:38][|_||  ]]
	]]
	AssignmentStatement[15:1-15:39][MemberExpression[15:1-15:6][Identifier[15:1-15:4][map].Identifier[15:5-15:6][k]] = ListConstructor[15:9-15:39][
		ListValue[15:10-15:18][Literal[15:10-15:18][||  / ]]
		ListValue[15:20-15:28][Literal[15:20-15:28][|| /  ]]
		ListValue[15:30-15:38][Literal[15:30-15:38][||¯\\\\\\\\ ]]
	]]
	AssignmentStatement[16:1-16:33][MemberExpression[16:1-16:6][Identifier[16:1-16:4][map].Identifier[16:5-16:6][l]] = ListConstructor[16:9-16:33][
		ListValue[16:10-16:16][Literal[16:10-16:16][||  ]]
		ListValue[16:18-16:24][Literal[16:18-16:24][||  ]]
		ListValue[16:26-16:32][Literal[16:26-16:32][||_ ]]
	]]
	AssignmentStatement[17:1-17:45][MemberExpression[17:1-17:6][Identifier[17:1-17:4][map].Identifier[17:5-17:6][m]] = ListConstructor[17:9-17:45][
		ListValue[17:10-17:20][Literal[17:10-17:20][||\\\\\\\\/|| ]]
		ListValue[17:22-17:32][Literal[17:22-17:32][||   || ]]
		ListValue[17:34-17:44][Literal[17:34-17:44][||   || ]]
	]]
	AssignmentStatement[18:1-18:45][MemberExpression[18:1-18:6][Identifier[18:1-18:4][map].Identifier[18:5-18:6][n]] = ListConstructor[18:9-18:45][
		ListValue[18:10-18:20][Literal[18:10-18:20][||\\\\\\\\ || ]]
		ListValue[18:22-18:32][Literal[18:22-18:32][|| \\\\\\\\|| ]]
		ListValue[18:34-18:44][Literal[18:34-18:44][||  \\\\|| ]]
	]]
	AssignmentStatement[19:1-19:39][MemberExpression[19:1-19:6][Identifier[19:1-19:4][map].Identifier[19:5-19:6][o]] = ListConstructor[19:9-19:39][
		ListValue[19:10-19:18][Literal[19:10-19:18][||¯|| ]]
		ListValue[19:20-19:28][Literal[19:20-19:28][|| || ]]
		ListValue[19:30-19:38][Literal[19:30-19:38][||_|| ]]
	]]
	AssignmentStatement[20:1-20:39][MemberExpression[20:1-20:6][Identifier[20:1-20:4][map].Identifier[20:5-20:6][p]] = ListConstructor[20:9-20:39][
		ListValue[20:10-20:18][Literal[20:10-20:18][||¯|| ]]
		ListValue[20:20-20:28][Literal[20:20-20:28][||_|| ]]
		ListValue[20:30-20:38][Literal[20:30-20:38][||    ]]
	]]
	AssignmentStatement[21:1-21:42][MemberExpression[21:1-21:6][Identifier[21:1-21:4][map].Identifier[21:5-21:6][q]] = ListConstructor[21:9-21:42][
		ListValue[21:10-21:19][Literal[21:10-21:19][||¯||  ]]
		ListValue[21:21-21:30][Literal[21:21-21:30][|| ||  ]]
		ListValue[21:32-21:41][Literal[21:32-21:41][||_||¬ ]]
	]]
	AssignmentStatement[22:1-22:39][MemberExpression[22:1-22:6][Identifier[22:1-22:4][map].Identifier[22:5-22:6][r]] = ListConstructor[22:9-22:39][
		ListValue[22:10-22:18][Literal[22:10-22:18][||¯|| ]]
		ListValue[22:20-22:28][Literal[22:20-22:28][||¯\\\\\\\\ ]]
		ListValue[22:30-22:38][Literal[22:30-22:38][|| || ]]
	]]
	AssignmentStatement[23:1-23:36][MemberExpression[23:1-23:6][Identifier[23:1-23:4][map].Identifier[23:5-23:6][s]] = ListConstructor[23:9-23:36][
		ListValue[23:10-23:17][Literal[23:10-23:17][||¯¯ ]]
		ListValue[23:19-23:26][Literal[23:19-23:26][ \\\\\\\\  ]]
		ListValue[23:28-23:35][Literal[23:28-23:35][__|| ]]
	]]
	AssignmentStatement[24:1-24:36][MemberExpression[24:1-24:6][Identifier[24:1-24:4][map].Identifier[24:5-24:6][t]] = ListConstructor[24:9-24:36][
		ListValue[24:10-24:17][Literal[24:10-24:17][¯||¯ ]]
		ListValue[24:19-24:26][Literal[24:19-24:26][ ||  ]]
		ListValue[24:28-24:35][Literal[24:28-24:35][ ||  ]]
	]]
	AssignmentStatement[25:1-25:39][MemberExpression[25:1-25:6][Identifier[25:1-25:4][map].Identifier[25:5-25:6][u]] = ListConstructor[25:9-25:39][
		ListValue[25:10-25:18][Literal[25:10-25:18][|| || ]]
		ListValue[25:20-25:28][Literal[25:20-25:28][|| || ]]
		ListValue[25:30-25:38][Literal[25:30-25:38][||_|| ]]
	]]
	AssignmentStatement[26:1-26:39][MemberExpression[26:1-26:6][Identifier[26:1-26:4][map].Identifier[26:5-26:6][v]] = ListConstructor[26:9-26:39][
		ListValue[26:10-26:18][Literal[26:10-26:18][\\\\\\\\ || ]]
		ListValue[26:20-26:28][Literal[26:20-26:28][ \\\\\\\\|| ]]
		ListValue[26:30-26:38][Literal[26:30-26:38][  \\\\\\\\| ]]
	]]
	AssignmentStatement[27:1-27:48][MemberExpression[27:1-27:6][Identifier[27:1-27:4][map].Identifier[27:5-27:6][w]] = ListConstructor[27:9-27:48][
		ListValue[27:10-27:21][Literal[27:10-27:21][\\\\\\\\ |\\\\\\\\ | ]]
		ListValue[27:23-27:34][Literal[27:23-27:34][ \\\\\\\\| \\\\\\\\| ]]
		ListValue[27:36-27:47][Literal[27:36-27:47][  \\\\\\\\  \\\\\\\\ ]]
	]]
	AssignmentStatement[28:1-28:39][MemberExpression[28:1-28:6][Identifier[28:1-28:4][map].Identifier[28:5-28:6][x]] = ListConstructor[28:9-28:39][
		ListValue[28:10-28:18][Literal[28:10-28:18][\\\\\\\\  / ]]
		ListValue[28:20-28:28][Literal[28:20-28:28][ \\\\\\\\/  ]]
		ListValue[28:30-28:38][Literal[28:30-28:38][ //\\\\  ]]
	]]
	AssignmentStatement[29:1-29:42][MemberExpression[29:1-29:6][Identifier[29:1-29:4][map].Identifier[29:5-29:6][y]] = ListConstructor[29:9-29:42][
		ListValue[29:10-29:19][Literal[29:10-29:19][\\\\\\\\  // ]]
		ListValue[29:21-29:30][Literal[29:21-29:30][ \\\\\\\\//  ]]
		ListValue[29:32-29:41][Literal[29:32-29:41][  ||   ]]
	]]
	AssignmentStatement[30:1-30:33][MemberExpression[30:1-30:6][Identifier[30:1-30:4][map].Identifier[30:5-30:6][z]] = ListConstructor[30:9-30:33][
		ListValue[30:10-30:16][Literal[30:10-30:16][¯// ]]
		ListValue[30:18-30:24][Literal[30:18-30:24][//  ]]
		ListValue[30:26-30:32][Literal[30:26-30:32][||_ ]]
	]]
	AssignmentStatement[31:1-31:42][IndexExpression[31:1-31:9][Identifier[31:1-31:4][map][Literal[31:5-31:8][0]]] = ListConstructor[31:12-31:42][
		ListValue[31:13-31:21][Literal[31:13-31:21][||¯|| ]]
		ListValue[31:23-31:31][Literal[31:23-31:31][||x|| ]]
		ListValue[31:33-31:41][Literal[31:33-31:41][||_|| ]]
	]]
	AssignmentStatement[32:1-32:36][IndexExpression[32:1-32:9][Identifier[32:1-32:4][map][Literal[32:5-32:8][1]]] = ListConstructor[32:12-32:36][
		ListValue[32:13-32:19][Literal[32:13-32:19]['|| ]]
		ListValue[32:21-32:27][Literal[32:21-32:27][ || ]]
		ListValue[32:29-32:35][Literal[32:29-32:35][ || ]]
	]]
	AssignmentStatement[33:1-33:39][IndexExpression[33:1-33:9][Identifier[33:1-33:4][map][Literal[33:5-33:8][2]]] = ListConstructor[33:12-33:39][
		ListValue[33:13-33:20][Literal[33:13-33:20][¯¯|| ]]
		ListValue[33:22-33:29][Literal[33:22-33:29][||¯  ]]
		ListValue[33:31-33:38][Literal[33:31-33:38][||_  ]]
	]]
	AssignmentStatement[34:1-34:36][IndexExpression[34:1-34:9][Identifier[34:1-34:4][map][Literal[34:5-34:8][3]]] = ListConstructor[34:12-34:36][
		ListValue[34:13-34:19][Literal[34:13-34:19][¯|| ]]
		ListValue[34:21-34:27][Literal[34:21-34:27][-|| ]]
		ListValue[34:29-34:35][Literal[34:29-34:35][_|| ]]
	]]
	AssignmentStatement[35:1-35:39][IndexExpression[35:1-35:9][Identifier[35:1-35:4][map][Literal[35:5-35:8][4]]] = ListConstructor[35:12-35:39][
		ListValue[35:13-35:20][Literal[35:13-35:20][ /|| ]]
		ListValue[35:22-35:29][Literal[35:22-35:29][/_|| ]]
		ListValue[35:31-35:38][Literal[35:31-35:38][  || ]]
	]]
	AssignmentStatement[36:1-36:39][IndexExpression[36:1-36:9][Identifier[36:1-36:4][map][Literal[36:5-36:8][5]]] = ListConstructor[36:12-36:39][
		ListValue[36:13-36:20][Literal[36:13-36:20][||¯¯ ]]
		ListValue[36:22-36:29][Literal[36:22-36:29][ ¯|| ]]
		ListValue[36:31-36:38][Literal[36:31-36:38][ _|| ]]
	]]
	AssignmentStatement[37:1-37:42][IndexExpression[37:1-37:9][Identifier[37:1-37:4][map][Literal[37:5-37:8][6]]] = ListConstructor[37:12-37:42][
		ListValue[37:13-37:21][Literal[37:13-37:21][||¯¯  ]]
		ListValue[37:23-37:31][Literal[37:23-37:31][||¯|| ]]
		ListValue[37:33-37:41][Literal[37:33-37:41][||_|| ]]
	]]
	AssignmentStatement[38:1-38:39][IndexExpression[38:1-38:9][Identifier[38:1-38:4][map][Literal[38:5-38:8][7]]] = ListConstructor[38:12-38:39][
		ListValue[38:13-38:20][Literal[38:13-38:20][¯¯// ]]
		ListValue[38:22-38:29][Literal[38:22-38:29][ //  ]]
		ListValue[38:31-38:38][Literal[38:31-38:38][//   ]]
	]]
	AssignmentStatement[39:1-39:42][IndexExpression[39:1-39:9][Identifier[39:1-39:4][map][Literal[39:5-39:8][8]]] = ListConstructor[39:12-39:42][
		ListValue[39:13-39:21][Literal[39:13-39:21][||¯|| ]]
		ListValue[39:23-39:31][Literal[39:23-39:31][||-|| ]]
		ListValue[39:33-39:41][Literal[39:33-39:41][||_|| ]]
	]]
	AssignmentStatement[40:1-40:42][IndexExpression[40:1-40:9][Identifier[40:1-40:4][map][Literal[40:5-40:8][9]]] = ListConstructor[40:12-40:42][
		ListValue[40:13-40:21][Literal[40:13-40:21][||¯|| ]]
		ListValue[40:23-40:31][Literal[40:23-40:31][  ¯|| ]]
		ListValue[40:33-40:41][Literal[40:33-40:41][  //  ]]
	]]
	AssignmentStatement[41:1-41:30][IndexExpression[41:1-41:9][Identifier[41:1-41:4][map][Literal[41:5-41:8][ ]]] = ListConstructor[41:12-41:30][
		ListValue[41:13-41:17][Literal[41:13-41:17][  ]]
		ListValue[41:19-41:23][Literal[41:19-41:23][  ]]
		ListValue[41:25-41:29][Literal[41:25-41:29][  ]]
	]]
	AssignmentStatement[43:1-43:19][MemberExpression[43:1-43:13][Identifier[43:1-43:9][AsciiGen].Identifier[43:10-43:13][MAP]] = Identifier[43:16-43:19][map]]
	AssignmentStatement[45:1-69:13][MemberExpression[45:1-45:13][Identifier[45:1-45:9][AsciiGen].Identifier[45:10-45:13][gen]] = Function[45:16-69:13][Identifier[45:25-45:28][str], Identifier[45:30-45:36][colors] =>
		AssignmentStatement[46:3-46:19][Identifier[46:3-46:4][r] = ListConstructor[46:7-46:19][
			ListValue[46:8-46:10][ListConstructor[46:8-46:10][]]
			ListValue[46:12-46:14][ListConstructor[46:12-46:14][]]
			ListValue[46:16-46:18][ListConstructor[46:16-46:18][]]
		]]
		AssignmentStatement[47:3-47:19][Identifier[47:3-47:8][signs] = MemberExpression[47:11-47:19][Identifier[47:11-47:15][self].Identifier[47:16-47:19][MAP]]]
		For[49:3-56:10][Identifier[49:7-49:11][char] in Identifier[49:15-49:18][str]
			AssignmentStatement[50:5-50:22][Identifier[50:5-50:9][char] = MemberExpression[50:12-50:22][Identifier[50:12-50:16][char].Identifier[50:17-50:22][lower]]]
			IfStatement[51:5-55:11][
				IfClause[51:5-55:11][CallExpression[51:9-51:29][MemberExpression[51:9-51:23][Identifier[51:9-51:14][signs].Identifier[51:15-51:23][hasIndex]](Identifier[51:24-51:28][char])]
					CallExpression[52:7-52:32][MemberExpression[52:7-52:16][IndexExpression[52:7-52:11][Identifier[52:7-52:8][r][Literal[52:9-52:10][0]]].Identifier[52:12-52:16][push]](IndexExpression[52:17-52:31][IndexExpression[52:17-52:28][Identifier[52:17-52:22][signs][Identifier[52:23-52:27][char]]][Literal[52:29-52:30][0]]])]
					CallExpression[53:7-53:32][MemberExpression[53:7-53:16][IndexExpression[53:7-53:11][Identifier[53:7-53:8][r][Literal[53:9-53:10][1]]].Identifier[53:12-53:16][push]](IndexExpression[53:17-53:31][IndexExpression[53:17-53:28][Identifier[53:17-53:22][signs][Identifier[53:23-53:27][char]]][Literal[53:29-53:30][1]]])]
					CallExpression[54:7-54:32][MemberExpression[54:7-54:16][IndexExpression[54:7-54:11][Identifier[54:7-54:8][r][Literal[54:9-54:10][2]]].Identifier[54:12-54:16][push]](IndexExpression[54:17-54:31][IndexExpression[54:17-54:28][Identifier[54:17-54:22][signs][Identifier[54:23-54:27][char]]][Literal[54:29-54:30][2]]])]
				]
			]
		]
		IfStatement[58:3-66:9][
			IfClause[58:3-62:10][BinaryExpression[58:7-58:33][CallExpression[58:7-58:21][Identifier[58:7-58:13][typeof](Identifier[58:14-58:20][colors])] == Literal[58:25-58:33][string]]
				AssignmentStatement[59:5-59:61][IndexExpression[59:5-59:9][Identifier[59:5-59:6][r][Literal[59:7-59:8][0]]] = BinaryExpression[59:12-59:61][BinaryExpression[59:12-59:46][ListConstructor[59:12-59:40][
					ListValue[59:13-59:38][BinaryExpression[59:13-59:38][BinaryExpression[59:13-59:32][Literal[59:13-59:23][<color=#] + Identifier[59:26-59:32][colors]] + Literal[59:35-59:38][>]]]
				] + IndexExpression[59:42-59:46][Identifier[59:42-59:43][r][Literal[59:44-59:45][0]]]] + ListConstructor[59:49-59:61][
					ListValue[59:50-59:60][Literal[59:50-59:60][</color>]]
				]]]
				AssignmentStatement[60:5-60:61][IndexExpression[60:5-60:9][Identifier[60:5-60:6][r][Literal[60:7-60:8][1]]] = BinaryExpression[60:12-60:61][BinaryExpression[60:12-60:46][ListConstructor[60:12-60:40][
					ListValue[60:13-60:38][BinaryExpression[60:13-60:38][BinaryExpression[60:13-60:32][Literal[60:13-60:23][<color=#] + Identifier[60:26-60:32][colors]] + Literal[60:35-60:38][>]]]
				] + IndexExpression[60:42-60:46][Identifier[60:42-60:43][r][Literal[60:44-60:45][1]]]] + ListConstructor[60:49-60:61][
					ListValue[60:50-60:60][Literal[60:50-60:60][</color>]]
				]]]
				AssignmentStatement[61:5-61:61][IndexExpression[61:5-61:9][Identifier[61:5-61:6][r][Literal[61:7-61:8][2]]] = BinaryExpression[61:12-61:61][BinaryExpression[61:12-61:46][ListConstructor[61:12-61:40][
					ListValue[61:13-61:38][BinaryExpression[61:13-61:38][BinaryExpression[61:13-61:32][Literal[61:13-61:23][<color=#] + Identifier[61:26-61:32][colors]] + Literal[61:35-61:38][>]]]
				] + IndexExpression[61:42-61:46][Identifier[61:42-61:43][r][Literal[61:44-61:45][2]]]] + ListConstructor[61:49-61:61][
					ListValue[61:50-61:60][Literal[61:50-61:60][</color>]]
				]]]
			]
			ElseifClause[62:11-66:9][BinaryExpression[62:12-62:36][CallExpression[62:12-62:26][Identifier[62:12-62:18][typeof](Identifier[62:19-62:25][colors])] == Literal[62:30-62:36][list]]
				AssignmentStatement[63:5-63:64][IndexExpression[63:5-63:9][Identifier[63:5-63:6][r][Literal[63:7-63:8][0]]] = BinaryExpression[63:12-63:64][BinaryExpression[63:12-63:49][ListConstructor[63:12-63:43][
					ListValue[63:13-63:41][BinaryExpression[63:13-63:41][BinaryExpression[63:13-63:35][Literal[63:13-63:23][<color=#] + IndexExpression[63:26-63:35][Identifier[63:26-63:32][colors][Literal[63:33-63:34][0]]]] + Literal[63:38-63:41][>]]]
				] + IndexExpression[63:45-63:49][Identifier[63:45-63:46][r][Literal[63:47-63:48][0]]]] + ListConstructor[63:52-63:64][
					ListValue[63:53-63:63][Literal[63:53-63:63][</color>]]
				]]]
				AssignmentStatement[64:5-64:64][IndexExpression[64:5-64:9][Identifier[64:5-64:6][r][Literal[64:7-64:8][1]]] = BinaryExpression[64:12-64:64][BinaryExpression[64:12-64:49][ListConstructor[64:12-64:43][
					ListValue[64:13-64:41][BinaryExpression[64:13-64:41][BinaryExpression[64:13-64:35][Literal[64:13-64:23][<color=#] + IndexExpression[64:26-64:35][Identifier[64:26-64:32][colors][Literal[64:33-64:34][1]]]] + Literal[64:38-64:41][>]]]
				] + IndexExpression[64:45-64:49][Identifier[64:45-64:46][r][Literal[64:47-64:48][1]]]] + ListConstructor[64:52-64:64][
					ListValue[64:53-64:63][Literal[64:53-64:63][</color>]]
				]]]
				AssignmentStatement[65:5-65:64][IndexExpression[65:5-65:9][Identifier[65:5-65:6][r][Literal[65:7-65:8][2]]] = BinaryExpression[65:12-65:64][BinaryExpression[65:12-65:49][ListConstructor[65:12-65:43][
					ListValue[65:13-65:41][BinaryExpression[65:13-65:41][BinaryExpression[65:13-65:35][Literal[65:13-65:23][<color=#] + IndexExpression[65:26-65:35][Identifier[65:26-65:32][colors][Literal[65:33-65:34][2]]]] + Literal[65:38-65:41][>]]]
				] + IndexExpression[65:45-65:49][Identifier[65:45-65:46][r][Literal[65:47-65:48][2]]]] + ListConstructor[65:52-65:64][
					ListValue[65:53-65:63][Literal[65:53-65:63][</color>]]
				]]]
			]
		]
		ReturnStatement[68:3-68:66][CallExpression[68:10-68:66][MemberExpression[68:10-68:60][ListConstructor[68:10-68:55][
			ListValue[68:11-68:24][CallExpression[68:11-68:24][MemberExpression[68:11-68:20][IndexExpression[68:11-68:15][Identifier[68:11-68:12][r][Literal[68:13-68:14][0]]].Identifier[68:16-68:20][join]](Literal[68:21-68:23][])]]
			ListValue[68:26-68:39][CallExpression[68:26-68:39][MemberExpression[68:26-68:35][IndexExpression[68:26-68:30][Identifier[68:26-68:27][r][Literal[68:28-68:29][1]]].Identifier[68:31-68:35][join]](Literal[68:36-68:38][])]]
			ListValue[68:41-68:54][CallExpression[68:41-68:54][MemberExpression[68:41-68:50][IndexExpression[68:41-68:45][Identifier[68:41-68:42][r][Literal[68:43-68:44][2]]].Identifier[68:46-68:50][join]](Literal[68:51-68:53][])]]
		].Identifier[68:56-68:60][join]](Literal[68:61-68:65][\\\\n])]]
	]]
	CallExpression[71:1-71:29][Identifier[71:1-71:6][print](CallExpression[71:7-71:28][MemberExpression[71:7-71:19][Identifier[71:7-71:15][AsciiGen].Identifier[71:16-71:19][gen]](Literal[71:20-71:27][Hallo])])]
]"
`;

exports[`parse default scripts ascii.ms 2`] = `undefined`;

exports[`parse default scripts ascii.ms 3`] = `171`;

exports[`parse default scripts ascii.ms 4`] = `152`;

exports[`parse default scripts ascii.ms unsafe 1`] = `
"Chunk[1:1-71:29][
	AssignmentStatement[1:1-1:14][Identifier[1:1-1:9][AsciiGen] = MapConstructor[1:12-1:14][]]
	AssignmentStatement[3:1-3:9][Identifier[3:1-3:4][map] = MapConstructor[3:7-3:9][]]
	AssignmentStatement[5:1-5:39][MemberExpression[5:1-5:6][Identifier[5:1-5:4][map].Identifier[5:5-5:6][a]] = ListConstructor[5:9-5:39][
		ListValue[5:10-5:18][Literal[5:10-5:18][||¯|| ]]
		ListValue[5:20-5:28][Literal[5:20-5:28][||_|| ]]
		ListValue[5:30-5:38][Literal[5:30-5:38][|| || ]]
	]]
	AssignmentStatement[6:1-6:36][MemberExpression[6:1-6:6][Identifier[6:1-6:4][map].Identifier[6:5-6:6][b]] = ListConstructor[6:9-6:36][
		ListValue[6:10-6:17][Literal[6:10-6:17][||¯/ ]]
		ListValue[6:19-6:26][Literal[6:19-6:26][|| \\\\ ]]
		ListValue[6:28-6:35][Literal[6:28-6:35][||_/ ]]
	]]
	AssignmentStatement[7:1-7:33][MemberExpression[7:1-7:6][Identifier[7:1-7:4][map].Identifier[7:5-7:6][c]] = ListConstructor[7:9-7:33][
		ListValue[7:10-7:16][Literal[7:10-7:16][||¯ ]]
		ListValue[7:18-7:24][Literal[7:18-7:24][||  ]]
		ListValue[7:26-7:32][Literal[7:26-7:32][||_ ]]
	]]
	AssignmentStatement[8:1-8:39][MemberExpression[8:1-8:6][Identifier[8:1-8:4][map].Identifier[8:5-8:6][d]] = ListConstructor[8:9-8:39][
		ListValue[8:10-8:18][Literal[8:10-8:18][||¯\\\\\\\\ ]]
		ListValue[8:20-8:28][Literal[8:20-8:28][|| // ]]
		ListValue[8:30-8:38][Literal[8:30-8:38][||//  ]]
	]]
	AssignmentStatement[9:1-9:33][MemberExpression[9:1-9:6][Identifier[9:1-9:4][map].Identifier[9:5-9:6][e]] = ListConstructor[9:9-9:33][
		ListValue[9:10-9:16][Literal[9:10-9:16][||¯ ]]
		ListValue[9:18-9:24][Literal[9:18-9:24][||- ]]
		ListValue[9:26-9:32][Literal[9:26-9:32][||_ ]]
	]]
	AssignmentStatement[10:1-10:33][MemberExpression[10:1-10:6][Identifier[10:1-10:4][map].Identifier[10:5-10:6][f]] = ListConstructor[10:9-10:33][
		ListValue[10:10-10:16][Literal[10:10-10:16][||¯ ]]
		ListValue[10:18-10:24][Literal[10:18-10:24][||_ ]]
		ListValue[10:26-10:32][Literal[10:26-10:32][||  ]]
	]]
	AssignmentStatement[11:1-11:39][MemberExpression[11:1-11:6][Identifier[11:1-11:4][map].Identifier[11:5-11:6][g]] = ListConstructor[11:9-11:39][
		ListValue[11:10-11:18][Literal[11:10-11:18][||¯¯  ]]
		ListValue[11:20-11:28][Literal[11:20-11:28][|| \\\\\\\\ ]]
		ListValue[11:30-11:38][Literal[11:30-11:38][||_|| ]]
	]]
	AssignmentStatement[12:1-12:39][MemberExpression[12:1-12:6][Identifier[12:1-12:4][map].Identifier[12:5-12:6][h]] = ListConstructor[12:9-12:39][
		ListValue[12:10-12:18][Literal[12:10-12:18][|| || ]]
		ListValue[12:20-12:28][Literal[12:20-12:28][||-|| ]]
		ListValue[12:30-12:38][Literal[12:30-12:38][|| || ]]
	]]
	AssignmentStatement[13:1-13:30][MemberExpression[13:1-13:6][Identifier[13:1-13:4][map].Identifier[13:5-13:6][i]] = ListConstructor[13:9-13:30][
		ListValue[13:10-13:15][Literal[13:10-13:15][|| ]]
		ListValue[13:17-13:22][Literal[13:17-13:22][|| ]]
		ListValue[13:24-13:29][Literal[13:24-13:29][|| ]]
	]]
	AssignmentStatement[14:1-14:39][MemberExpression[14:1-14:6][Identifier[14:1-14:4][map].Identifier[14:5-14:6][j]] = ListConstructor[14:9-14:39][
		ListValue[14:10-14:18][Literal[14:10-14:18][ ¯||¯ ]]
		ListValue[14:20-14:28][Literal[14:20-14:28][  ||  ]]
		ListValue[14:30-14:38][Literal[14:30-14:38][|_||  ]]
	]]
	AssignmentStatement[15:1-15:39][MemberExpression[15:1-15:6][Identifier[15:1-15:4][map].Identifier[15:5-15:6][k]] = ListConstructor[15:9-15:39][
		ListValue[15:10-15:18][Literal[15:10-15:18][||  / ]]
		ListValue[15:20-15:28][Literal[15:20-15:28][|| /  ]]
		ListValue[15:30-15:38][Literal[15:30-15:38][||¯\\\\\\\\ ]]
	]]
	AssignmentStatement[16:1-16:33][MemberExpression[16:1-16:6][Identifier[16:1-16:4][map].Identifier[16:5-16:6][l]] = ListConstructor[16:9-16:33][
		ListValue[16:10-16:16][Literal[16:10-16:16][||  ]]
		ListValue[16:18-16:24][Literal[16:18-16:24][||  ]]
		ListValue[16:26-16:32][Literal[16:26-16:32][||_ ]]
	]]
	AssignmentStatement[17:1-17:45][MemberExpression[17:1-17:6][Identifier[17:1-17:4][map].Identifier[17:5-17:6][m]] = ListConstructor[17:9-17:45][
		ListValue[17:10-17:20][Literal[17:10-17:20][||\\\\\\\\/|| ]]
		ListValue[17:22-17:32][Literal[17:22-17:32][||   || ]]
		ListValue[17:34-17:44][Literal[17:34-17:44][||   || ]]
	]]
	AssignmentStatement[18:1-18:45][MemberExpression[18:1-18:6][Identifier[18:1-18:4][map].Identifier[18:5-18:6][n]] = ListConstructor[18:9-18:45][
		ListValue[18:10-18:20][Literal[18:10-18:20][||\\\\\\\\ || ]]
		ListValue[18:22-18:32][Literal[18:22-18:32][|| \\\\\\\\|| ]]
		ListValue[18:34-18:44][Literal[18:34-18:44][||  \\\\|| ]]
	]]
	AssignmentStatement[19:1-19:39][MemberExpression[19:1-19:6][Identifier[19:1-19:4][map].Identifier[19:5-19:6][o]] = ListConstructor[19:9-19:39][
		ListValue[19:10-19:18][Literal[19:10-19:18][||¯|| ]]
		ListValue[19:20-19:28][Literal[19:20-19:28][|| || ]]
		ListValue[19:30-19:38][Literal[19:30-19:38][||_|| ]]
	]]
	AssignmentStatement[20:1-20:39][MemberExpression[20:1-20:6][Identifier[20:1-20:4][map].Identifier[20:5-20:6][p]] = ListConstructor[20:9-20:39][
		ListValue[20:10-20:18][Literal[20:10-20:18][||¯|| ]]
		ListValue[20:20-20:28][Literal[20:20-20:28][||_|| ]]
		ListValue[20:30-20:38][Literal[20:30-20:38][||    ]]
	]]
	AssignmentStatement[21:1-21:42][MemberExpression[21:1-21:6][Identifier[21:1-21:4][map].Identifier[21:5-21:6][q]] = ListConstructor[21:9-21:42][
		ListValue[21:10-21:19][Literal[21:10-21:19][||¯||  ]]
		ListValue[21:21-21:30][Literal[21:21-21:30][|| ||  ]]
		ListValue[21:32-21:41][Literal[21:32-21:41][||_||¬ ]]
	]]
	AssignmentStatement[22:1-22:39][MemberExpression[22:1-22:6][Identifier[22:1-22:4][map].Identifier[22:5-22:6][r]] = ListConstructor[22:9-22:39][
		ListValue[22:10-22:18][Literal[22:10-22:18][||¯|| ]]
		ListValue[22:20-22:28][Literal[22:20-22:28][||¯\\\\\\\\ ]]
		ListValue[22:30-22:38][Literal[22:30-22:38][|| || ]]
	]]
	AssignmentStatement[23:1-23:36][MemberExpression[23:1-23:6][Identifier[23:1-23:4][map].Identifier[23:5-23:6][s]] = ListConstructor[23:9-23:36][
		ListValue[23:10-23:17][Literal[23:10-23:17][||¯¯ ]]
		ListValue[23:19-23:26][Literal[23:19-23:26][ \\\\\\\\  ]]
		ListValue[23:28-23:35][Literal[23:28-23:35][__|| ]]
	]]
	AssignmentStatement[24:1-24:36][MemberExpression[24:1-24:6][Identifier[24:1-24:4][map].Identifier[24:5-24:6][t]] = ListConstructor[24:9-24:36][
		ListValue[24:10-24:17][Literal[24:10-24:17][¯||¯ ]]
		ListValue[24:19-24:26][Literal[24:19-24:26][ ||  ]]
		ListValue[24:28-24:35][Literal[24:28-24:35][ ||  ]]
	]]
	AssignmentStatement[25:1-25:39][MemberExpression[25:1-25:6][Identifier[25:1-25:4][map].Identifier[25:5-25:6][u]] = ListConstructor[25:9-25:39][
		ListValue[25:10-25:18][Literal[25:10-25:18][|| || ]]
		ListValue[25:20-25:28][Literal[25:20-25:28][|| || ]]
		ListValue[25:30-25:38][Literal[25:30-25:38][||_|| ]]
	]]
	AssignmentStatement[26:1-26:39][MemberExpression[26:1-26:6][Identifier[26:1-26:4][map].Identifier[26:5-26:6][v]] = ListConstructor[26:9-26:39][
		ListValue[26:10-26:18][Literal[26:10-26:18][\\\\\\\\ || ]]
		ListValue[26:20-26:28][Literal[26:20-26:28][ \\\\\\\\|| ]]
		ListValue[26:30-26:38][Literal[26:30-26:38][  \\\\\\\\| ]]
	]]
	AssignmentStatement[27:1-27:48][MemberExpression[27:1-27:6][Identifier[27:1-27:4][map].Identifier[27:5-27:6][w]] = ListConstructor[27:9-27:48][
		ListValue[27:10-27:21][Literal[27:10-27:21][\\\\\\\\ |\\\\\\\\ | ]]
		ListValue[27:23-27:34][Literal[27:23-27:34][ \\\\\\\\| \\\\\\\\| ]]
		ListValue[27:36-27:47][Literal[27:36-27:47][  \\\\\\\\  \\\\\\\\ ]]
	]]
	AssignmentStatement[28:1-28:39][MemberExpression[28:1-28:6][Identifier[28:1-28:4][map].Identifier[28:5-28:6][x]] = ListConstructor[28:9-28:39][
		ListValue[28:10-28:18][Literal[28:10-28:18][\\\\\\\\  / ]]
		ListValue[28:20-28:28][Literal[28:20-28:28][ \\\\\\\\/  ]]
		ListValue[28:30-28:38][Literal[28:30-28:38][ //\\\\  ]]
	]]
	AssignmentStatement[29:1-29:42][MemberExpression[29:1-29:6][Identifier[29:1-29:4][map].Identifier[29:5-29:6][y]] = ListConstructor[29:9-29:42][
		ListValue[29:10-29:19][Literal[29:10-29:19][\\\\\\\\  // ]]
		ListValue[29:21-29:30][Literal[29:21-29:30][ \\\\\\\\//  ]]
		ListValue[29:32-29:41][Literal[29:32-29:41][  ||   ]]
	]]
	AssignmentStatement[30:1-30:33][MemberExpression[30:1-30:6][Identifier[30:1-30:4][map].Identifier[30:5-30:6][z]] = ListConstructor[30:9-30:33][
		ListValue[30:10-30:16][Literal[30:10-30:16][¯// ]]
		ListValue[30:18-30:24][Literal[30:18-30:24][//  ]]
		ListValue[30:26-30:32][Literal[30:26-30:32][||_ ]]
	]]
	AssignmentStatement[31:1-31:42][IndexExpression[31:1-31:9][Identifier[31:1-31:4][map][Literal[31:5-31:8][0]]] = ListConstructor[31:12-31:42][
		ListValue[31:13-31:21][Literal[31:13-31:21][||¯|| ]]
		ListValue[31:23-31:31][Literal[31:23-31:31][||x|| ]]
		ListValue[31:33-31:41][Literal[31:33-31:41][||_|| ]]
	]]
	AssignmentStatement[32:1-32:36][IndexExpression[32:1-32:9][Identifier[32:1-32:4][map][Literal[32:5-32:8][1]]] = ListConstructor[32:12-32:36][
		ListValue[32:13-32:19][Literal[32:13-32:19]['|| ]]
		ListValue[32:21-32:27][Literal[32:21-32:27][ || ]]
		ListValue[32:29-32:35][Literal[32:29-32:35][ || ]]
	]]
	AssignmentStatement[33:1-33:39][IndexExpression[33:1-33:9][Identifier[33:1-33:4][map][Literal[33:5-33:8][2]]] = ListConstructor[33:12-33:39][
		ListValue[33:13-33:20][Literal[33:13-33:20][¯¯|| ]]
		ListValue[33:22-33:29][Literal[33:22-33:29][||¯  ]]
		ListValue[33:31-33:38][Literal[33:31-33:38][||_  ]]
	]]
	AssignmentStatement[34:1-34:36][IndexExpression[34:1-34:9][Identifier[34:1-34:4][map][Literal[34:5-34:8][3]]] = ListConstructor[34:12-34:36][
		ListValue[34:13-34:19][Literal[34:13-34:19][¯|| ]]
		ListValue[34:21-34:27][Literal[34:21-34:27][-|| ]]
		ListValue[34:29-34:35][Literal[34:29-34:35][_|| ]]
	]]
	AssignmentStatement[35:1-35:39][IndexExpression[35:1-35:9][Identifier[35:1-35:4][map][Literal[35:5-35:8][4]]] = ListConstructor[35:12-35:39][
		ListValue[35:13-35:20][Literal[35:13-35:20][ /|| ]]
		ListValue[35:22-35:29][Literal[35:22-35:29][/_|| ]]
		ListValue[35:31-35:38][Literal[35:31-35:38][  || ]]
	]]
	AssignmentStatement[36:1-36:39][IndexExpression[36:1-36:9][Identifier[36:1-36:4][map][Literal[36:5-36:8][5]]] = ListConstructor[36:12-36:39][
		ListValue[36:13-36:20][Literal[36:13-36:20][||¯¯ ]]
		ListValue[36:22-36:29][Literal[36:22-36:29][ ¯|| ]]
		ListValue[36:31-36:38][Literal[36:31-36:38][ _|| ]]
	]]
	AssignmentStatement[37:1-37:42][IndexExpression[37:1-37:9][Identifier[37:1-37:4][map][Literal[37:5-37:8][6]]] = ListConstructor[37:12-37:42][
		ListValue[37:13-37:21][Literal[37:13-37:21][||¯¯  ]]
		ListValue[37:23-37:31][Literal[37:23-37:31][||¯|| ]]
		ListValue[37:33-37:41][Literal[37:33-37:41][||_|| ]]
	]]
	AssignmentStatement[38:1-38:39][IndexExpression[38:1-38:9][Identifier[38:1-38:4][map][Literal[38:5-38:8][7]]] = ListConstructor[38:12-38:39][
		ListValue[38:13-38:20][Literal[38:13-38:20][¯¯// ]]
		ListValue[38:22-38:29][Literal[38:22-38:29][ //  ]]
		ListValue[38:31-38:38][Literal[38:31-38:38][//   ]]
	]]
	AssignmentStatement[39:1-39:42][IndexExpression[39:1-39:9][Identifier[39:1-39:4][map][Literal[39:5-39:8][8]]] = ListConstructor[39:12-39:42][
		ListValue[39:13-39:21][Literal[39:13-39:21][||¯|| ]]
		ListValue[39:23-39:31][Literal[39:23-39:31][||-|| ]]
		ListValue[39:33-39:41][Literal[39:33-39:41][||_|| ]]
	]]
	AssignmentStatement[40:1-40:42][IndexExpression[40:1-40:9][Identifier[40:1-40:4][map][Literal[40:5-40:8][9]]] = ListConstructor[40:12-40:42][
		ListValue[40:13-40:21][Literal[40:13-40:21][||¯|| ]]
		ListValue[40:23-40:31][Literal[40:23-40:31][  ¯|| ]]
		ListValue[40:33-40:41][Literal[40:33-40:41][  //  ]]
	]]
	AssignmentStatement[41:1-41:30][IndexExpression[41:1-41:9][Identifier[41:1-41:4][map][Literal[41:5-41:8][ ]]] = ListConstructor[41:12-41:30][
		ListValue[41:13-41:17][Literal[41:13-41:17][  ]]
		ListValue[41:19-41:23][Literal[41:19-41:23][  ]]
		ListValue[41:25-41:29][Literal[41:25-41:29][  ]]
	]]
	AssignmentStatement[43:1-43:19][MemberExpression[43:1-43:13][Identifier[43:1-43:9][AsciiGen].Identifier[43:10-43:13][MAP]] = Identifier[43:16-43:19][map]]
	AssignmentStatement[45:1-69:13][MemberExpression[45:1-45:13][Identifier[45:1-45:9][AsciiGen].Identifier[45:10-45:13][gen]] = Function[45:16-69:13][Identifier[45:25-45:28][str], Identifier[45:30-45:36][colors] =>
		AssignmentStatement[46:3-46:19][Identifier[46:3-46:4][r] = ListConstructor[46:7-46:19][
			ListValue[46:8-46:10][ListConstructor[46:8-46:10][]]
			ListValue[46:12-46:14][ListConstructor[46:12-46:14][]]
			ListValue[46:16-46:18][ListConstructor[46:16-46:18][]]
		]]
		AssignmentStatement[47:3-47:19][Identifier[47:3-47:8][signs] = MemberExpression[47:11-47:19][Identifier[47:11-47:15][self].Identifier[47:16-47:19][MAP]]]
		For[49:3-56:10][Identifier[49:7-49:11][char] in Identifier[49:15-49:18][str]
			AssignmentStatement[50:5-50:22][Identifier[50:5-50:9][char] = MemberExpression[50:12-50:22][Identifier[50:12-50:16][char].Identifier[50:17-50:22][lower]]]
			IfStatement[51:5-55:11][
				IfClause[51:5-55:11][CallExpression[51:9-51:29][MemberExpression[51:9-51:23][Identifier[51:9-51:14][signs].Identifier[51:15-51:23][hasIndex]](Identifier[51:24-51:28][char])]
					CallExpression[52:7-52:32][MemberExpression[52:7-52:16][IndexExpression[52:7-52:11][Identifier[52:7-52:8][r][Literal[52:9-52:10][0]]].Identifier[52:12-52:16][push]](IndexExpression[52:17-52:31][IndexExpression[52:17-52:28][Identifier[52:17-52:22][signs][Identifier[52:23-52:27][char]]][Literal[52:29-52:30][0]]])]
					CallExpression[53:7-53:32][MemberExpression[53:7-53:16][IndexExpression[53:7-53:11][Identifier[53:7-53:8][r][Literal[53:9-53:10][1]]].Identifier[53:12-53:16][push]](IndexExpression[53:17-53:31][IndexExpression[53:17-53:28][Identifier[53:17-53:22][signs][Identifier[53:23-53:27][char]]][Literal[53:29-53:30][1]]])]
					CallExpression[54:7-54:32][MemberExpression[54:7-54:16][IndexExpression[54:7-54:11][Identifier[54:7-54:8][r][Literal[54:9-54:10][2]]].Identifier[54:12-54:16][push]](IndexExpression[54:17-54:31][IndexExpression[54:17-54:28][Identifier[54:17-54:22][signs][Identifier[54:23-54:27][char]]][Literal[54:29-54:30][2]]])]
				]
			]
		]
		IfStatement[58:3-66:9][
			IfClause[58:3-62:10][BinaryExpression[58:7-58:33][CallExpression[58:7-58:21][Identifier[58:7-58:13][typeof](Identifier[58:14-58:20][colors])] == Literal[58:25-58:33][string]]
				AssignmentStatement[59:5-59:61][IndexExpression[59:5-59:9][Identifier[59:5-59:6][r][Literal[59:7-59:8][0]]] = BinaryExpression[59:12-59:61][BinaryExpression[59:12-59:46][ListConstructor[59:12-59:40][
					ListValue[59:13-59:38][BinaryExpression[59:13-59:38][BinaryExpression[59:13-59:32][Literal[59:13-59:23][<color=#] + Identifier[59:26-59:32][colors]] + Literal[59:35-59:38][>]]]
				] + IndexExpression[59:42-59:46][Identifier[59:42-59:43][r][Literal[59:44-59:45][0]]]] + ListConstructor[59:49-59:61][
					ListValue[59:50-59:60][Literal[59:50-59:60][</color>]]
				]]]
				AssignmentStatement[60:5-60:61][IndexExpression[60:5-60:9][Identifier[60:5-60:6][r][Literal[60:7-60:8][1]]] = BinaryExpression[60:12-60:61][BinaryExpression[60:12-60:46][ListConstructor[60:12-60:40][
					ListValue[60:13-60:38][BinaryExpression[60:13-60:38][BinaryExpression[60:13-60:32][Literal[60:13-60:23][<color=#] + Identifier[60:26-60:32][colors]] + Literal[60:35-60:38][>]]]
				] + IndexExpression[60:42-60:46][Identifier[60:42-60:43][r][Literal[60:44-60:45][1]]]] + ListConstructor[60:49-60:61][
					ListValue[60:50-60:60][Literal[60:50-60:60][</color>]]
				]]]
				AssignmentStatement[61:5-61:61][IndexExpression[61:5-61:9][Identifier[61:5-61:6][r][Literal[61:7-61:8][2]]] = BinaryExpression[61:12-61:61][BinaryExpression[61:12-61:46][ListConstructor[61:12-61:40][
					ListValue[61:13-61:38][BinaryExpression[61:13-61:38][BinaryExpression[61:13-61:32][Literal[61:13-61:23][<color=#] + Identifier[61:26-61:32][colors]] + Literal[61:35-61:38][>]]]
				] + IndexExpression[61:42-61:46][Identifier[61:42-61:43][r][Literal[61:44-61:45][2]]]] + ListConstructor[61:49-61:61][
					ListValue[61:50-61:60][Literal[61:50-61:60][</color>]]
				]]]
			]
			ElseifClause[62:11-66:9][BinaryExpression[62:12-62:36][CallExpression[62:12-62:26][Identifier[62:12-62:18][typeof](Identifier[62:19-62:25][colors])] == Literal[62:30-62:36][list]]
				AssignmentStatement[63:5-63:64][IndexExpression[63:5-63:9][Identifier[63:5-63:6][r][Literal[63:7-63:8][0]]] = BinaryExpression[63:12-63:64][BinaryExpression[63:12-63:49][ListConstructor[63:12-63:43][
					ListValue[63:13-63:41][BinaryExpression[63:13-63:41][BinaryExpression[63:13-63:35][Literal[63:13-63:23][<color=#] + IndexExpression[63:26-63:35][Identifier[63:26-63:32][colors][Literal[63:33-63:34][0]]]] + Literal[63:38-63:41][>]]]
				] + IndexExpression[63:45-63:49][Identifier[63:45-63:46][r][Literal[63:47-63:48][0]]]] + ListConstructor[63:52-63:64][
					ListValue[63:53-63:63][Literal[63:53-63:63][</color>]]
				]]]
				AssignmentStatement[64:5-64:64][IndexExpression[64:5-64:9][Identifier[64:5-64:6][r][Literal[64:7-64:8][1]]] = BinaryExpression[64:12-64:64][BinaryExpression[64:12-64:49][ListConstructor[64:12-64:43][
					ListValue[64:13-64:41][BinaryExpression[64:13-64:41][BinaryExpression[64:13-64:35][Literal[64:13-64:23][<color=#] + IndexExpression[64:26-64:35][Identifier[64:26-64:32][colors][Literal[64:33-64:34][1]]]] + Literal[64:38-64:41][>]]]
				] + IndexExpression[64:45-64:49][Identifier[64:45-64:46][r][Literal[64:47-64:48][1]]]] + ListConstructor[64:52-64:64][
					ListValue[64:53-64:63][Literal[64:53-64:63][</color>]]
				]]]
				AssignmentStatement[65:5-65:64][IndexExpression[65:5-65:9][Identifier[65:5-65:6][r][Literal[65:7-65:8][2]]] = BinaryExpression[65:12-65:64][BinaryExpression[65:12-65:49][ListConstructor[65:12-65:43][
					ListValue[65:13-65:41][BinaryExpression[65:13-65:41][BinaryExpression[65:13-65:35][Literal[65:13-65:23][<color=#] + IndexExpression[65:26-65:35][Identifier[65:26-65:32][colors][Literal[65:33-65:34][2]]]] + Literal[65:38-65:41][>]]]
				] + IndexExpression[65:45-65:49][Identifier[65:45-65:46][r][Literal[65:47-65:48][2]]]] + ListConstructor[65:52-65:64][
					ListValue[65:53-65:63][Literal[65:53-65:63][</color>]]
				]]]
			]
		]
		ReturnStatement[68:3-68:66][CallExpression[68:10-68:66][MemberExpression[68:10-68:60][ListConstructor[68:10-68:55][
			ListValue[68:11-68:24][CallExpression[68:11-68:24][MemberExpression[68:11-68:20][IndexExpression[68:11-68:15][Identifier[68:11-68:12][r][Literal[68:13-68:14][0]]].Identifier[68:16-68:20][join]](Literal[68:21-68:23][])]]
			ListValue[68:26-68:39][CallExpression[68:26-68:39][MemberExpression[68:26-68:35][IndexExpression[68:26-68:30][Identifier[68:26-68:27][r][Literal[68:28-68:29][1]]].Identifier[68:31-68:35][join]](Literal[68:36-68:38][])]]
			ListValue[68:41-68:54][CallExpression[68:41-68:54][MemberExpression[68:41-68:50][IndexExpression[68:41-68:45][Identifier[68:41-68:42][r][Literal[68:43-68:44][2]]].Identifier[68:46-68:50][join]](Literal[68:51-68:53][])]]
		].Identifier[68:56-68:60][join]](Literal[68:61-68:65][\\\\n])]]
	]]
	CallExpression[71:1-71:29][Identifier[71:1-71:6][print](CallExpression[71:7-71:28][MemberExpression[71:7-71:19][Identifier[71:7-71:15][AsciiGen].Identifier[71:16-71:19][gen]](Literal[71:20-71:27][Hallo])])]
]"
`;

exports[`parse default scripts assign-shorthands.ms 1`] = `
"Chunk[1:1-6:11][
	AssignmentStatement[1:1-1:12][Identifier[1:1-1:6][value] = BinaryExpression[1:10-1:12][Identifier[1:1-1:6][value] + Literal[1:10-1:12][12]]]
	AssignmentStatement[2:1-2:11][Identifier[2:1-2:6][value] = BinaryExpression[2:10-2:11][Identifier[2:1-2:6][value] - Literal[2:10-2:11][2]]]
	AssignmentStatement[3:1-3:11][Identifier[3:1-3:6][value] = BinaryExpression[3:10-3:11][Identifier[3:1-3:6][value] * Literal[3:10-3:11][3]]]
	AssignmentStatement[4:1-4:11][Identifier[4:1-4:6][value] = BinaryExpression[4:10-4:11][Identifier[4:1-4:6][value] / Literal[4:10-4:11][5]]]
	AssignmentStatement[5:1-5:11][Identifier[5:1-5:6][value] = BinaryExpression[5:10-5:11][Identifier[5:1-5:6][value] % Literal[5:10-5:11][4]]]
	AssignmentStatement[6:1-6:11][Identifier[6:1-6:6][value] = BinaryExpression[6:10-6:11][Identifier[6:1-6:6][value] ^ Literal[6:10-6:11][3]]]
]"
`;

exports[`parse default scripts assign-shorthands.ms 2`] = `undefined`;

exports[`parse default scripts assign-shorthands.ms 3`] = `6`;

exports[`parse default scripts assign-shorthands.ms 4`] = `6`;

exports[`parse default scripts assign-shorthands.ms unsafe 1`] = `
"Chunk[1:1-6:11][
	AssignmentStatement[1:1-1:12][Identifier[1:1-1:6][value] = BinaryExpression[1:10-1:12][Identifier[1:1-1:6][value] + Literal[1:10-1:12][12]]]
	AssignmentStatement[2:1-2:11][Identifier[2:1-2:6][value] = BinaryExpression[2:10-2:11][Identifier[2:1-2:6][value] - Literal[2:10-2:11][2]]]
	AssignmentStatement[3:1-3:11][Identifier[3:1-3:6][value] = BinaryExpression[3:10-3:11][Identifier[3:1-3:6][value] * Literal[3:10-3:11][3]]]
	AssignmentStatement[4:1-4:11][Identifier[4:1-4:6][value] = BinaryExpression[4:10-4:11][Identifier[4:1-4:6][value] / Literal[4:10-4:11][5]]]
	AssignmentStatement[5:1-5:11][Identifier[5:1-5:6][value] = BinaryExpression[5:10-5:11][Identifier[5:1-5:6][value] % Literal[5:10-5:11][4]]]
	AssignmentStatement[6:1-6:11][Identifier[6:1-6:6][value] = BinaryExpression[6:10-6:11][Identifier[6:1-6:6][value] ^ Literal[6:10-6:11][3]]]
]"
`;

exports[`parse default scripts call-with-spaces.ms 1`] = `
"Chunk[1:1-7:16][
	CallExpression[1:1-1:38][Identifier[1:1-1:6][print](Identifier[1:7-1:17][myVariable], Literal[1:19-1:24][abc], BinaryExpression[1:26-1:31][Literal[1:26-1:27][1] + Literal[1:30-1:31][2]], ListConstructor[1:33-1:38][
		ListValue[1:34-1:37][Identifier[1:34-1:37][was]]
	])]
	CallExpression[2:1-2:16][Identifier[2:1-2:6][print](Literal[2:7-2:16][another])]
	CallExpression[3:1-3:13][Identifier[3:1-3:6][print](Literal[3:7-3:12][see])]
	CallExpression[4:1-4:13][Identifier[4:1-4:6][print](Literal[4:7-4:13][last])]
	CallExpression[5:1-5:14][Identifier[5:1-5:6][print](Literal[5:8-5:11][123], Literal[5:13-5:14][1])]
	CallExpression[6:1-6:47][Identifier[6:1-6:6][print](CallExpression[6:7-6:47][Identifier[6:7-6:11][test](Literal[6:13-6:46][Press any button to continue...])])]
	CallExpression[7:1-7:16][Identifier[7:1-7:6][print](ListConstructor[7:7-7:16][
		ListValue[7:8-7:9][Literal[7:8-7:9][1]]
		ListValue[7:10-7:11][Literal[7:10-7:11][2]]
		ListValue[7:12-7:13][Literal[7:12-7:13][3]]
		ListValue[7:14-7:15][Literal[7:14-7:15][4]]
	])]
]"
`;

exports[`parse default scripts call-with-spaces.ms 2`] = `undefined`;

exports[`parse default scripts call-with-spaces.ms 3`] = `13`;

exports[`parse default scripts call-with-spaces.ms 4`] = `0`;

exports[`parse default scripts call-with-spaces.ms unsafe 1`] = `
"Chunk[1:1-7:16][
	CallExpression[1:1-1:38][Identifier[1:1-1:6][print](Identifier[1:7-1:17][myVariable], Literal[1:19-1:24][abc], BinaryExpression[1:26-1:31][Literal[1:26-1:27][1] + Literal[1:30-1:31][2]], ListConstructor[1:33-1:38][
		ListValue[1:34-1:37][Identifier[1:34-1:37][was]]
	])]
	CallExpression[2:1-2:16][Identifier[2:1-2:6][print](Literal[2:7-2:16][another])]
	CallExpression[3:1-3:13][Identifier[3:1-3:6][print](Literal[3:7-3:12][see])]
	CallExpression[4:1-4:13][Identifier[4:1-4:6][print](Literal[4:7-4:13][last])]
	CallExpression[5:1-5:14][Identifier[5:1-5:6][print](Literal[5:8-5:11][123], Literal[5:13-5:14][1])]
	CallExpression[6:1-6:47][Identifier[6:1-6:6][print](CallExpression[6:7-6:47][Identifier[6:7-6:11][test](Literal[6:13-6:46][Press any button to continue...])])]
	CallExpression[7:1-7:16][Identifier[7:1-7:6][print](ListConstructor[7:7-7:16][
		ListValue[7:8-7:9][Literal[7:8-7:9][1]]
		ListValue[7:10-7:11][Literal[7:10-7:11][2]]
		ListValue[7:12-7:13][Literal[7:12-7:13][3]]
		ListValue[7:14-7:15][Literal[7:14-7:15][4]]
	])]
]"
`;

exports[`parse default scripts callexpr-with-nl.ms 1`] = `
"Chunk[1:1-7:2][
	CallExpression[1:1-7:2][Identifier[1:1-1:2][x](Literal[2:5-2:6][1], Literal[3:5-3:6][2], Literal[4:5-4:6][3], Literal[5:5-5:6][4], Literal[6:5-6:6][5])]
]"
`;

exports[`parse default scripts callexpr-with-nl.ms 2`] = `undefined`;

exports[`parse default scripts callexpr-with-nl.ms 3`] = `5`;

exports[`parse default scripts callexpr-with-nl.ms 4`] = `0`;

exports[`parse default scripts callexpr-with-nl.ms unsafe 1`] = `
"Chunk[1:1-7:2][
	CallExpression[1:1-7:2][Identifier[1:1-1:2][x](Literal[2:5-2:6][1], Literal[3:5-3:6][2], Literal[4:5-4:6][3], Literal[5:5-5:6][4], Literal[6:5-6:6][5])]
]"
`;

exports[`parse default scripts comments.ms 1`] = `
"Chunk[1:1-3:20][
	Comment[1:1-1:10][comment]
	Identifier[2:1-2:11][myVariable]
	Comment[2:12-2:22][comment2]
	AssignmentStatement[3:1-3:9][Identifier[3:1-3:5][test] = Literal[3:8-3:9][2]]
	Comment[3:10-3:20][comment3]
]"
`;

exports[`parse default scripts comments.ms 2`] = `undefined`;

exports[`parse default scripts comments.ms 3`] = `1`;

exports[`parse default scripts comments.ms 4`] = `1`;

exports[`parse default scripts comments.ms unsafe 1`] = `
"Chunk[1:1-3:20][
	Comment[1:1-1:10][comment]
	Identifier[2:1-2:11][myVariable]
	Comment[2:12-2:22][comment2]
	AssignmentStatement[3:1-3:9][Identifier[3:1-3:5][test] = Literal[3:8-3:9][2]]
	Comment[3:10-3:20][comment3]
]"
`;

exports[`parse default scripts default-args.ms 1`] = `
"Chunk[1:1-12:13][
	AssignmentStatement[1:1-4:13][Identifier[1:1-1:5][test] = Function[1:8-4:13][AssignmentStatement[1:17-1:25][Identifier[1:17-1:21][arg1] = Literal[1:24-1:25][0]], AssignmentStatement[1:27-1:40][Identifier[1:27-1:31][arg2] = Literal[1:34-1:40][test]] =>
		CallExpression[2:3-2:14][Identifier[2:3-2:8][print](Identifier[2:9-2:13][arg1])]
		CallExpression[3:3-3:14][Identifier[3:3-3:8][print](Identifier[3:9-3:13][arg2])]
	]]
	CallExpression[6:1-6:7][Identifier[6:1-6:5][test]()]
	CallExpression[7:1-7:19][Identifier[7:1-7:5][test](Literal[7:6-7:11][foo], Literal[7:13-7:18][false])]
	AssignmentStatement[9:1-12:13][Identifier[9:1-9:4][bar] = Function[9:7-12:13][AssignmentStatement[9:16-9:25][Identifier[9:16-9:20][arg1] = BinaryNegatedExpression[9:23-9:25][- Literal[9:24-9:25][1]]], AssignmentStatement[9:27-9:38][Identifier[9:27-9:31][arg2] = Literal[9:34-9:38][null]] =>
		CallExpression[10:3-10:14][Identifier[10:3-10:8][print](Identifier[10:9-10:13][arg1])]
		CallExpression[11:3-11:14][Identifier[11:3-11:8][print](Identifier[11:9-11:13][arg2])]
	]]
]"
`;

exports[`parse default scripts default-args.ms 2`] = `undefined`;

exports[`parse default scripts default-args.ms 3`] = `6`;

exports[`parse default scripts default-args.ms 4`] = `2`;

exports[`parse default scripts default-args.ms unsafe 1`] = `
"Chunk[1:1-12:13][
	AssignmentStatement[1:1-4:13][Identifier[1:1-1:5][test] = Function[1:8-4:13][AssignmentStatement[1:17-1:25][Identifier[1:17-1:21][arg1] = Literal[1:24-1:25][0]], AssignmentStatement[1:27-1:40][Identifier[1:27-1:31][arg2] = Literal[1:34-1:40][test]] =>
		CallExpression[2:3-2:14][Identifier[2:3-2:8][print](Identifier[2:9-2:13][arg1])]
		CallExpression[3:3-3:14][Identifier[3:3-3:8][print](Identifier[3:9-3:13][arg2])]
	]]
	CallExpression[6:1-6:7][Identifier[6:1-6:5][test]()]
	CallExpression[7:1-7:19][Identifier[7:1-7:5][test](Literal[7:6-7:11][foo], Literal[7:13-7:18][false])]
	AssignmentStatement[9:1-12:13][Identifier[9:1-9:4][bar] = Function[9:7-12:13][AssignmentStatement[9:16-9:25][Identifier[9:16-9:20][arg1] = BinaryNegatedExpression[9:23-9:25][- Literal[9:24-9:25][1]]], AssignmentStatement[9:27-9:38][Identifier[9:27-9:31][arg2] = Literal[9:34-9:38][null]] =>
		CallExpression[10:3-10:14][Identifier[10:3-10:8][print](Identifier[10:9-10:13][arg1])]
		CallExpression[11:3-11:14][Identifier[11:3-11:8][print](Identifier[11:9-11:13][arg2])]
	]]
]"
`;

exports[`parse default scripts eol.ms 1`] = `
"Chunk[1:1-13:9][
	IfStatement[1:1-5:7][
		IfClause[1:1-3:5][Literal[1:5-1:9][true]
			CallExpression[2:3-2:16][Identifier[2:3-2:8][print](Literal[2:9-2:15][true])]
		]
		ElseClause[3:5-5:7][
			CallExpression[4:3-4:17][Identifier[4:3-4:8][print](Literal[4:9-4:16][false])]
		}]
	]
	WhileStatement[7:1-9:10][Literal[7:8-7:13][false]
		CallExpression[8:3-8:15][Identifier[8:3-8:8][print](Literal[8:9-8:14][foo])]
	]
	For[11:1-13:8][Identifier[11:5-11:8][foo] in ListConstructor[11:12-11:14][]
		CallExpression[12:3-12:15][Identifier[12:3-12:8][print](Literal[12:9-12:14][foo])]
	]
]"
`;

exports[`parse default scripts eol.ms 2`] = `undefined`;

exports[`parse default scripts eol.ms 3`] = `6`;

exports[`parse default scripts eol.ms 4`] = `2`;

exports[`parse default scripts eol.ms unsafe 1`] = `
"Chunk[1:1-13:9][
	IfStatement[1:1-5:7][
		IfClause[1:1-3:5][Literal[1:5-1:9][true]
			CallExpression[2:3-2:16][Identifier[2:3-2:8][print](Literal[2:9-2:15][true])]
		]
		ElseClause[3:5-5:7][
			CallExpression[4:3-4:17][Identifier[4:3-4:8][print](Literal[4:9-4:16][false])]
		}]
	]
	WhileStatement[7:1-9:10][Literal[7:8-7:13][false]
		CallExpression[8:3-8:15][Identifier[8:3-8:8][print](Literal[8:9-8:14][foo])]
	]
	For[11:1-13:8][Identifier[11:5-11:8][foo] in ListConstructor[11:12-11:14][]
		CallExpression[12:3-12:15][Identifier[12:3-12:8][print](Literal[12:9-12:14][foo])]
	]
]"
`;

exports[`parse default scripts expressions.ms 1`] = `
"Chunk[1:1-4:11][
	BinaryExpression[1:1-1:12][Literal[1:1-1:5][as] + Literal[1:8-1:12][wa]]
	BinaryExpression[2:1-2:28][CallExpression[2:1-2:13][Identifier[2:1-2:6][print](Literal[2:7-2:12][was])] - CallExpression[2:14-2:28][Identifier[2:14-2:19][print](Literal[2:20-2:27][hallo])]]
	CallExpression[3:1-3:11][Identifier[3:1-3:6][print](BinaryNegatedExpression[3:7-3:11][- Literal[3:8-3:11][123]])]
	BinaryExpression[4:1-4:11][Identifier[4:1-4:6][print] + Literal[4:8-4:11][123]]
]"
`;

exports[`parse default scripts expressions.ms 2`] = `undefined`;

exports[`parse default scripts expressions.ms 3`] = `6`;

exports[`parse default scripts expressions.ms 4`] = `0`;

exports[`parse default scripts expressions.ms unsafe 1`] = `
"Chunk[1:1-4:11][
	BinaryExpression[1:1-1:12][Literal[1:1-1:5][as] + Literal[1:8-1:12][wa]]
	BinaryExpression[2:1-2:28][CallExpression[2:1-2:13][Identifier[2:1-2:6][print](Literal[2:7-2:12][was])] - CallExpression[2:14-2:28][Identifier[2:14-2:19][print](Literal[2:20-2:27][hallo])]]
	CallExpression[3:1-3:11][Identifier[3:1-3:6][print](BinaryNegatedExpression[3:7-3:11][- Literal[3:8-3:11][123]])]
	BinaryExpression[4:1-4:11][Identifier[4:1-4:6][print] + Literal[4:8-4:11][123]]
]"
`;

exports[`parse default scripts float.ms 1`] = `
"Chunk[1:1-19:25][
	AssignmentStatement[1:1-1:14][Identifier[1:1-1:10][integer_1] = Literal[1:13-1:14][1]]
	AssignmentStatement[2:1-2:15][Identifier[2:1-2:10][integer_2] = Literal[2:13-2:15][21]]
	AssignmentStatement[3:1-3:16][Identifier[3:1-3:10][integer_3] = Literal[3:13-3:16][321]]
	AssignmentStatement[4:1-4:17][Identifier[4:1-4:10][integer_4] = Literal[4:13-4:17][4321]]
	AssignmentStatement[5:1-5:18][Identifier[5:1-5:10][integer_5] = Literal[5:13-5:18][54321]]
	AssignmentStatement[6:1-6:19][Identifier[6:1-6:10][integer_6] = Literal[6:13-6:19][654321]]
	AssignmentStatement[7:1-7:20][Identifier[7:1-7:10][integer_7] = Literal[7:13-7:20][7654321]]
	AssignmentStatement[8:1-8:21][Identifier[8:1-8:10][integer_8] = Literal[8:13-8:21][87654321]]
	AssignmentStatement[9:1-9:22][Identifier[9:1-9:10][integer_9] = Literal[9:13-9:22][987654321]]
	AssignmentStatement[10:1-10:14][Identifier[10:1-10:10][integer_0] = Literal[10:13-10:14][0]]
	AssignmentStatement[12:1-12:14][Identifier[12:1-12:8][float_1] = Literal[12:11-12:14][1.1]]
	AssignmentStatement[13:1-13:17][Identifier[13:1-13:8][float_2] = Literal[13:11-13:17][10.125]]
	AssignmentStatement[14:1-14:15][Identifier[14:1-14:8][float_3] = Literal[14:11-14:15][0.125]]
	AssignmentStatement[15:1-15:13][Identifier[15:1-15:8][float_4] = Literal[15:11-15:13][0.1]]
	AssignmentStatement[17:1-17:23][Identifier[17:1-17:17][negative_integer] = BinaryNegatedExpression[17:20-17:23][- Literal[17:21-17:23][22]]]
	AssignmentStatement[18:1-18:22][Identifier[18:1-18:15][negative_float] = BinaryNegatedExpression[18:18-18:22][- Literal[18:19-18:22][2.5]]]
	AssignmentStatement[19:1-19:25][Identifier[19:1-19:17][negative_float_2] = BinaryNegatedExpression[19:20-19:25][- Literal[19:21-19:25][0.525]]]
]"
`;

exports[`parse default scripts float.ms 2`] = `undefined`;

exports[`parse default scripts float.ms 3`] = `17`;

exports[`parse default scripts float.ms 4`] = `17`;

exports[`parse default scripts float.ms unsafe 1`] = `
"Chunk[1:1-19:25][
	AssignmentStatement[1:1-1:14][Identifier[1:1-1:10][integer_1] = Literal[1:13-1:14][1]]
	AssignmentStatement[2:1-2:15][Identifier[2:1-2:10][integer_2] = Literal[2:13-2:15][21]]
	AssignmentStatement[3:1-3:16][Identifier[3:1-3:10][integer_3] = Literal[3:13-3:16][321]]
	AssignmentStatement[4:1-4:17][Identifier[4:1-4:10][integer_4] = Literal[4:13-4:17][4321]]
	AssignmentStatement[5:1-5:18][Identifier[5:1-5:10][integer_5] = Literal[5:13-5:18][54321]]
	AssignmentStatement[6:1-6:19][Identifier[6:1-6:10][integer_6] = Literal[6:13-6:19][654321]]
	AssignmentStatement[7:1-7:20][Identifier[7:1-7:10][integer_7] = Literal[7:13-7:20][7654321]]
	AssignmentStatement[8:1-8:21][Identifier[8:1-8:10][integer_8] = Literal[8:13-8:21][87654321]]
	AssignmentStatement[9:1-9:22][Identifier[9:1-9:10][integer_9] = Literal[9:13-9:22][987654321]]
	AssignmentStatement[10:1-10:14][Identifier[10:1-10:10][integer_0] = Literal[10:13-10:14][0]]
	AssignmentStatement[12:1-12:14][Identifier[12:1-12:8][float_1] = Literal[12:11-12:14][1.1]]
	AssignmentStatement[13:1-13:17][Identifier[13:1-13:8][float_2] = Literal[13:11-13:17][10.125]]
	AssignmentStatement[14:1-14:15][Identifier[14:1-14:8][float_3] = Literal[14:11-14:15][0.125]]
	AssignmentStatement[15:1-15:13][Identifier[15:1-15:8][float_4] = Literal[15:11-15:13][0.1]]
	AssignmentStatement[17:1-17:23][Identifier[17:1-17:17][negative_integer] = BinaryNegatedExpression[17:20-17:23][- Literal[17:21-17:23][22]]]
	AssignmentStatement[18:1-18:22][Identifier[18:1-18:15][negative_float] = BinaryNegatedExpression[18:18-18:22][- Literal[18:19-18:22][2.5]]]
	AssignmentStatement[19:1-19:25][Identifier[19:1-19:17][negative_float_2] = BinaryNegatedExpression[19:20-19:25][- Literal[19:21-19:25][0.525]]]
]"
`;

exports[`parse default scripts function.ms 1`] = `
"Chunk[1:1-8:13][
	AssignmentStatement[1:1-2:13][Identifier[1:1-1:2][a] = FunctionDeclaration[1:5-2:13][]]
	AssignmentStatement[4:1-5:13][Identifier[4:1-4:2][b] = FunctionDeclaration[4:5-5:13][Identifier[4:14-4:15][a], AssignmentStatement[4:17-4:27][Identifier[4:17-4:18][b] = Literal[4:21-4:27][test]], Identifier[4:29-4:30][c]]]
	AssignmentStatement[7:1-8:13][Identifier[7:1-7:2][c] = FunctionDeclaration[7:5-8:13][]]
]"
`;

exports[`parse default scripts function.ms 2`] = `undefined`;

exports[`parse default scripts function.ms 3`] = `1`;

exports[`parse default scripts function.ms 4`] = `3`;

exports[`parse default scripts function.ms unsafe 1`] = `
"Chunk[1:1-8:13][
	AssignmentStatement[1:1-2:13][Identifier[1:1-1:2][a] = FunctionDeclaration[1:5-2:13][]]
	AssignmentStatement[4:1-5:13][Identifier[4:1-4:2][b] = FunctionDeclaration[4:5-5:13][Identifier[4:14-4:15][a], AssignmentStatement[4:17-4:27][Identifier[4:17-4:18][b] = Literal[4:21-4:27][test]], Identifier[4:29-4:30][c]]]
	AssignmentStatement[7:1-8:13][Identifier[7:1-7:2][c] = FunctionDeclaration[7:5-8:13][]]
]"
`;

exports[`parse default scripts invalid code 1`] = `Array []`;

exports[`parse default scripts invalid code 2`] = `
Array [
  [Error: got Identifier[4:9 - 4:14: value = 'print'] where any of ",", ")" is required],
  [Error: got Punctuator[4:16 - 4:17: value = ')'] where number, string, or identifier is required],
  [Error: got Identifier[8:23 - 8:25: value = 'wa'] where any of ",", ";", "<eof>" is required],
  [Error: got Punctuator[11:13 - 11:14: value = '+'] where number, string, or identifier is required],
  [Error: got Keyword[13:13 - 13:16: value = 'not'] where number, string, or identifier is required],
  [Error: unexpected keyword Keyword[17:9 - 17:17: value = 'function'] at start of line],
  [Error: unexpected keyword Keyword[18:9 - 18:17: value = 'end func'] at start of line],
  [Error: got Identifier[28:20 - 28:25: value = 'print'] where "then" is required],
]
`;

exports[`parse default scripts list.ms 1`] = `
"Chunk[1:1-9:2][
	AssignmentStatement[1:1-1:15][Identifier[1:1-1:5][test] = ListConstructor[1:8-1:15][
		ListValue[1:9-1:14][Literal[1:9-1:14][foo]]
	]]
	AssignmentStatement[2:1-5:2][Identifier[2:1-2:6][test2] = ListConstructor[2:9-5:2][
		ListValue[3:5-3:8][Literal[3:5-3:8][123]]
		ListValue[4:5-4:8][Literal[4:5-4:8][345]]
	]]
	AssignmentStatement[6:1-9:2][Identifier[6:1-6:6][test3] = ListConstructor[6:9-9:2][
		ListValue[7:5-7:10][Literal[7:5-7:10][foo]]
		ListValue[8:5-8:10][Literal[8:5-8:10][moo]]
	]]
]"
`;

exports[`parse default scripts list.ms 2`] = `undefined`;

exports[`parse default scripts list.ms 3`] = `5`;

exports[`parse default scripts list.ms 4`] = `8`;

exports[`parse default scripts list.ms unsafe 1`] = `
"Chunk[1:1-9:2][
	AssignmentStatement[1:1-1:15][Identifier[1:1-1:5][test] = ListConstructor[1:8-1:15][
		ListValue[1:9-1:14][Literal[1:9-1:14][foo]]
	]]
	AssignmentStatement[2:1-5:2][Identifier[2:1-2:6][test2] = ListConstructor[2:9-5:2][
		ListValue[3:5-3:8][Literal[3:5-3:8][123]]
		ListValue[4:5-4:8][Literal[4:5-4:8][345]]
	]]
	AssignmentStatement[6:1-9:2][Identifier[6:1-6:6][test3] = ListConstructor[6:9-9:2][
		ListValue[7:5-7:10][Literal[7:5-7:10][foo]]
		ListValue[8:5-8:10][Literal[8:5-8:10][moo]]
	]]
]"
`;

exports[`parse default scripts map.ms 1`] = `
"Chunk[1:1-19:2][
	AssignmentStatement[1:1-3:2][Identifier[1:1-1:5][test] = MapConstructor[1:8-3:2][
		MapKeyString[2:5-2:30][MapConstructor[2:5-2:24][
			MapKeyString[2:6-2:17][Literal[2:6-2:14][myTest]: Literal[2:16-2:17][0]]
			MapKeyString[2:19-2:23][Literal[2:19-2:20][1]: Literal[2:22-2:23][2]]
		]: Literal[2:26-2:30][true]]
	]]
	AssignmentStatement[4:1-6:2][Identifier[4:1-4:6][test2] = MapConstructor[4:9-6:2][
		MapKeyString[5:5-5:19][ListConstructor[5:5-5:13][
			ListValue[5:6-5:8][Literal[5:6-5:8][12]]
			ListValue[5:10-5:12][Literal[5:10-5:12][14]]
		]: Literal[5:15-5:19][true]]
	]]
	AssignmentStatement[7:1-9:2][Identifier[7:1-7:6][test3] = MapConstructor[7:9-9:2][
		MapKeyString[8:5-8:14][Identifier[8:5-8:9][test]: Literal[8:11-8:14][234]]
	]]
	AssignmentStatement[10:1-12:2][Identifier[10:1-10:6][test4] = MapConstructor[10:9-12:2][
		MapKeyString[11:5-11:16][Literal[11:5-11:9][true]: Literal[11:11-11:16][foo]]
	]]
	AssignmentStatement[13:1-15:2][Identifier[13:1-13:6][test5] = MapConstructor[13:9-15:2][
		MapKeyString[14:5-14:15][Literal[14:5-14:8][123]: Literal[14:10-14:15][bar]]
	]]
	AssignmentStatement[16:1-19:2][Identifier[16:1-16:6][test5] = MapConstructor[16:9-19:2][
		MapKeyString[17:5-17:15][Literal[17:5-17:8][125]: Literal[17:10-17:15][bar]]
		MapKeyString[18:5-18:14][Literal[18:5-18:7][34]: Literal[18:9-18:14][foo]]
	]]
]"
`;

exports[`parse default scripts map.ms 2`] = `undefined`;

exports[`parse default scripts map.ms 3`] = `17`;

exports[`parse default scripts map.ms 4`] = `17`;

exports[`parse default scripts map.ms unsafe 1`] = `
"Chunk[1:1-19:2][
	AssignmentStatement[1:1-3:2][Identifier[1:1-1:5][test] = MapConstructor[1:8-3:2][
		MapKeyString[2:5-2:30][MapConstructor[2:5-2:24][
			MapKeyString[2:6-2:17][Literal[2:6-2:14][myTest]: Literal[2:16-2:17][0]]
			MapKeyString[2:19-2:23][Literal[2:19-2:20][1]: Literal[2:22-2:23][2]]
		]: Literal[2:26-2:30][true]]
	]]
	AssignmentStatement[4:1-6:2][Identifier[4:1-4:6][test2] = MapConstructor[4:9-6:2][
		MapKeyString[5:5-5:19][ListConstructor[5:5-5:13][
			ListValue[5:6-5:8][Literal[5:6-5:8][12]]
			ListValue[5:10-5:12][Literal[5:10-5:12][14]]
		]: Literal[5:15-5:19][true]]
	]]
	AssignmentStatement[7:1-9:2][Identifier[7:1-7:6][test3] = MapConstructor[7:9-9:2][
		MapKeyString[8:5-8:14][Identifier[8:5-8:9][test]: Literal[8:11-8:14][234]]
	]]
	AssignmentStatement[10:1-12:2][Identifier[10:1-10:6][test4] = MapConstructor[10:9-12:2][
		MapKeyString[11:5-11:16][Literal[11:5-11:9][true]: Literal[11:11-11:16][foo]]
	]]
	AssignmentStatement[13:1-15:2][Identifier[13:1-13:6][test5] = MapConstructor[13:9-15:2][
		MapKeyString[14:5-14:15][Literal[14:5-14:8][123]: Literal[14:10-14:15][bar]]
	]]
	AssignmentStatement[16:1-19:2][Identifier[16:1-16:6][test5] = MapConstructor[16:9-19:2][
		MapKeyString[17:5-17:15][Literal[17:5-17:8][125]: Literal[17:10-17:15][bar]]
		MapKeyString[18:5-18:14][Literal[18:5-18:7][34]: Literal[18:9-18:14][foo]]
	]]
]"
`;

exports[`parse default scripts member-with-nl.ms 1`] = `
"Chunk[1:1-4:5][
	MemberExpression[1:1-4:5][MemberExpression[1:1-3:5][MemberExpression[1:1-2:5][Identifier[1:1-1:2][x].Identifier[2:1-2:5][test]].Identifier[3:1-3:5][test]].Identifier[4:1-4:5][test]]
]"
`;

exports[`parse default scripts member-with-nl.ms 2`] = `undefined`;

exports[`parse default scripts member-with-nl.ms 3`] = `0`;

exports[`parse default scripts member-with-nl.ms 4`] = `0`;

exports[`parse default scripts member-with-nl.ms unsafe 1`] = `
"Chunk[1:1-4:5][
	MemberExpression[1:1-4:5][MemberExpression[1:1-3:5][MemberExpression[1:1-2:5][Identifier[1:1-1:2][x].Identifier[2:1-2:5][test]].Identifier[3:1-3:5][test]].Identifier[4:1-4:5][test]]
]"
`;

exports[`parse default scripts multiline.ms 1`] = `
"Chunk[1:1-29:12][
	CallExpression[1:1-6:3][Identifier[1:1-1:6][print](Literal[1:7-6:2][
	
	was
	print(\\"was\\")
	foo[\\"xxxx\\"].test
	])]
	CallExpression[8:1-15:3][Identifier[8:1-8:6][print](BinaryExpression[8:7-15:2][BinaryExpression[8:7-11:2][Literal[8:7-9:17][
	print(\\"was\\") ] + Literal[9:20-11:2][
	foo[\\"xxxx\\"].test
	]] + Literal[11:5-15:2][
	
	
	was
	]])]
	CallExpression[17:1-22:3][Identifier[17:1-17:6][print](Literal[17:7-22:2][
	
	    if (typeof(@item.value) == \\"function\\") then
	
	    end if
	])]
	CallExpression[24:1-29:12][Identifier[24:1-24:6][print](BinaryExpression[24:7-29:5][BinaryExpression[24:7-28:12][BinaryExpression[24:7-28:5][BinaryExpression[24:7-27:12][BinaryExpression[24:7-27:5][BinaryExpression[24:7-26:12][BinaryExpression[24:7-26:5][BinaryExpression[24:7-25:12][Literal[24:7-25:5][
	   ] + Identifier[25:8-25:12][test]] + Literal[25:15-26:5][
	   ]] + Identifier[26:8-26:12][test]] + Literal[26:15-27:5][
	   ]] + Identifier[27:8-27:12][test]] + Literal[27:15-28:5][
	   ]] + Identifier[28:8-28:12][test]] + Literal[28:15-29:5][
	   ]], Literal[29:7-29:11][true])]
]"
`;

exports[`parse default scripts multiline.ms 2`] = `undefined`;

exports[`parse default scripts multiline.ms 3`] = `11`;

exports[`parse default scripts multiline.ms 4`] = `0`;

exports[`parse default scripts multiline.ms unsafe 1`] = `
"Chunk[1:1-29:12][
	CallExpression[1:1-6:3][Identifier[1:1-1:6][print](Literal[1:7-6:2][
	
	was
	print(\\"was\\")
	foo[\\"xxxx\\"].test
	])]
	CallExpression[8:1-15:3][Identifier[8:1-8:6][print](BinaryExpression[8:7-15:2][BinaryExpression[8:7-11:2][Literal[8:7-9:17][
	print(\\"was\\") ] + Literal[9:20-11:2][
	foo[\\"xxxx\\"].test
	]] + Literal[11:5-15:2][
	
	
	was
	]])]
	CallExpression[17:1-22:3][Identifier[17:1-17:6][print](Literal[17:7-22:2][
	
	    if (typeof(@item.value) == \\"function\\") then
	
	    end if
	])]
	CallExpression[24:1-29:12][Identifier[24:1-24:6][print](BinaryExpression[24:7-29:5][BinaryExpression[24:7-28:12][BinaryExpression[24:7-28:5][BinaryExpression[24:7-27:12][BinaryExpression[24:7-27:5][BinaryExpression[24:7-26:12][BinaryExpression[24:7-26:5][BinaryExpression[24:7-25:12][Literal[24:7-25:5][
	   ] + Identifier[25:8-25:12][test]] + Literal[25:15-26:5][
	   ]] + Identifier[26:8-26:12][test]] + Literal[26:15-27:5][
	   ]] + Identifier[27:8-27:12][test]] + Literal[27:15-28:5][
	   ]] + Identifier[28:8-28:12][test]] + Literal[28:15-29:5][
	   ]], Literal[29:7-29:11][true])]
]"
`;

exports[`parse default scripts multiline-binary-expression.ms 1`] = `
"Chunk[1:1-8:7][
	IfStatement[1:1-8:7][
		IfClause[1:1-8:7][BinaryExpression[1:5-6:21][CallExpression[1:5-6:13][MemberExpression[1:5-6:10][ListConstructor[1:5-6:2][
			ListValue[2:3-2:4][Literal[2:3-2:4][1]]
			ListValue[3:3-3:4][Literal[3:3-3:4][2]]
			ListValue[4:3-4:4][Literal[4:3-4:4][3]]
			ListValue[5:3-5:4][Literal[5:3-5:4][4]]
		].Identifier[6:3-6:10][indexOf]](Literal[6:11-6:12][2])] != Literal[6:17-6:21][null]]]
	]
]"
`;

exports[`parse default scripts multiline-binary-expression.ms 2`] = `undefined`;

exports[`parse default scripts multiline-binary-expression.ms 3`] = `6`;

exports[`parse default scripts multiline-binary-expression.ms 4`] = `0`;

exports[`parse default scripts multiline-binary-expression.ms unsafe 1`] = `
"Chunk[1:1-8:7][
	IfStatement[1:1-8:7][
		IfClause[1:1-8:7][BinaryExpression[1:5-6:21][CallExpression[1:5-6:13][MemberExpression[1:5-6:10][ListConstructor[1:5-6:2][
			ListValue[2:3-2:4][Literal[2:3-2:4][1]]
			ListValue[3:3-3:4][Literal[3:3-3:4][2]]
			ListValue[4:3-4:4][Literal[4:3-4:4][3]]
			ListValue[5:3-5:4][Literal[5:3-5:4][4]]
		].Identifier[6:3-6:10][indexOf]](Literal[6:11-6:12][2])] != Literal[6:17-6:21][null]]]
	]
]"
`;

exports[`parse default scripts multiline-condition.ms 1`] = `
"Chunk[1:1-14:12][
	IfStatement[1:1-6:7][
		IfClause[1:1-6:7][LogicalExpression[1:4-4:10][LogicalExpression[1:4-2:5][Literal[1:4-1:8][true] or Literal[2:1-2:5][true]] or LogicalExpression[3:1-4:10][Literal[3:1-3:6][false] and NegationExpression[4:1-4:10][not Literal[4:5-4:10][false]]]]
			CallExpression[5:3-5:16][Identifier[5:3-5:8][print](Literal[5:9-5:15][test])]
		]
	]
	CallExpression[8:1-14:12][Identifier[8:1-8:6][print](BinaryExpression[8:7-14:12][BinaryExpression[8:7-13:12][BinaryExpression[8:7-12:12][BinaryExpression[8:7-11:12][BinaryExpression[8:7-10:12][BinaryExpression[8:7-9:12][CallExpression[8:7-8:16][Identifier[8:7-8:8][p](Literal[8:9-8:12][A], Literal[8:14-8:15][1])] == CallExpression[9:3-9:12][Identifier[9:3-9:4][p](Literal[9:5-9:8][B], Literal[9:10-9:11][1])]] != CallExpression[10:3-10:12][Identifier[10:3-10:4][p](Literal[10:5-10:8][C], Literal[10:10-10:11][1])]] > CallExpression[11:3-11:12][Identifier[11:3-11:4][p](Literal[11:5-11:8][D], Literal[11:10-11:11][1])]] < CallExpression[12:3-12:12][Identifier[12:3-12:4][p](Literal[12:5-12:8][E], Literal[12:10-12:11][1])]] >= CallExpression[13:3-13:12][Identifier[13:3-13:4][p](Literal[13:5-13:8][F], Literal[13:10-13:11][1])]] <= CallExpression[14:3-14:12][Identifier[14:3-14:4][p](Literal[14:5-14:8][G], Literal[14:10-14:11][1])]])]
]"
`;

exports[`parse default scripts multiline-condition.ms 2`] = `undefined`;

exports[`parse default scripts multiline-condition.ms 3`] = `19`;

exports[`parse default scripts multiline-condition.ms 4`] = `0`;

exports[`parse default scripts multiline-condition.ms unsafe 1`] = `
"Chunk[1:1-14:12][
	IfStatement[1:1-6:7][
		IfClause[1:1-6:7][LogicalExpression[1:4-4:10][LogicalExpression[1:4-2:5][Literal[1:4-1:8][true] or Literal[2:1-2:5][true]] or LogicalExpression[3:1-4:10][Literal[3:1-3:6][false] and NegationExpression[4:1-4:10][not Literal[4:5-4:10][false]]]]
			CallExpression[5:3-5:16][Identifier[5:3-5:8][print](Literal[5:9-5:15][test])]
		]
	]
	CallExpression[8:1-14:12][Identifier[8:1-8:6][print](BinaryExpression[8:7-14:12][BinaryExpression[8:7-13:12][BinaryExpression[8:7-12:12][BinaryExpression[8:7-11:12][BinaryExpression[8:7-10:12][BinaryExpression[8:7-9:12][CallExpression[8:7-8:16][Identifier[8:7-8:8][p](Literal[8:9-8:12][A], Literal[8:14-8:15][1])] == CallExpression[9:3-9:12][Identifier[9:3-9:4][p](Literal[9:5-9:8][B], Literal[9:10-9:11][1])]] != CallExpression[10:3-10:12][Identifier[10:3-10:4][p](Literal[10:5-10:8][C], Literal[10:10-10:11][1])]] > CallExpression[11:3-11:12][Identifier[11:3-11:4][p](Literal[11:5-11:8][D], Literal[11:10-11:11][1])]] < CallExpression[12:3-12:12][Identifier[12:3-12:4][p](Literal[12:5-12:8][E], Literal[12:10-12:11][1])]] >= CallExpression[13:3-13:12][Identifier[13:3-13:4][p](Literal[13:5-13:8][F], Literal[13:10-13:11][1])]] <= CallExpression[14:3-14:12][Identifier[14:3-14:4][p](Literal[14:5-14:8][G], Literal[14:10-14:11][1])]])]
]"
`;

exports[`parse default scripts negation.ms 1`] = `
"Chunk[1:1-6:9][
	AssignmentStatement[1:1-1:23][Identifier[1:1-1:5][test] = BinaryExpression[1:8-1:23][BinaryExpression[1:8-1:19][BinaryExpression[1:8-1:14][BinaryNegatedExpression[1:8-1:10][- Literal[1:9-1:10][1]] + Literal[1:13-1:14][2]] + BinaryNegatedExpression[1:17-1:19][- Literal[1:18-1:19][2]]] + Literal[1:22-1:23][3]]]
	AssignmentStatement[2:1-2:34][Identifier[2:1-2:4][foo] = ListConstructor[2:7-2:34][
		ListValue[2:8-2:10][BinaryNegatedExpression[2:8-2:10][- Literal[2:9-2:10][1]]]
		ListValue[2:12-2:18][BinaryExpression[2:12-2:18][BinaryNegatedExpression[2:12-2:14][- Literal[2:13-2:14][2]] + Literal[2:17-2:18][4]]]
		ListValue[2:20-2:33][BinaryExpression[2:20-2:33][BinaryExpression[2:20-2:29][BinaryNegatedExpression[2:21-2:23][- Literal[2:22-2:23][2]] + BinaryNegatedExpression[2:27-2:29][- Literal[2:28-2:29][4]]] + Literal[2:32-2:33][6]]]
	]]
	CallExpression[4:1-4:12][Identifier[4:1-4:6][print](Identifier[4:7-4:11][test])]
	CallExpression[5:1-5:11][Identifier[5:1-5:6][print](Identifier[5:7-5:10][foo])]
	CallExpression[6:1-6:9][Identifier[6:1-6:6][print](BinaryNegatedExpression[6:7-6:9][- Literal[6:8-6:9][2]])]
]"
`;

exports[`parse default scripts negation.ms 2`] = `undefined`;

exports[`parse default scripts negation.ms 3`] = `11`;

exports[`parse default scripts negation.ms 4`] = `5`;

exports[`parse default scripts negation.ms unsafe 1`] = `
"Chunk[1:1-6:9][
	AssignmentStatement[1:1-1:23][Identifier[1:1-1:5][test] = BinaryExpression[1:8-1:23][BinaryExpression[1:8-1:19][BinaryExpression[1:8-1:14][BinaryNegatedExpression[1:8-1:10][- Literal[1:9-1:10][1]] + Literal[1:13-1:14][2]] + BinaryNegatedExpression[1:17-1:19][- Literal[1:18-1:19][2]]] + Literal[1:22-1:23][3]]]
	AssignmentStatement[2:1-2:34][Identifier[2:1-2:4][foo] = ListConstructor[2:7-2:34][
		ListValue[2:8-2:10][BinaryNegatedExpression[2:8-2:10][- Literal[2:9-2:10][1]]]
		ListValue[2:12-2:18][BinaryExpression[2:12-2:18][BinaryNegatedExpression[2:12-2:14][- Literal[2:13-2:14][2]] + Literal[2:17-2:18][4]]]
		ListValue[2:20-2:33][BinaryExpression[2:20-2:33][BinaryExpression[2:20-2:29][BinaryNegatedExpression[2:21-2:23][- Literal[2:22-2:23][2]] + BinaryNegatedExpression[2:27-2:29][- Literal[2:28-2:29][4]]] + Literal[2:32-2:33][6]]]
	]]
	CallExpression[4:1-4:12][Identifier[4:1-4:6][print](Identifier[4:7-4:11][test])]
	CallExpression[5:1-5:11][Identifier[5:1-5:6][print](Identifier[5:7-5:10][foo])]
	CallExpression[6:1-6:9][Identifier[6:1-6:6][print](BinaryNegatedExpression[6:7-6:9][- Literal[6:8-6:9][2]])]
]"
`;

exports[`parse default scripts obj-init.ms 1`] = `
"Chunk[1:1-21:14][
	AssignmentStatement[1:1-1:26][Identifier[1:1-1:18][valueOfIdentifier] = Literal[1:21-1:26][foo]]
	AssignmentStatement[3:1-9:2][Identifier[3:1-3:9][myObject] = MapConstructor[3:12-9:2][
		MapKeyString[4:3-6:4][Literal[4:3-4:9][test]: MapConstructor[4:11-6:4][
			MapKeyString[5:5-5:21][Literal[5:5-5:14][another]: Literal[5:16-5:21][123]]
		]]
		MapKeyString[7:3-7:17][Literal[7:3-7:10][value]: Literal[7:12-7:17][123]]
		MapKeyString[8:3-8:28][Literal[8:3-8:9][idtf]: Identifier[8:11-8:28][valueOfIdentifier]]
	]]
	CallExpression[11:1-11:62][Identifier[11:1-11:6][print](ListConstructor[11:7-11:61][
		ListValue[11:8-11:29][MemberExpression[11:8-11:29][MemberExpression[11:8-11:21][Identifier[11:8-11:16][myObject].Identifier[11:17-11:21][test]].Identifier[11:22-11:29][another]]]
		ListValue[11:31-11:45][MemberExpression[11:31-11:45][Identifier[11:31-11:39][myObject].Identifier[11:40-11:45][value]]]
		ListValue[11:47-11:60][MemberExpression[11:47-11:60][Identifier[11:47-11:55][myObject].Identifier[11:56-11:60][idtf]]]
	])]
	AssignmentStatement[13:1-19:2][Identifier[13:1-13:7][myList] = ListConstructor[13:10-19:2][
		ListValue[14:3-16:4][MapConstructor[14:3-16:4][
			MapKeyString[15:5-15:21][Literal[15:5-15:14][another]: Literal[15:16-15:21][123]]
		]]
		ListValue[17:3-17:8][Literal[17:3-17:8][123]]
		ListValue[18:3-18:20][Identifier[18:3-18:20][valueOfIdentifier]]
	]]
	CallExpression[21:1-21:14][Identifier[21:1-21:6][print](Identifier[21:7-21:13][myList])]
]"
`;

exports[`parse default scripts obj-init.ms 2`] = `undefined`;

exports[`parse default scripts obj-init.ms 3`] = `10`;

exports[`parse default scripts obj-init.ms 4`] = `11`;

exports[`parse default scripts obj-init.ms unsafe 1`] = `
"Chunk[1:1-21:14][
	AssignmentStatement[1:1-1:26][Identifier[1:1-1:18][valueOfIdentifier] = Literal[1:21-1:26][foo]]
	AssignmentStatement[3:1-9:2][Identifier[3:1-3:9][myObject] = MapConstructor[3:12-9:2][
		MapKeyString[4:3-6:4][Literal[4:3-4:9][test]: MapConstructor[4:11-6:4][
			MapKeyString[5:5-5:21][Literal[5:5-5:14][another]: Literal[5:16-5:21][123]]
		]]
		MapKeyString[7:3-7:17][Literal[7:3-7:10][value]: Literal[7:12-7:17][123]]
		MapKeyString[8:3-8:28][Literal[8:3-8:9][idtf]: Identifier[8:11-8:28][valueOfIdentifier]]
	]]
	CallExpression[11:1-11:62][Identifier[11:1-11:6][print](ListConstructor[11:7-11:61][
		ListValue[11:8-11:29][MemberExpression[11:8-11:29][MemberExpression[11:8-11:21][Identifier[11:8-11:16][myObject].Identifier[11:17-11:21][test]].Identifier[11:22-11:29][another]]]
		ListValue[11:31-11:45][MemberExpression[11:31-11:45][Identifier[11:31-11:39][myObject].Identifier[11:40-11:45][value]]]
		ListValue[11:47-11:60][MemberExpression[11:47-11:60][Identifier[11:47-11:55][myObject].Identifier[11:56-11:60][idtf]]]
	])]
	AssignmentStatement[13:1-19:2][Identifier[13:1-13:7][myList] = ListConstructor[13:10-19:2][
		ListValue[14:3-16:4][MapConstructor[14:3-16:4][
			MapKeyString[15:5-15:21][Literal[15:5-15:14][another]: Literal[15:16-15:21][123]]
		]]
		ListValue[17:3-17:8][Literal[17:3-17:8][123]]
		ListValue[18:3-18:20][Identifier[18:3-18:20][valueOfIdentifier]]
	]]
	CallExpression[21:1-21:14][Identifier[21:1-21:6][print](Identifier[21:7-21:13][myList])]
]"
`;

exports[`parse default scripts open block 1`] = `Array []`;

exports[`parse default scripts open block 2`] = `
Array [
  [Error: unexpected keyword Keyword[40:9 - 40:17: value = 'end whil'] at start of line],
  [Error: found open block WhileStatement],
]
`;

exports[`parse default scripts parentheses.ms 1`] = `
"Chunk[1:1-4:75][
	AssignmentStatement[1:1-1:40][Identifier[1:1-1:7][params] = ListConstructor[1:10-1:40][
		ListValue[1:11-1:23][Literal[1:11-1:23][/home/test]]
		ListValue[1:25-1:39][Literal[1:25-1:39][myTestFolder]]
	]]
	CallExpression[3:1-3:69][Identifier[3:1-3:6][print](LogicalExpression[3:7-3:68][LogicalExpression[3:7-3:43][BinaryExpression[3:7-3:22][MemberExpression[3:7-3:17][Identifier[3:7-3:13][params].Identifier[3:14-3:17][len]] != Literal[3:21-3:22][1]] or BinaryExpression[3:26-3:43][IndexExpression[3:26-3:35][Identifier[3:26-3:32][params][Literal[3:33-3:34][0]]] == Literal[3:39-3:43][-h]]] or BinaryExpression[3:47-3:68][IndexExpression[3:47-3:56][Identifier[3:47-3:53][params][Literal[3:54-3:55][0]]] == Literal[3:60-3:68][--help]]])]
	CallExpression[4:1-4:75][Identifier[4:1-4:6][print](LogicalExpression[4:7-4:74][LogicalExpression[4:7-4:47][BinaryExpression[4:8-4:23][MemberExpression[4:8-4:18][Identifier[4:8-4:14][params].Identifier[4:15-4:18][len]] != Literal[4:22-4:23][1]] or BinaryExpression[4:29-4:46][IndexExpression[4:29-4:38][Identifier[4:29-4:35][params][Literal[4:36-4:37][0]]] == Literal[4:42-4:46][-h]]] or BinaryExpression[4:52-4:73][IndexExpression[4:52-4:61][Identifier[4:52-4:58][params][Literal[4:59-4:60][0]]] == Literal[4:65-4:73][--help]]])]
]"
`;

exports[`parse default scripts parentheses.ms 2`] = `undefined`;

exports[`parse default scripts parentheses.ms 3`] = `12`;

exports[`parse default scripts parentheses.ms 4`] = `3`;

exports[`parse default scripts parentheses.ms unsafe 1`] = `
"Chunk[1:1-4:75][
	AssignmentStatement[1:1-1:40][Identifier[1:1-1:7][params] = ListConstructor[1:10-1:40][
		ListValue[1:11-1:23][Literal[1:11-1:23][/home/test]]
		ListValue[1:25-1:39][Literal[1:25-1:39][myTestFolder]]
	]]
	CallExpression[3:1-3:69][Identifier[3:1-3:6][print](LogicalExpression[3:7-3:68][LogicalExpression[3:7-3:43][BinaryExpression[3:7-3:22][MemberExpression[3:7-3:17][Identifier[3:7-3:13][params].Identifier[3:14-3:17][len]] != Literal[3:21-3:22][1]] or BinaryExpression[3:26-3:43][IndexExpression[3:26-3:35][Identifier[3:26-3:32][params][Literal[3:33-3:34][0]]] == Literal[3:39-3:43][-h]]] or BinaryExpression[3:47-3:68][IndexExpression[3:47-3:56][Identifier[3:47-3:53][params][Literal[3:54-3:55][0]]] == Literal[3:60-3:68][--help]]])]
	CallExpression[4:1-4:75][Identifier[4:1-4:6][print](LogicalExpression[4:7-4:74][LogicalExpression[4:7-4:47][BinaryExpression[4:8-4:23][MemberExpression[4:8-4:18][Identifier[4:8-4:14][params].Identifier[4:15-4:18][len]] != Literal[4:22-4:23][1]] or BinaryExpression[4:29-4:46][IndexExpression[4:29-4:38][Identifier[4:29-4:35][params][Literal[4:36-4:37][0]]] == Literal[4:42-4:46][-h]]] or BinaryExpression[4:52-4:73][IndexExpression[4:52-4:61][Identifier[4:52-4:58][params][Literal[4:59-4:60][0]]] == Literal[4:65-4:73][--help]]])]
]"
`;

exports[`parse default scripts password-generator.ms 1`] = `
"Chunk[1:1-65:14][
	AssignmentStatement[1:1-1:23][Identifier[1:1-1:18][PasswordGenerator] = MapConstructor[1:21-1:23][]]
	AssignmentStatement[3:1-3:43][MemberExpression[3:1-3:38][Identifier[3:1-3:18][PasswordGenerator].Identifier[3:19-3:38][MAX_PASSWORD_LENGTH]] = Literal[3:41-3:43][15]]
	AssignmentStatement[4:1-4:71][MemberExpression[4:1-4:40][Identifier[4:1-4:18][PasswordGenerator].Identifier[4:19-4:40][ALPHABETIC_CHARACTERS]] = Literal[4:43-4:71][qwertzuiopasdfghjklyxcvbnm]]
	AssignmentStatement[5:1-5:51][MemberExpression[5:1-5:36][Identifier[5:1-5:18][PasswordGenerator].Identifier[5:19-5:36][NUMBER_CHARACTERS]] = Literal[5:39-5:51][0123456789]]
	AssignmentStatement[6:1-6:160][MemberExpression[6:1-6:32][Identifier[6:1-6:18][PasswordGenerator].Identifier[6:19-6:32][ALPHA_NUMERIC]] = BinaryExpression[6:35-6:160][BinaryExpression[6:35-6:122][MemberExpression[6:35-6:74][Identifier[6:35-6:52][PasswordGenerator].Identifier[6:53-6:74][ALPHABETIC_CHARACTERS]] + MemberExpression[6:77-6:122][MemberExpression[6:77-6:116][Identifier[6:77-6:94][PasswordGenerator].Identifier[6:95-6:116][ALPHABETIC_CHARACTERS]].Identifier[6:117-6:122][upper]]] + MemberExpression[6:125-6:160][Identifier[6:125-6:142][PasswordGenerator].Identifier[6:143-6:160][NUMBER_CHARACTERS]]]]
	AssignmentStatement[8:1-13:13][MemberExpression[8:1-8:30][Identifier[8:1-8:18][PasswordGenerator].Identifier[8:19-8:30][constructor]] = Function[8:33-13:13][ =>
		AssignmentStatement[9:3-9:12][Identifier[9:3-9:5][me] = Identifier[9:8-9:12][self]]
		AssignmentStatement[10:3-10:18][MemberExpression[10:3-10:12][Identifier[10:3-10:5][me].Identifier[10:6-10:12][buffer]] = ListConstructor[10:15-10:18][
			ListValue[10:16-10:17][Literal[10:16-10:17][0]]
		]]
		AssignmentStatement[11:3-11:35][MemberExpression[11:3-11:16][Identifier[11:3-11:5][me].Identifier[11:6-11:16][characters]] = MemberExpression[11:19-11:35][Identifier[11:19-11:21][me].Identifier[11:22-11:35][ALPHA_NUMERIC]]]
		ReturnStatement[12:3-12:12][Identifier[12:10-12:12][me]]
	]]
	AssignmentStatement[15:1-31:13][MemberExpression[15:1-15:33][Identifier[15:1-15:18][PasswordGenerator].Identifier[15:19-15:33][increaseBuffer]] = Function[15:36-31:13][Identifier[15:45-15:46][i] =>
		AssignmentStatement[16:3-16:12][Identifier[16:3-16:5][me] = Identifier[16:8-16:12][self]]
		AssignmentStatement[17:3-17:32][Identifier[17:3-17:20][currentCharBuffer] = MemberExpression[17:23-17:32][Identifier[17:23-17:25][me].Identifier[17:26-17:32][buffer]]]
		AssignmentStatement[18:3-18:36][Identifier[18:3-18:16][maxBufferSize] = MemberExpression[18:19-18:36][MemberExpression[18:19-18:32][Identifier[18:19-18:21][me].Identifier[18:22-18:32][characters]].Identifier[18:33-18:36][len]]]
		IfStatement[19:3-19:52][
			IfShortcutClause[19:3-19:52][BinaryExpression[19:7-19:16][Identifier[19:7-19:8][i] == Literal[19:12-19:16][null]]
				AssignmentStatement[19:23-19:52][Identifier[19:23-19:24][i] = BinaryExpression[19:27-19:52][MemberExpression[19:27-19:48][Identifier[19:27-19:44][currentCharBuffer].Identifier[19:45-19:48][len]] - Literal[19:51-19:52][1]]]
			]
		]
		AssignmentStatement[20:3-20:27][Identifier[20:3-20:4][p] = IndexExpression[20:7-20:27][Identifier[20:7-20:24][currentCharBuffer][Identifier[20:25-20:26][i]]]]
		AssignmentStatement[21:3-21:12][Identifier[21:3-21:4][p] = BinaryExpression[21:7-21:12][Identifier[21:7-21:8][p] + Literal[21:11-21:12][1]]]
		AssignmentStatement[22:3-22:27][IndexExpression[22:3-22:23][Identifier[22:3-22:20][currentCharBuffer][Identifier[22:21-22:22][i]]] = Identifier[22:26-22:27][p]]
		IfStatement[23:3-30:9][
			IfClause[23:3-30:9][BinaryExpression[23:7-23:25][Identifier[23:7-23:8][p] == Identifier[23:12-23:25][maxBufferSize]]
				AssignmentStatement[24:5-24:29][IndexExpression[24:5-24:25][Identifier[24:5-24:22][currentCharBuffer][Identifier[24:23-24:24][i]]] = Literal[24:28-24:29][0]]
				IfStatement[25:5-29:11][
					IfClause[25:5-27:9][BinaryExpression[25:9-25:15][Identifier[25:9-25:10][i] == Literal[25:14-25:15][0]]
						CallExpression[26:7-26:32][MemberExpression[26:7-26:29][Identifier[26:7-26:24][currentCharBuffer].Identifier[26:25-26:29][push]](Literal[26:30-26:31][0])]
					]
					ElseClause[27:9-29:11][
						CallExpression[28:7-28:31][MemberExpression[28:7-28:24][Identifier[28:7-28:9][me].Identifier[28:10-28:24][increaseBuffer]](BinaryExpression[28:25-28:30][Identifier[28:25-28:26][i] - Literal[28:29-28:30][1]])]
					}]
				]
			]
		]
	]]
	AssignmentStatement[33:1-52:13][MemberExpression[33:1-33:22][Identifier[33:1-33:18][PasswordGenerator].Identifier[33:19-33:22][gen]] = Function[33:25-52:13][ =>
		AssignmentStatement[34:3-34:12][Identifier[34:3-34:5][me] = Identifier[34:8-34:12][self]]
		AssignmentStatement[35:3-35:32][Identifier[35:3-35:20][currentCharBuffer] = MemberExpression[35:23-35:32][Identifier[35:23-35:25][me].Identifier[35:26-35:32][buffer]]]
		AssignmentStatement[36:3-36:38][Identifier[36:3-36:22][generatorCharacters] = MemberExpression[36:25-36:38][Identifier[36:25-36:27][me].Identifier[36:28-36:38][characters]]]
		AssignmentStatement[37:3-37:16][Identifier[37:3-37:11][password] = Literal[37:14-37:16][]]
		AssignmentStatement[38:3-38:12][Identifier[38:3-38:8][index] = Literal[38:11-38:12][0]]
		WhileStatement[40:3-45:12][BinaryExpression[40:9-40:38][Identifier[40:9-40:14][index] < MemberExpression[40:17-40:38][Identifier[40:17-40:34][currentCharBuffer].Identifier[40:35-40:38][len]]]
			AssignmentStatement[41:5-41:39][Identifier[41:5-41:12][pointer] = IndexExpression[41:15-41:39][Identifier[41:15-41:32][currentCharBuffer][Identifier[41:33-41:38][index]]]]
			AssignmentStatement[42:5-42:55][Identifier[42:5-42:13][password] = BinaryExpression[42:16-42:55][Identifier[42:16-42:24][password] + IndexExpression[42:27-42:55][Identifier[42:27-42:46][generatorCharacters][Identifier[42:47-42:54][pointer]]]]]
			IfStatement[43:5-43:71][
				IfShortcutClause[43:5-43:71][BinaryExpression[43:9-43:43][Identifier[43:9-43:14][index] == BinaryExpression[43:18-43:43][MemberExpression[43:18-43:39][Identifier[43:18-43:35][currentCharBuffer].Identifier[43:36-43:39][len]] - Literal[43:42-43:43][1]]]
					CallExpression[43:50-43:71][MemberExpression[43:50-43:69][Identifier[43:50-43:54][self].Identifier[43:55-43:69][increaseBuffer]]()]
				]
			]
			AssignmentStatement[44:5-44:22][Identifier[44:5-44:10][index] = BinaryExpression[44:13-44:22][Identifier[44:13-44:18][index] + Literal[44:21-44:22][1]]]
		]
		IfStatement[47:3-49:9][
			IfClause[47:3-49:9][BinaryExpression[47:7-47:53][MemberExpression[47:7-47:28][Identifier[47:7-47:24][currentCharBuffer].Identifier[47:25-47:28][len]] > MemberExpression[47:31-47:53][Identifier[47:31-47:33][me].Identifier[47:34-47:53][MAX_PASSWORD_LENGTH]]]
				ReturnStatement[48:5-48:16][Literal[48:12-48:16][null]]
			]
		]
		ReturnStatement[51:3-51:18][Identifier[51:10-51:18][password]]
	]]
	AssignmentStatement[54:1-54:45][Identifier[54:1-54:5][pgen] = CallExpression[54:8-54:45][MemberExpression[54:8-54:43][UnaryExpression[54:9-54:30][new Identifier[54:13-54:30][PasswordGenerator]].Identifier[54:32-54:43][constructor]]()]]
	AssignmentStatement[56:1-56:10][Identifier[56:1-56:6][index] = Literal[56:9-56:10][0]]
	AssignmentStatement[57:1-57:9][Identifier[57:1-57:4][max] = Literal[57:7-57:9][10]]
	AssignmentStatement[58:1-58:12][Identifier[58:1-58:7][result] = ListConstructor[58:10-58:12][]]
	WhileStatement[60:1-63:10][BinaryExpression[60:8-60:19][Identifier[60:8-60:13][index] < Identifier[60:16-60:19][max]]
		CallExpression[61:3-61:26][MemberExpression[61:3-61:14][Identifier[61:3-61:9][result].Identifier[61:10-61:14][push]](CallExpression[61:15-61:25][MemberExpression[61:15-61:23][Identifier[61:15-61:19][pgen].Identifier[61:20-61:23][gen]]()])]
		AssignmentStatement[62:3-62:20][Identifier[62:3-62:8][index] = BinaryExpression[62:11-62:20][Identifier[62:11-62:16][index] + Literal[62:19-62:20][1]]]
	]
	CallExpression[65:1-65:14][Identifier[65:1-65:6][print](Identifier[65:7-65:13][result])]
]"
`;

exports[`parse default scripts password-generator.ms 2`] = `undefined`;

exports[`parse default scripts password-generator.ms 3`] = `19`;

exports[`parse default scripts password-generator.ms 4`] = `13`;

exports[`parse default scripts password-generator.ms unsafe 1`] = `
"Chunk[1:1-65:14][
	AssignmentStatement[1:1-1:23][Identifier[1:1-1:18][PasswordGenerator] = MapConstructor[1:21-1:23][]]
	AssignmentStatement[3:1-3:43][MemberExpression[3:1-3:38][Identifier[3:1-3:18][PasswordGenerator].Identifier[3:19-3:38][MAX_PASSWORD_LENGTH]] = Literal[3:41-3:43][15]]
	AssignmentStatement[4:1-4:71][MemberExpression[4:1-4:40][Identifier[4:1-4:18][PasswordGenerator].Identifier[4:19-4:40][ALPHABETIC_CHARACTERS]] = Literal[4:43-4:71][qwertzuiopasdfghjklyxcvbnm]]
	AssignmentStatement[5:1-5:51][MemberExpression[5:1-5:36][Identifier[5:1-5:18][PasswordGenerator].Identifier[5:19-5:36][NUMBER_CHARACTERS]] = Literal[5:39-5:51][0123456789]]
	AssignmentStatement[6:1-6:160][MemberExpression[6:1-6:32][Identifier[6:1-6:18][PasswordGenerator].Identifier[6:19-6:32][ALPHA_NUMERIC]] = BinaryExpression[6:35-6:160][BinaryExpression[6:35-6:122][MemberExpression[6:35-6:74][Identifier[6:35-6:52][PasswordGenerator].Identifier[6:53-6:74][ALPHABETIC_CHARACTERS]] + MemberExpression[6:77-6:122][MemberExpression[6:77-6:116][Identifier[6:77-6:94][PasswordGenerator].Identifier[6:95-6:116][ALPHABETIC_CHARACTERS]].Identifier[6:117-6:122][upper]]] + MemberExpression[6:125-6:160][Identifier[6:125-6:142][PasswordGenerator].Identifier[6:143-6:160][NUMBER_CHARACTERS]]]]
	AssignmentStatement[8:1-13:13][MemberExpression[8:1-8:30][Identifier[8:1-8:18][PasswordGenerator].Identifier[8:19-8:30][constructor]] = Function[8:33-13:13][ =>
		AssignmentStatement[9:3-9:12][Identifier[9:3-9:5][me] = Identifier[9:8-9:12][self]]
		AssignmentStatement[10:3-10:18][MemberExpression[10:3-10:12][Identifier[10:3-10:5][me].Identifier[10:6-10:12][buffer]] = ListConstructor[10:15-10:18][
			ListValue[10:16-10:17][Literal[10:16-10:17][0]]
		]]
		AssignmentStatement[11:3-11:35][MemberExpression[11:3-11:16][Identifier[11:3-11:5][me].Identifier[11:6-11:16][characters]] = MemberExpression[11:19-11:35][Identifier[11:19-11:21][me].Identifier[11:22-11:35][ALPHA_NUMERIC]]]
		ReturnStatement[12:3-12:12][Identifier[12:10-12:12][me]]
	]]
	AssignmentStatement[15:1-31:13][MemberExpression[15:1-15:33][Identifier[15:1-15:18][PasswordGenerator].Identifier[15:19-15:33][increaseBuffer]] = Function[15:36-31:13][Identifier[15:45-15:46][i] =>
		AssignmentStatement[16:3-16:12][Identifier[16:3-16:5][me] = Identifier[16:8-16:12][self]]
		AssignmentStatement[17:3-17:32][Identifier[17:3-17:20][currentCharBuffer] = MemberExpression[17:23-17:32][Identifier[17:23-17:25][me].Identifier[17:26-17:32][buffer]]]
		AssignmentStatement[18:3-18:36][Identifier[18:3-18:16][maxBufferSize] = MemberExpression[18:19-18:36][MemberExpression[18:19-18:32][Identifier[18:19-18:21][me].Identifier[18:22-18:32][characters]].Identifier[18:33-18:36][len]]]
		IfStatement[19:3-19:52][
			IfShortcutClause[19:3-19:52][BinaryExpression[19:7-19:16][Identifier[19:7-19:8][i] == Literal[19:12-19:16][null]]
				AssignmentStatement[19:23-19:52][Identifier[19:23-19:24][i] = BinaryExpression[19:27-19:52][MemberExpression[19:27-19:48][Identifier[19:27-19:44][currentCharBuffer].Identifier[19:45-19:48][len]] - Literal[19:51-19:52][1]]]
			]
		]
		AssignmentStatement[20:3-20:27][Identifier[20:3-20:4][p] = IndexExpression[20:7-20:27][Identifier[20:7-20:24][currentCharBuffer][Identifier[20:25-20:26][i]]]]
		AssignmentStatement[21:3-21:12][Identifier[21:3-21:4][p] = BinaryExpression[21:7-21:12][Identifier[21:7-21:8][p] + Literal[21:11-21:12][1]]]
		AssignmentStatement[22:3-22:27][IndexExpression[22:3-22:23][Identifier[22:3-22:20][currentCharBuffer][Identifier[22:21-22:22][i]]] = Identifier[22:26-22:27][p]]
		IfStatement[23:3-30:9][
			IfClause[23:3-30:9][BinaryExpression[23:7-23:25][Identifier[23:7-23:8][p] == Identifier[23:12-23:25][maxBufferSize]]
				AssignmentStatement[24:5-24:29][IndexExpression[24:5-24:25][Identifier[24:5-24:22][currentCharBuffer][Identifier[24:23-24:24][i]]] = Literal[24:28-24:29][0]]
				IfStatement[25:5-29:11][
					IfClause[25:5-27:9][BinaryExpression[25:9-25:15][Identifier[25:9-25:10][i] == Literal[25:14-25:15][0]]
						CallExpression[26:7-26:32][MemberExpression[26:7-26:29][Identifier[26:7-26:24][currentCharBuffer].Identifier[26:25-26:29][push]](Literal[26:30-26:31][0])]
					]
					ElseClause[27:9-29:11][
						CallExpression[28:7-28:31][MemberExpression[28:7-28:24][Identifier[28:7-28:9][me].Identifier[28:10-28:24][increaseBuffer]](BinaryExpression[28:25-28:30][Identifier[28:25-28:26][i] - Literal[28:29-28:30][1]])]
					}]
				]
			]
		]
	]]
	AssignmentStatement[33:1-52:13][MemberExpression[33:1-33:22][Identifier[33:1-33:18][PasswordGenerator].Identifier[33:19-33:22][gen]] = Function[33:25-52:13][ =>
		AssignmentStatement[34:3-34:12][Identifier[34:3-34:5][me] = Identifier[34:8-34:12][self]]
		AssignmentStatement[35:3-35:32][Identifier[35:3-35:20][currentCharBuffer] = MemberExpression[35:23-35:32][Identifier[35:23-35:25][me].Identifier[35:26-35:32][buffer]]]
		AssignmentStatement[36:3-36:38][Identifier[36:3-36:22][generatorCharacters] = MemberExpression[36:25-36:38][Identifier[36:25-36:27][me].Identifier[36:28-36:38][characters]]]
		AssignmentStatement[37:3-37:16][Identifier[37:3-37:11][password] = Literal[37:14-37:16][]]
		AssignmentStatement[38:3-38:12][Identifier[38:3-38:8][index] = Literal[38:11-38:12][0]]
		WhileStatement[40:3-45:12][BinaryExpression[40:9-40:38][Identifier[40:9-40:14][index] < MemberExpression[40:17-40:38][Identifier[40:17-40:34][currentCharBuffer].Identifier[40:35-40:38][len]]]
			AssignmentStatement[41:5-41:39][Identifier[41:5-41:12][pointer] = IndexExpression[41:15-41:39][Identifier[41:15-41:32][currentCharBuffer][Identifier[41:33-41:38][index]]]]
			AssignmentStatement[42:5-42:55][Identifier[42:5-42:13][password] = BinaryExpression[42:16-42:55][Identifier[42:16-42:24][password] + IndexExpression[42:27-42:55][Identifier[42:27-42:46][generatorCharacters][Identifier[42:47-42:54][pointer]]]]]
			IfStatement[43:5-43:71][
				IfShortcutClause[43:5-43:71][BinaryExpression[43:9-43:43][Identifier[43:9-43:14][index] == BinaryExpression[43:18-43:43][MemberExpression[43:18-43:39][Identifier[43:18-43:35][currentCharBuffer].Identifier[43:36-43:39][len]] - Literal[43:42-43:43][1]]]
					CallExpression[43:50-43:71][MemberExpression[43:50-43:69][Identifier[43:50-43:54][self].Identifier[43:55-43:69][increaseBuffer]]()]
				]
			]
			AssignmentStatement[44:5-44:22][Identifier[44:5-44:10][index] = BinaryExpression[44:13-44:22][Identifier[44:13-44:18][index] + Literal[44:21-44:22][1]]]
		]
		IfStatement[47:3-49:9][
			IfClause[47:3-49:9][BinaryExpression[47:7-47:53][MemberExpression[47:7-47:28][Identifier[47:7-47:24][currentCharBuffer].Identifier[47:25-47:28][len]] > MemberExpression[47:31-47:53][Identifier[47:31-47:33][me].Identifier[47:34-47:53][MAX_PASSWORD_LENGTH]]]
				ReturnStatement[48:5-48:16][Literal[48:12-48:16][null]]
			]
		]
		ReturnStatement[51:3-51:18][Identifier[51:10-51:18][password]]
	]]
	AssignmentStatement[54:1-54:45][Identifier[54:1-54:5][pgen] = CallExpression[54:8-54:45][MemberExpression[54:8-54:43][UnaryExpression[54:9-54:30][new Identifier[54:13-54:30][PasswordGenerator]].Identifier[54:32-54:43][constructor]]()]]
	AssignmentStatement[56:1-56:10][Identifier[56:1-56:6][index] = Literal[56:9-56:10][0]]
	AssignmentStatement[57:1-57:9][Identifier[57:1-57:4][max] = Literal[57:7-57:9][10]]
	AssignmentStatement[58:1-58:12][Identifier[58:1-58:7][result] = ListConstructor[58:10-58:12][]]
	WhileStatement[60:1-63:10][BinaryExpression[60:8-60:19][Identifier[60:8-60:13][index] < Identifier[60:16-60:19][max]]
		CallExpression[61:3-61:26][MemberExpression[61:3-61:14][Identifier[61:3-61:9][result].Identifier[61:10-61:14][push]](CallExpression[61:15-61:25][MemberExpression[61:15-61:23][Identifier[61:15-61:19][pgen].Identifier[61:20-61:23][gen]]()])]
		AssignmentStatement[62:3-62:20][Identifier[62:3-62:8][index] = BinaryExpression[62:11-62:20][Identifier[62:11-62:16][index] + Literal[62:19-62:20][1]]]
	]
	CallExpression[65:1-65:14][Identifier[65:1-65:6][print](Identifier[65:7-65:13][result])]
]"
`;

exports[`parse default scripts pseudo-crypto.ms 1`] = `
"Chunk[1:1-213:1][
	AssignmentStatement[1:1-1:12][Identifier[1:1-1:7][String] = MapConstructor[1:10-1:12][]]
	AssignmentStatement[3:1-6:13][MemberExpression[3:1-3:19][Identifier[3:1-3:7][String].Identifier[3:8-3:19][constructor]] = Function[3:22-6:13][Identifier[3:31-3:34][str] =>
		AssignmentStatement[4:3-4:17][MemberExpression[4:3-4:11][Identifier[4:3-4:7][self].Identifier[4:8-4:11][str]] = Identifier[4:14-4:17][str]]
		ReturnStatement[5:3-5:14][Identifier[5:10-5:14][self]]
	]]
	AssignmentStatement[8:1-19:13][MemberExpression[8:1-8:13][Identifier[8:1-8:7][String].Identifier[8:8-8:13][parse]] = Function[8:16-19:13][Identifier[8:25-8:31][values] =>
		AssignmentStatement[9:3-9:20][Identifier[9:3-9:9][result] = MemberExpression[9:12-9:20][Identifier[9:12-9:16][self].Identifier[9:17-9:20][str]]]
		AssignmentStatement[10:3-10:12][Identifier[10:3-10:8][index] = Literal[10:11-10:12][0]]
		AssignmentStatement[11:3-11:24][Identifier[11:3-11:11][maxIndex] = MemberExpression[11:14-11:24][Identifier[11:14-11:20][values].Identifier[11:21-11:24][len]]]
		WhileStatement[13:3-16:12][BinaryExpression[13:9-13:25][Identifier[13:9-13:14][index] < Identifier[13:17-13:25][maxIndex]]
			AssignmentStatement[14:5-14:54][Identifier[14:5-14:11][result] = CallExpression[14:14-14:54][MemberExpression[14:14-14:28][Identifier[14:14-14:20][result].Identifier[14:21-14:28][replace]](BinaryExpression[14:29-14:38][Literal[14:29-14:32][$] + Identifier[14:33-14:38][index]], IndexExpression[14:40-14:53][Identifier[14:40-14:46][values][Identifier[14:47-14:52][index]]])]]
			AssignmentStatement[15:5-15:22][Identifier[15:5-15:10][index] = BinaryExpression[15:13-15:22][Identifier[15:13-15:18][index] + Literal[15:21-15:22][1]]]
		]
		ReturnStatement[18:3-18:40][CallExpression[18:10-18:40][MemberExpression[18:10-18:32][UnaryExpression[18:11-18:19][new Identifier[18:15-18:19][self]].Identifier[18:21-18:32][constructor]](Identifier[18:33-18:39][result])]]
	]]
	AssignmentStatement[21:1-23:13][MemberExpression[21:1-21:18][Identifier[21:1-21:7][String].Identifier[21:8-21:18][startsWith]] = Function[21:21-23:13][Identifier[21:30-21:33][str] =>
		ReturnStatement[22:3-22:36][BinaryExpression[22:10-22:36][CallExpression[22:10-22:31][MemberExpression[22:10-22:26][MemberExpression[22:10-22:18][Identifier[22:10-22:14][self].Identifier[22:15-22:18][str]].Identifier[22:19-22:26][indexOf]](Identifier[22:27-22:30][str])] == Literal[22:35-22:36][0]]]
	]]
	AssignmentStatement[25:1-27:13][MemberExpression[25:1-25:14][Identifier[25:1-25:7][String].Identifier[25:8-25:14][substr]] = Function[25:17-27:13][Identifier[25:26-25:36][startIndex], Identifier[25:38-25:46][endIndex] =>
		ReturnStatement[26:3-26:71][CallExpression[26:10-26:71][MemberExpression[26:10-26:32][UnaryExpression[26:11-26:19][new Identifier[26:15-26:19][self]].Identifier[26:21-26:32][constructor]](CallExpression[26:33-26:70][Identifier[26:33-26:38][slice](MemberExpression[26:39-26:47][Identifier[26:39-26:43][self].Identifier[26:44-26:47][str]], Identifier[26:49-26:59][startIndex], Identifier[26:61-26:69][endIndex])])]]
	]]
	AssignmentStatement[29:1-31:13][MemberExpression[29:1-29:15][Identifier[29:1-29:7][String].Identifier[29:8-29:15][indexOf]] = Function[29:18-31:13][Identifier[29:27-29:30][str] =>
		ReturnStatement[30:3-30:31][CallExpression[30:10-30:31][MemberExpression[30:10-30:26][MemberExpression[30:10-30:18][Identifier[30:10-30:14][self].Identifier[30:15-30:18][str]].Identifier[30:19-30:26][indexOf]](Identifier[30:27-30:30][str])]]
	]]
	AssignmentStatement[33:1-35:13][MemberExpression[33:1-33:15][Identifier[33:1-33:7][String].Identifier[33:8-33:15][replace]] = Function[33:18-35:13][Identifier[33:27-33:30][str], Identifier[33:32-33:38][newStr] =>
		ReturnStatement[34:3-34:63][CallExpression[34:10-34:63][MemberExpression[34:10-34:32][UnaryExpression[34:11-34:19][new Identifier[34:15-34:19][self]].Identifier[34:21-34:32][constructor]](CallExpression[34:33-34:62][MemberExpression[34:33-34:49][MemberExpression[34:33-34:41][Identifier[34:33-34:37][self].Identifier[34:38-34:41][str]].Identifier[34:42-34:49][replace]](Identifier[34:50-34:53][str], Identifier[34:55-34:61][newStr])])]]
	]]
	AssignmentStatement[37:1-39:13][MemberExpression[37:1-37:14][Identifier[37:1-37:7][String].Identifier[37:8-37:14][remove]] = Function[37:17-39:13][Identifier[37:26-37:29][str] =>
		ReturnStatement[38:3-38:54][CallExpression[38:10-38:54][MemberExpression[38:10-38:32][UnaryExpression[38:11-38:19][new Identifier[38:15-38:19][self]].Identifier[38:21-38:32][constructor]](CallExpression[38:33-38:53][MemberExpression[38:33-38:48][MemberExpression[38:33-38:41][Identifier[38:33-38:37][self].Identifier[38:38-38:41][str]].Identifier[38:42-38:48][remove]](Identifier[38:49-38:52][str])])]]
	]]
	AssignmentStatement[41:1-43:13][MemberExpression[41:1-41:16][Identifier[41:1-41:7][String].Identifier[41:8-41:16][toString]] = Function[41:19-43:13][ =>
		ReturnStatement[42:3-42:18][MemberExpression[42:10-42:18][Identifier[42:10-42:14][self].Identifier[42:15-42:18][str]]]
	]]
	AssignmentStatement[45:1-47:13][MemberExpression[45:1-45:14][Identifier[45:1-45:7][String].Identifier[45:8-45:14][length]] = Function[45:17-47:13][ =>
		ReturnStatement[46:3-46:22][MemberExpression[46:10-46:22][MemberExpression[46:10-46:18][Identifier[46:10-46:14][self].Identifier[46:15-46:18][str]].Identifier[46:19-46:22][len]]]
	]]
	AssignmentStatement[49:1-51:13][MemberExpression[49:1-49:13][Identifier[49:1-49:7][String].Identifier[49:8-49:13][split]] = Function[49:16-51:13][Identifier[49:25-49:34][seperator] =>
		ReturnStatement[50:3-50:35][CallExpression[50:10-50:35][MemberExpression[50:10-50:24][MemberExpression[50:10-50:18][Identifier[50:10-50:14][self].Identifier[50:15-50:18][str]].Identifier[50:19-50:24][split]](Identifier[50:25-50:34][seperator])]]
	]]
	AssignmentStatement[53:1-55:13][MemberExpression[53:1-53:12][Identifier[53:1-53:7][String].Identifier[53:8-53:12][trim]] = Function[53:15-55:13][Identifier[53:24-53:33][seperator] =>
		ReturnStatement[54:3-54:49][CallExpression[54:10-54:49][MemberExpression[54:10-54:32][UnaryExpression[54:11-54:19][new Identifier[54:15-54:19][self]].Identifier[54:21-54:32][constructor]](CallExpression[54:33-54:48][MemberExpression[54:33-54:46][MemberExpression[54:33-54:41][Identifier[54:33-54:37][self].Identifier[54:38-54:41][str]].Identifier[54:42-54:46][trim]]()])]]
	]]
	AssignmentStatement[57:1-57:11][Identifier[57:1-57:6][Error] = MapConstructor[57:9-57:11][]]
	AssignmentStatement[59:1-59:22][MemberExpression[59:1-59:13][Identifier[59:1-59:6][Error].Identifier[59:7-59:13][String]] = Identifier[59:16-59:22][String]]
	AssignmentStatement[61:1-68:13][MemberExpression[61:1-61:18][Identifier[61:1-61:6][Error].Identifier[61:7-61:18][constructor]] = Function[61:21-68:13][Identifier[61:30-61:37][message], Identifier[61:39-61:45][values] =>
		AssignmentStatement[62:3-62:11][Identifier[62:3-62:4][m] = Identifier[62:7-62:11][self]]
		AssignmentStatement[63:3-63:22][MemberExpression[63:3-63:12][Identifier[63:3-63:4][m].Identifier[63:5-63:12][message]] = Identifier[63:15-63:22][message]]
		IfStatement[64:3-66:9][
			IfClause[64:3-66:9][BinaryExpression[64:7-64:21][Identifier[64:7-64:13][values] != Literal[64:17-64:21][null]]
				AssignmentStatement[65:5-65:77][MemberExpression[65:5-65:14][Identifier[65:5-65:6][m].Identifier[65:7-65:14][message]] = CallExpression[65:17-65:77][MemberExpression[65:17-65:75][CallExpression[65:17-65:66][MemberExpression[65:17-65:58][CallExpression[65:17-65:52][MemberExpression[65:17-65:43][UnaryExpression[65:18-65:30][new MemberExpression[65:22-65:30][Identifier[65:22-65:23][m].Identifier[65:24-65:30][String]]].Identifier[65:32-65:43][constructor]](Identifier[65:44-65:51][message])].Identifier[65:53-65:58][parse]](Identifier[65:59-65:65][values])].Identifier[65:67-65:75][toString]]()]]
			]
		]
		ReturnStatement[67:3-67:11][Identifier[67:10-67:11][m]]
	]]
	AssignmentStatement[70:1-72:13][MemberExpression[70:1-70:12][Identifier[70:1-70:6][Error].Identifier[70:7-70:12][throw]] = Function[70:15-72:13][ =>
		CallExpression[71:3-71:54][Identifier[71:3-71:7][exit](BinaryExpression[71:8-71:53][BinaryExpression[71:8-71:40][Literal[71:8-71:25][<color=#ff0000>] + MemberExpression[71:28-71:40][Identifier[71:28-71:32][self].Identifier[71:33-71:40][message]]] + Literal[71:43-71:53][</color>]])]
	]]
	AssignmentStatement[74:1-74:12][Identifier[74:1-74:7][Crypto] = MapConstructor[74:10-74:12][]]
	AssignmentStatement[76:1-76:91][MemberExpression[76:1-76:22][Identifier[76:1-76:7][Crypto].Identifier[76:8-76:22][defaultCharset]] = Literal[76:25-76:91][QWERTZUIOPASDFGHJKLYXCVBNMqwertzuiopasdfghjklyxcvbnm1234567890+-]]
	AssignmentStatement[77:1-77:33][MemberExpression[77:1-77:21][Identifier[77:1-77:7][Crypto].Identifier[77:8-77:21][defaultSecret]] = Literal[77:24-77:33][test123]]
	AssignmentStatement[78:1-78:27][MemberExpression[78:1-78:19][Identifier[78:1-78:7][Crypto].Identifier[78:8-78:19][maxCharCode]] = Literal[78:22-78:27][55295]]
	AssignmentStatement[79:1-79:21][MemberExpression[79:1-79:13][Identifier[79:1-79:7][Crypto].Identifier[79:8-79:13][Error]] = Identifier[79:16-79:21][Error]]
	AssignmentStatement[81:1-90:13][MemberExpression[81:1-81:19][Identifier[81:1-81:7][Crypto].Identifier[81:8-81:19][constructor]] = Function[81:22-90:13][Identifier[81:31-81:44][defaultSecret], Identifier[81:46-81:52][hashFn], Identifier[81:54-81:61][charset] =>
		AssignmentStatement[82:3-82:12][Identifier[82:3-82:5][me] = Identifier[82:8-82:12][self]]
		AssignmentStatement[83:3-83:35][MemberExpression[83:3-83:19][Identifier[83:3-83:5][me].Identifier[83:6-83:19][defaultSecret]] = Identifier[83:22-83:35][defaultSecret]]
		AssignmentStatement[84:3-84:21][MemberExpression[84:3-84:11][Identifier[84:3-84:5][me].Identifier[84:6-84:11][table]] = Identifier[84:14-84:21][charset]]
		AssignmentStatement[85:3-85:22][MemberExpression[85:3-85:12][Identifier[85:3-85:5][me].Identifier[85:6-85:12][hashFn]] = UnaryExpression[85:15-85:22][@ Identifier[85:16-85:22][hashFn]]]
		IfStatement[86:3-86:45][
			IfShortcutClause[86:3-86:45][BinaryExpression[86:7-86:22][UnaryExpression[86:7-86:14][@ Identifier[86:8-86:14][hashFn]] == Literal[86:18-86:22][null]]
				AssignmentStatement[86:29-86:45][MemberExpression[86:29-86:38][Identifier[86:29-86:31][me].Identifier[86:32-86:38][hashFn]] = UnaryExpression[86:41-86:45][@ Identifier[86:42-86:45][md5]]]
			]
		]
		IfStatement[87:3-87:55][
			IfShortcutClause[87:3-87:55][BinaryExpression[87:6-87:21][Identifier[87:6-87:13][charset] == Literal[87:17-87:21][null]]
				AssignmentStatement[87:27-87:55][MemberExpression[87:27-87:35][Identifier[87:27-87:29][me].Identifier[87:30-87:35][table]] = MemberExpression[87:38-87:55][Identifier[87:38-87:40][me].Identifier[87:41-87:55][defaultCharset]]]
			]
		]
		IfStatement[88:3-88:101][
			IfShortcutClause[88:3-88:101][BinaryExpression[88:6-88:24][MemberExpression[88:6-88:18][MemberExpression[88:6-88:14][Identifier[88:6-88:8][me].Identifier[88:9-88:14][table]].Identifier[88:15-88:18][len]] != Literal[88:22-88:24][64]]
				CallExpression[88:30-88:101][MemberExpression[88:30-88:99][CallExpression[88:30-88:93][MemberExpression[88:30-88:56][UnaryExpression[88:31-88:43][new MemberExpression[88:35-88:43][Identifier[88:35-88:37][me].Identifier[88:38-88:43][Error]]].Identifier[88:45-88:56][constructor]](Literal[88:57-88:80][Invalid charset $0...], ListConstructor[88:82-88:92][
					ListValue[88:83-88:91][MemberExpression[88:83-88:91][Identifier[88:83-88:85][me].Identifier[88:86-88:91][table]]]
				])].Identifier[88:94-88:99][throw]]()]
			]
		]
		ReturnStatement[89:3-89:12][Identifier[89:10-89:12][me]]
	]]
	AssignmentStatement[92:1-101:13][MemberExpression[92:1-92:15][Identifier[92:1-92:7][Crypto].Identifier[92:8-92:15][getHash]] = Function[92:18-101:13][Identifier[92:27-92:29][pw] =>
		AssignmentStatement[93:3-93:12][Identifier[93:3-93:5][me] = Identifier[93:8-93:12][self]]
		AssignmentStatement[94:3-94:12][Identifier[94:3-94:7][hash] = ListConstructor[94:10-94:12][]]
		AssignmentStatement[95:3-95:20][Identifier[95:3-95:4][x] = CallExpression[95:7-95:20][MemberExpression[95:7-95:16][Identifier[95:7-95:9][me].Identifier[95:10-95:16][hashFn]](Identifier[95:17-95:19][pw])]]
		For[96:3-98:10][Identifier[96:7-96:11][char] in Identifier[96:15-96:16][x]
			CallExpression[97:5-97:25][MemberExpression[97:5-97:14][Identifier[97:5-97:9][hash].Identifier[97:10-97:14][push]](MemberExpression[97:15-97:24][Identifier[97:15-97:19][char].Identifier[97:20-97:24][code]])]
		]
		MemberExpression[99:3-99:15][Identifier[99:3-99:7][hash].Identifier[99:8-99:15][reverse]]
		ReturnStatement[100:3-100:14][Identifier[100:10-100:14][hash]]
	]]
	AssignmentStatement[103:1-156:13][MemberExpression[103:1-103:15][Identifier[103:1-103:7][Crypto].Identifier[103:8-103:15][encrypt]] = Function[103:18-156:13][Identifier[103:27-103:30][str], Identifier[103:32-103:34][pw] =>
		AssignmentStatement[104:3-104:12][Identifier[104:3-104:5][me] = Identifier[104:8-104:12][self]]
		IfStatement[105:3-105:45][
			IfShortcutClause[105:3-105:45][BinaryExpression[105:7-105:17][Identifier[105:7-105:9][pw] == Literal[105:13-105:17][null]]
				AssignmentStatement[105:24-105:45][Identifier[105:24-105:26][pw] = MemberExpression[105:29-105:45][Identifier[105:29-105:31][me].Identifier[105:32-105:45][defaultSecret]]]
			]
		]
		AssignmentStatement[106:3-106:24][Identifier[106:3-106:7][hash] = CallExpression[106:10-106:24][MemberExpression[106:10-106:20][Identifier[106:10-106:12][me].Identifier[106:13-106:20][getHash]](Identifier[106:21-106:23][pw])]]
		AssignmentStatement[107:3-107:18][Identifier[107:3-107:14][hashPointer] = Literal[107:17-107:18][0]]
		AssignmentStatement[108:3-108:14][Identifier[108:3-108:9][output] = ListConstructor[108:12-108:14][]]
		AssignmentStatement[109:3-109:15][Identifier[109:3-109:11][position] = Literal[109:14-109:15][0]]
		AssignmentStatement[110:3-110:24][Identifier[110:3-110:10][padding] = BinaryExpression[110:13-110:24][MemberExpression[110:13-110:20][Identifier[110:13-110:16][str].Identifier[110:17-110:20][len]] % Literal[110:23-110:24][3]]]
		AssignmentStatement[111:3-111:26][Identifier[111:3-111:6][max] = BinaryExpression[111:9-111:26][MemberExpression[111:9-111:16][Identifier[111:9-111:12][str].Identifier[111:13-111:16][len]] - Identifier[111:19-111:26][padding]]]
		AssignmentStatement[112:3-117:15][Identifier[112:3-112:6][get] = Function[112:9-117:15][Identifier[112:18-112:19][v] =>
			IfStatement[113:5-115:11][
				IfClause[113:5-115:11][NegationExpression[113:9-113:33][not CallExpression[113:13-113:33][MemberExpression[113:13-113:30][MemberExpression[113:13-113:21][Identifier[113:13-113:15][me].Identifier[113:16-113:21][table]].Identifier[113:22-113:30][hasIndex]](Identifier[113:31-113:32][v])]]
					CallExpression[114:7-114:69][MemberExpression[114:7-114:67][CallExpression[114:7-114:61][MemberExpression[114:7-114:33][UnaryExpression[114:8-114:20][new MemberExpression[114:12-114:20][Identifier[114:12-114:14][me].Identifier[114:15-114:20][Error]]].Identifier[114:22-114:33][constructor]](Literal[114:34-114:55][Invalid index $0...], ListConstructor[114:57-114:60][
						ListValue[114:58-114:59][Identifier[114:58-114:59][v]]
					])].Identifier[114:62-114:67][throw]]()]
				]
			]
			ReturnStatement[116:5-116:23][IndexExpression[116:12-116:23][MemberExpression[116:12-116:20][Identifier[116:12-116:14][me].Identifier[116:15-116:20][table]][Identifier[116:21-116:22][v]]]]
		]]
		AssignmentStatement[118:3-120:15][Identifier[118:3-118:6][AND] = Function[118:9-120:15][Identifier[118:18-118:19][a], Identifier[118:21-118:22][b] =>
			ReturnStatement[119:5-119:30][CallExpression[119:12-119:30][Identifier[119:12-119:19][bitwise](Literal[119:20-119:23][&], Identifier[119:25-119:26][a], Identifier[119:28-119:29][b])]]
		]]
		AssignmentStatement[121:3-123:15][Identifier[121:3-121:9][LSHIFT] = Function[121:12-123:15][Identifier[121:21-121:22][a], Identifier[121:24-121:25][b] =>
			ReturnStatement[122:5-122:31][CallExpression[122:12-122:31][Identifier[122:12-122:19][bitwise](Literal[122:20-122:24][<<], Identifier[122:26-122:27][a], Identifier[122:29-122:30][b])]]
		]]
		AssignmentStatement[124:3-126:15][Identifier[124:3-124:9][RSHIFT] = Function[124:12-126:15][Identifier[124:21-124:22][a], Identifier[124:24-124:25][b] =>
			ReturnStatement[125:5-125:31][CallExpression[125:12-125:31][Identifier[125:12-125:19][bitwise](Literal[125:20-125:24][>>], Identifier[125:26-125:27][a], Identifier[125:29-125:30][b])]]
		]]
		WhileStatement[127:3-138:12][BinaryExpression[127:9-127:23][Identifier[127:9-127:17][position] < Identifier[127:20-127:23][max]]
			AssignmentStatement[128:5-128:38][Identifier[128:5-128:6][m] = IndexExpression[128:9-128:38][Identifier[128:9-128:13][hash][BinaryExpression[128:14-128:37][BinaryExpression[128:14-128:33][Identifier[128:14-128:22][position] % MemberExpression[128:25-128:33][Identifier[128:25-128:29][hash].Identifier[128:30-128:33][len]]] - Literal[128:36-128:37][1]]]]]
			AssignmentStatement[129:5-129:43][Identifier[129:5-129:6][a] = CallExpression[129:9-129:43][Identifier[129:9-129:15][LSHIFT](BinaryExpression[129:16-129:38][MemberExpression[129:16-129:34][IndexExpression[129:16-129:29][Identifier[129:16-129:19][str][Identifier[129:20-129:28][position]]].Identifier[129:30-129:34][code]] + Identifier[129:37-129:38][m]], Literal[129:40-129:42][16])]]
			AssignmentStatement[130:5-130:46][Identifier[130:5-130:6][b] = CallExpression[130:9-130:46][Identifier[130:9-130:15][LSHIFT](BinaryExpression[130:16-130:42][MemberExpression[130:16-130:38][IndexExpression[130:16-130:33][Identifier[130:16-130:19][str][BinaryExpression[130:20-130:32][Identifier[130:20-130:28][position] + Literal[130:31-130:32][1]]]].Identifier[130:34-130:38][code]] + Identifier[130:41-130:42][m]], Literal[130:44-130:45][8])]]
			AssignmentStatement[131:5-131:35][Identifier[131:5-131:6][c] = BinaryExpression[131:9-131:35][MemberExpression[131:9-131:31][IndexExpression[131:9-131:26][Identifier[131:9-131:12][str][BinaryExpression[131:13-131:25][Identifier[131:13-131:21][position] + Literal[131:24-131:25][2]]]].Identifier[131:27-131:31][code]] + Identifier[131:34-131:35][m]]]
			AssignmentStatement[132:5-132:23][Identifier[132:5-132:11][buffer] = BinaryExpression[132:14-132:23][BinaryExpression[132:14-132:19][Identifier[132:14-132:15][a] + Identifier[132:18-132:19][b]] + Identifier[132:22-132:23][c]]]
			CallExpression[133:5-133:50][MemberExpression[133:5-133:16][Identifier[133:5-133:11][output].Identifier[133:12-133:16][push]](CallExpression[133:17-133:49][Identifier[133:17-133:20][get](CallExpression[133:21-133:48][Identifier[133:21-133:24][AND](CallExpression[133:25-133:43][Identifier[133:25-133:31][RSHIFT](Identifier[133:32-133:38][buffer], Literal[133:40-133:42][18])], Literal[133:45-133:47][63])])])]
			CallExpression[134:5-134:50][MemberExpression[134:5-134:16][Identifier[134:5-134:11][output].Identifier[134:12-134:16][push]](CallExpression[134:17-134:49][Identifier[134:17-134:20][get](CallExpression[134:21-134:48][Identifier[134:21-134:24][AND](CallExpression[134:25-134:43][Identifier[134:25-134:31][RSHIFT](Identifier[134:32-134:38][buffer], Literal[134:40-134:42][12])], Literal[134:45-134:47][63])])])]
			CallExpression[135:5-135:49][MemberExpression[135:5-135:16][Identifier[135:5-135:11][output].Identifier[135:12-135:16][push]](CallExpression[135:17-135:48][Identifier[135:17-135:20][get](CallExpression[135:21-135:47][Identifier[135:21-135:24][AND](CallExpression[135:25-135:42][Identifier[135:25-135:31][RSHIFT](Identifier[135:32-135:38][buffer], Literal[135:40-135:41][6])], Literal[135:44-135:46][63])])])]
			CallExpression[136:5-136:38][MemberExpression[136:5-136:16][Identifier[136:5-136:11][output].Identifier[136:12-136:16][push]](CallExpression[136:17-136:37][Identifier[136:17-136:20][get](CallExpression[136:21-136:36][Identifier[136:21-136:24][AND](Identifier[136:25-136:31][buffer], Literal[136:33-136:35][63])])])]
			AssignmentStatement[137:5-137:28][Identifier[137:5-137:13][position] = BinaryExpression[137:16-137:28][Identifier[137:16-137:24][position] + Literal[137:27-137:28][3]]]
		]
		IfStatement[139:3-154:9][
			IfClause[139:3-148:10][BinaryExpression[139:7-139:19][Identifier[139:7-139:14][padding] == Literal[139:18-139:19][2]]
				AssignmentStatement[140:5-140:38][Identifier[140:5-140:6][m] = IndexExpression[140:9-140:38][Identifier[140:9-140:13][hash][BinaryExpression[140:14-140:37][BinaryExpression[140:14-140:33][Identifier[140:14-140:22][position] % MemberExpression[140:25-140:33][Identifier[140:25-140:29][hash].Identifier[140:30-140:33][len]]] - Literal[140:36-140:37][1]]]]]
				AssignmentStatement[141:5-141:42][Identifier[141:5-141:6][a] = CallExpression[141:9-141:42][Identifier[141:9-141:15][LSHIFT](BinaryExpression[141:16-141:38][MemberExpression[141:16-141:34][IndexExpression[141:16-141:29][Identifier[141:16-141:19][str][Identifier[141:20-141:28][position]]].Identifier[141:30-141:34][code]] + Identifier[141:37-141:38][m]], Literal[141:40-141:41][8])]]
				AssignmentStatement[142:5-142:35][Identifier[142:5-142:6][b] = BinaryExpression[142:9-142:35][MemberExpression[142:9-142:31][IndexExpression[142:9-142:26][Identifier[142:9-142:12][str][BinaryExpression[142:13-142:25][Identifier[142:13-142:21][position] + Literal[142:24-142:25][1]]]].Identifier[142:27-142:31][code]] + Identifier[142:34-142:35][m]]]
				AssignmentStatement[143:5-143:19][Identifier[143:5-143:11][buffer] = BinaryExpression[143:14-143:19][Identifier[143:14-143:15][a] + Identifier[143:18-143:19][b]]]
				CallExpression[144:5-144:41][MemberExpression[144:5-144:16][Identifier[144:5-144:11][output].Identifier[144:12-144:16][push]](CallExpression[144:17-144:40][Identifier[144:17-144:20][get](CallExpression[144:21-144:39][Identifier[144:21-144:27][RSHIFT](Identifier[144:28-144:34][buffer], Literal[144:36-144:38][10])])])]
				CallExpression[145:5-145:49][MemberExpression[145:5-145:16][Identifier[145:5-145:11][output].Identifier[145:12-145:16][push]](CallExpression[145:17-145:48][Identifier[145:17-145:20][get](CallExpression[145:21-145:47][Identifier[145:21-145:24][AND](CallExpression[145:25-145:42][Identifier[145:25-145:31][RSHIFT](Identifier[145:32-145:38][buffer], Literal[145:40-145:41][4])], Literal[145:44-145:46][63])])])]
				CallExpression[146:5-146:49][MemberExpression[146:5-146:16][Identifier[146:5-146:11][output].Identifier[146:12-146:16][push]](CallExpression[146:17-146:48][Identifier[146:17-146:20][get](CallExpression[146:21-146:47][Identifier[146:21-146:24][AND](CallExpression[146:25-146:42][Identifier[146:25-146:31][LSHIFT](Identifier[146:32-146:38][buffer], Literal[146:40-146:41][2])], Literal[146:44-146:46][63])])])]
				CallExpression[147:5-147:21][MemberExpression[147:5-147:16][Identifier[147:5-147:11][output].Identifier[147:12-147:16][push]](Literal[147:17-147:20][=])]
			]
			ElseifClause[148:11-154:9][BinaryExpression[148:12-148:24][Identifier[148:12-148:19][padding] == Literal[148:23-148:24][1]]
				AssignmentStatement[149:5-149:38][Identifier[149:5-149:6][m] = IndexExpression[149:9-149:38][Identifier[149:9-149:13][hash][BinaryExpression[149:14-149:37][BinaryExpression[149:14-149:33][Identifier[149:14-149:22][position] % MemberExpression[149:25-149:33][Identifier[149:25-149:29][hash].Identifier[149:30-149:33][len]]] - Literal[149:36-149:37][1]]]]]
				AssignmentStatement[150:5-150:36][Identifier[150:5-150:11][buffer] = BinaryExpression[150:14-150:36][MemberExpression[150:14-150:32][IndexExpression[150:14-150:27][Identifier[150:14-150:17][str][Identifier[150:18-150:26][position]]].Identifier[150:28-150:32][code]] + Identifier[150:35-150:36][m]]]
				CallExpression[151:5-151:40][MemberExpression[151:5-151:16][Identifier[151:5-151:11][output].Identifier[151:12-151:16][push]](CallExpression[151:17-151:39][Identifier[151:17-151:20][get](CallExpression[151:21-151:38][Identifier[151:21-151:27][RSHIFT](Identifier[151:28-151:34][buffer], Literal[151:36-151:37][2])])])]
				CallExpression[152:5-152:49][MemberExpression[152:5-152:16][Identifier[152:5-152:11][output].Identifier[152:12-152:16][push]](CallExpression[152:17-152:48][Identifier[152:17-152:20][get](CallExpression[152:21-152:47][Identifier[152:21-152:24][AND](CallExpression[152:25-152:42][Identifier[152:25-152:31][LSHIFT](Identifier[152:32-152:38][buffer], Literal[152:40-152:41][4])], Literal[152:44-152:46][63])])])]
				CallExpression[153:5-153:22][MemberExpression[153:5-153:16][Identifier[153:5-153:11][output].Identifier[153:12-153:16][push]](Literal[153:17-153:21][==])]
			]
		]
		ReturnStatement[155:3-155:25][CallExpression[155:10-155:25][MemberExpression[155:10-155:21][Identifier[155:10-155:16][output].Identifier[155:17-155:21][join]](Literal[155:22-155:24][])]]
	]]
	AssignmentStatement[158:1-202:13][MemberExpression[158:1-158:15][Identifier[158:1-158:7][Crypto].Identifier[158:8-158:15][decrypt]] = Function[158:18-202:13][Identifier[158:27-158:30][str], Identifier[158:32-158:34][pw] =>
		AssignmentStatement[159:3-159:12][Identifier[159:3-159:5][me] = Identifier[159:8-159:12][self]]
		IfStatement[160:3-160:45][
			IfShortcutClause[160:3-160:45][BinaryExpression[160:7-160:17][Identifier[160:7-160:9][pw] == Literal[160:13-160:17][null]]
				AssignmentStatement[160:24-160:45][Identifier[160:24-160:26][pw] = MemberExpression[160:29-160:45][Identifier[160:29-160:31][me].Identifier[160:32-160:45][defaultSecret]]]
			]
		]
		AssignmentStatement[161:3-161:24][Identifier[161:3-161:7][hash] = CallExpression[161:10-161:24][MemberExpression[161:10-161:20][Identifier[161:10-161:12][me].Identifier[161:13-161:20][getHash]](Identifier[161:21-161:23][pw])]]
		AssignmentStatement[162:3-162:18][Identifier[162:3-162:14][hashPointer] = Literal[162:17-162:18][0]]
		AssignmentStatement[163:3-163:24][Identifier[163:3-163:13][hashLength] = MemberExpression[163:16-163:24][Identifier[163:16-163:20][hash].Identifier[163:21-163:24][len]]]
		AssignmentStatement[164:3-164:14][Identifier[164:3-164:9][output] = ListConstructor[164:12-164:14][]]
		AssignmentStatement[165:3-165:17][Identifier[165:3-165:13][bitCounter] = Literal[165:16-165:17][0]]
		AssignmentStatement[166:3-166:17][Identifier[166:3-166:13][bitStorage] = Literal[166:16-166:17][0]]
		AssignmentStatement[167:3-167:15][Identifier[167:3-167:11][position] = Literal[167:14-167:15][0]]
		AssignmentStatement[168:3-168:18][Identifier[168:3-168:14][hashPointer] = Literal[168:17-168:18][0]]
		AssignmentStatement[169:3-169:16][Identifier[169:3-169:6][max] = MemberExpression[169:9-169:16][Identifier[169:9-169:12][str].Identifier[169:13-169:16][len]]]
		AssignmentStatement[170:3-172:15][Identifier[170:3-170:6][AND] = Function[170:9-172:15][Identifier[170:18-170:19][a], Identifier[170:21-170:22][b] =>
			ReturnStatement[171:5-171:30][CallExpression[171:12-171:30][Identifier[171:12-171:19][bitwise](Literal[171:20-171:23][&], Identifier[171:25-171:26][a], Identifier[171:28-171:29][b])]]
		]]
		AssignmentStatement[173:3-175:15][Identifier[173:3-173:9][RSHIFT] = Function[173:12-175:15][Identifier[173:21-173:22][a], Identifier[173:24-173:25][b] =>
			ReturnStatement[174:5-174:31][CallExpression[174:12-174:31][Identifier[174:12-174:19][bitwise](Literal[174:20-174:24][>>], Identifier[174:26-174:27][a], Identifier[174:29-174:30][b])]]
		]]
		WhileStatement[176:3-200:12][BinaryExpression[176:9-176:23][Identifier[176:9-176:17][position] < Identifier[176:20-176:23][max]]
			AssignmentStatement[177:5-177:45][Identifier[177:5-177:11][buffer] = CallExpression[177:14-177:45][MemberExpression[177:14-177:30][MemberExpression[177:14-177:22][Identifier[177:14-177:16][me].Identifier[177:17-177:22][table]].Identifier[177:23-177:30][indexOf]](IndexExpression[177:31-177:44][Identifier[177:31-177:34][str][Identifier[177:35-177:43][position]]])]]
			AssignmentStatement[178:5-178:28][Identifier[178:5-178:15][currentBit] = Identifier[178:18-178:28][bitCounter]]
			AssignmentStatement[179:5-179:32][Identifier[179:5-179:15][bitCounter] = BinaryExpression[179:18-179:32][Identifier[179:18-179:28][bitCounter] + Literal[179:31-179:32][1]]]
			IfStatement[180:5-184:11][
				IfClause[180:5-182:9][BinaryExpression[180:9-180:23][Identifier[180:9-180:19][currentBit] % Literal[180:22-180:23][4]]
					AssignmentStatement[181:7-181:44][Identifier[181:7-181:17][bitStorage] = BinaryExpression[181:20-181:44][BinaryExpression[181:20-181:35][Identifier[181:20-181:30][bitStorage] * Literal[181:33-181:35][64]] + Identifier[181:38-181:44][buffer]]]
				]
				ElseClause[182:9-184:11][
					AssignmentStatement[183:7-183:26][Identifier[183:7-183:17][bitStorage] = Identifier[183:20-183:26][buffer]]
				}]
			]
			IfStatement[185:5-198:11][
				IfClause[185:5-198:11][BinaryExpression[185:9-185:23][Identifier[185:9-185:19][currentBit] % Literal[185:22-185:23][4]]
					AssignmentStatement[186:7-186:72][Identifier[186:7-186:24][expectedHashIndex] = BinaryExpression[186:27-186:72][BinaryExpression[186:27-186:68][BinaryExpression[186:28-186:54][CallExpression[186:28-186:50][Identifier[186:28-186:33][floor](BinaryExpression[186:34-186:49][Identifier[186:34-186:45][hashPointer] / Literal[186:48-186:49][3]])] * Literal[186:53-186:54][3]] % Identifier[186:58-186:68][hashLength]] - Literal[186:71-186:72][1]]]
					IfStatement[187:7-187:59][
						IfShortcutClause[187:7-187:59][NegationExpression[187:11-187:47][not CallExpression[187:15-187:47][MemberExpression[187:15-187:28][Identifier[187:15-187:19][hash].Identifier[187:20-187:28][hasIndex]](Identifier[187:29-187:46][expectedHashIndex])]]
							BreakStatement[187:54-187:59][]
						]
					]
					AssignmentStatement[188:7-188:34][Identifier[188:7-188:8][m] = IndexExpression[188:11-188:34][Identifier[188:11-188:15][hash][Identifier[188:16-188:33][expectedHashIndex]]]]
					AssignmentStatement[189:7-189:42][Identifier[189:7-189:16][operation] = CallExpression[189:19-189:42][Identifier[189:19-189:22][AND](BinaryExpression[189:23-189:38][BinaryNegatedExpression[189:23-189:25][- Literal[189:24-189:25][2]] * Identifier[189:28-189:38][bitCounter]], Literal[189:40-189:41][6])]]
					AssignmentStatement[190:7-190:48][Identifier[190:7-190:16][operation] = CallExpression[190:19-190:48][Identifier[190:19-190:25][RSHIFT](Identifier[190:26-190:36][bitStorage], Identifier[190:38-190:47][operation])]]
					AssignmentStatement[191:7-191:38][Identifier[191:7-191:16][operation] = CallExpression[191:19-191:38][Identifier[191:19-191:22][AND](Literal[191:23-191:26][255], Identifier[191:28-191:37][operation])]]
					IfStatement[192:7-196:13][
						IfClause[192:7-196:13][BinaryExpression[192:11-192:25][Identifier[192:11-192:20][operation] != Literal[192:24-192:25][0]]
							AssignmentStatement[193:9-193:33][Identifier[193:9-193:17][charCode] = BinaryExpression[193:20-193:33][Identifier[193:20-193:29][operation] - Identifier[193:32-193:33][m]]]
							IfStatement[194:9-194:50][
								IfShortcutClause[194:9-194:50][BinaryExpression[194:13-194:38][Identifier[194:13-194:21][charCode] > MemberExpression[194:24-194:38][Identifier[194:24-194:26][me].Identifier[194:27-194:38][maxCharCode]]]
									BreakStatement[194:45-194:50][]
								]
							]
							CallExpression[195:9-195:36][MemberExpression[195:9-195:20][Identifier[195:9-195:15][output].Identifier[195:16-195:20][push]](CallExpression[195:21-195:35][Identifier[195:21-195:25][char](Identifier[195:26-195:34][charCode])])]
						]
					]
					AssignmentStatement[197:7-197:36][Identifier[197:7-197:18][hashPointer] = BinaryExpression[197:21-197:36][Identifier[197:21-197:32][hashPointer] + Literal[197:35-197:36][1]]]
				]
			]
			AssignmentStatement[199:5-199:28][Identifier[199:5-199:13][position] = BinaryExpression[199:16-199:28][Identifier[199:16-199:24][position] + Literal[199:27-199:28][1]]]
		]
		ReturnStatement[201:3-201:25][CallExpression[201:10-201:25][MemberExpression[201:10-201:21][Identifier[201:10-201:16][output].Identifier[201:17-201:21][join]](Literal[201:22-201:24][])]]
	]]
	AssignmentStatement[204:1-204:40][Identifier[204:1-204:5][test] = CallExpression[204:8-204:40][MemberExpression[204:8-204:32][UnaryExpression[204:9-204:19][new Identifier[204:13-204:19][Crypto]].Identifier[204:21-204:32][constructor]](Literal[204:33-204:39][test])]]
	AssignmentStatement[206:1-206:14][Identifier[206:1-206:4][pwd] = Literal[206:7-206:14][abcde]]
	AssignmentStatement[208:1-208:24][Identifier[208:1-208:4][foo] = CallExpression[208:7-208:24][MemberExpression[208:7-208:19][Identifier[208:7-208:11][test].Identifier[208:12-208:19][encrypt]](Identifier[208:20-208:23][pwd])]]
	AssignmentStatement[209:1-209:30][Identifier[209:1-209:10][decrypted] = CallExpression[209:13-209:30][MemberExpression[209:13-209:25][Identifier[209:13-209:17][test].Identifier[209:18-209:25][decrypt]](Identifier[209:26-209:29][foo])]]
	CallExpression[211:1-211:11][Identifier[211:1-211:6][print](Identifier[211:7-211:10][foo])]
	CallExpression[212:1-212:17][Identifier[212:1-212:6][print](Identifier[212:7-212:16][decrypted])]
]"
`;

exports[`parse default scripts pseudo-crypto.ms 2`] = `undefined`;

exports[`parse default scripts pseudo-crypto.ms 3`] = `76`;

exports[`parse default scripts pseudo-crypto.ms 4`] = `29`;

exports[`parse default scripts pseudo-crypto.ms unsafe 1`] = `
"Chunk[1:1-213:1][
	AssignmentStatement[1:1-1:12][Identifier[1:1-1:7][String] = MapConstructor[1:10-1:12][]]
	AssignmentStatement[3:1-6:13][MemberExpression[3:1-3:19][Identifier[3:1-3:7][String].Identifier[3:8-3:19][constructor]] = Function[3:22-6:13][Identifier[3:31-3:34][str] =>
		AssignmentStatement[4:3-4:17][MemberExpression[4:3-4:11][Identifier[4:3-4:7][self].Identifier[4:8-4:11][str]] = Identifier[4:14-4:17][str]]
		ReturnStatement[5:3-5:14][Identifier[5:10-5:14][self]]
	]]
	AssignmentStatement[8:1-19:13][MemberExpression[8:1-8:13][Identifier[8:1-8:7][String].Identifier[8:8-8:13][parse]] = Function[8:16-19:13][Identifier[8:25-8:31][values] =>
		AssignmentStatement[9:3-9:20][Identifier[9:3-9:9][result] = MemberExpression[9:12-9:20][Identifier[9:12-9:16][self].Identifier[9:17-9:20][str]]]
		AssignmentStatement[10:3-10:12][Identifier[10:3-10:8][index] = Literal[10:11-10:12][0]]
		AssignmentStatement[11:3-11:24][Identifier[11:3-11:11][maxIndex] = MemberExpression[11:14-11:24][Identifier[11:14-11:20][values].Identifier[11:21-11:24][len]]]
		WhileStatement[13:3-16:12][BinaryExpression[13:9-13:25][Identifier[13:9-13:14][index] < Identifier[13:17-13:25][maxIndex]]
			AssignmentStatement[14:5-14:54][Identifier[14:5-14:11][result] = CallExpression[14:14-14:54][MemberExpression[14:14-14:28][Identifier[14:14-14:20][result].Identifier[14:21-14:28][replace]](BinaryExpression[14:29-14:38][Literal[14:29-14:32][$] + Identifier[14:33-14:38][index]], IndexExpression[14:40-14:53][Identifier[14:40-14:46][values][Identifier[14:47-14:52][index]]])]]
			AssignmentStatement[15:5-15:22][Identifier[15:5-15:10][index] = BinaryExpression[15:13-15:22][Identifier[15:13-15:18][index] + Literal[15:21-15:22][1]]]
		]
		ReturnStatement[18:3-18:40][CallExpression[18:10-18:40][MemberExpression[18:10-18:32][UnaryExpression[18:11-18:19][new Identifier[18:15-18:19][self]].Identifier[18:21-18:32][constructor]](Identifier[18:33-18:39][result])]]
	]]
	AssignmentStatement[21:1-23:13][MemberExpression[21:1-21:18][Identifier[21:1-21:7][String].Identifier[21:8-21:18][startsWith]] = Function[21:21-23:13][Identifier[21:30-21:33][str] =>
		ReturnStatement[22:3-22:36][BinaryExpression[22:10-22:36][CallExpression[22:10-22:31][MemberExpression[22:10-22:26][MemberExpression[22:10-22:18][Identifier[22:10-22:14][self].Identifier[22:15-22:18][str]].Identifier[22:19-22:26][indexOf]](Identifier[22:27-22:30][str])] == Literal[22:35-22:36][0]]]
	]]
	AssignmentStatement[25:1-27:13][MemberExpression[25:1-25:14][Identifier[25:1-25:7][String].Identifier[25:8-25:14][substr]] = Function[25:17-27:13][Identifier[25:26-25:36][startIndex], Identifier[25:38-25:46][endIndex] =>
		ReturnStatement[26:3-26:71][CallExpression[26:10-26:71][MemberExpression[26:10-26:32][UnaryExpression[26:11-26:19][new Identifier[26:15-26:19][self]].Identifier[26:21-26:32][constructor]](CallExpression[26:33-26:70][Identifier[26:33-26:38][slice](MemberExpression[26:39-26:47][Identifier[26:39-26:43][self].Identifier[26:44-26:47][str]], Identifier[26:49-26:59][startIndex], Identifier[26:61-26:69][endIndex])])]]
	]]
	AssignmentStatement[29:1-31:13][MemberExpression[29:1-29:15][Identifier[29:1-29:7][String].Identifier[29:8-29:15][indexOf]] = Function[29:18-31:13][Identifier[29:27-29:30][str] =>
		ReturnStatement[30:3-30:31][CallExpression[30:10-30:31][MemberExpression[30:10-30:26][MemberExpression[30:10-30:18][Identifier[30:10-30:14][self].Identifier[30:15-30:18][str]].Identifier[30:19-30:26][indexOf]](Identifier[30:27-30:30][str])]]
	]]
	AssignmentStatement[33:1-35:13][MemberExpression[33:1-33:15][Identifier[33:1-33:7][String].Identifier[33:8-33:15][replace]] = Function[33:18-35:13][Identifier[33:27-33:30][str], Identifier[33:32-33:38][newStr] =>
		ReturnStatement[34:3-34:63][CallExpression[34:10-34:63][MemberExpression[34:10-34:32][UnaryExpression[34:11-34:19][new Identifier[34:15-34:19][self]].Identifier[34:21-34:32][constructor]](CallExpression[34:33-34:62][MemberExpression[34:33-34:49][MemberExpression[34:33-34:41][Identifier[34:33-34:37][self].Identifier[34:38-34:41][str]].Identifier[34:42-34:49][replace]](Identifier[34:50-34:53][str], Identifier[34:55-34:61][newStr])])]]
	]]
	AssignmentStatement[37:1-39:13][MemberExpression[37:1-37:14][Identifier[37:1-37:7][String].Identifier[37:8-37:14][remove]] = Function[37:17-39:13][Identifier[37:26-37:29][str] =>
		ReturnStatement[38:3-38:54][CallExpression[38:10-38:54][MemberExpression[38:10-38:32][UnaryExpression[38:11-38:19][new Identifier[38:15-38:19][self]].Identifier[38:21-38:32][constructor]](CallExpression[38:33-38:53][MemberExpression[38:33-38:48][MemberExpression[38:33-38:41][Identifier[38:33-38:37][self].Identifier[38:38-38:41][str]].Identifier[38:42-38:48][remove]](Identifier[38:49-38:52][str])])]]
	]]
	AssignmentStatement[41:1-43:13][MemberExpression[41:1-41:16][Identifier[41:1-41:7][String].Identifier[41:8-41:16][toString]] = Function[41:19-43:13][ =>
		ReturnStatement[42:3-42:18][MemberExpression[42:10-42:18][Identifier[42:10-42:14][self].Identifier[42:15-42:18][str]]]
	]]
	AssignmentStatement[45:1-47:13][MemberExpression[45:1-45:14][Identifier[45:1-45:7][String].Identifier[45:8-45:14][length]] = Function[45:17-47:13][ =>
		ReturnStatement[46:3-46:22][MemberExpression[46:10-46:22][MemberExpression[46:10-46:18][Identifier[46:10-46:14][self].Identifier[46:15-46:18][str]].Identifier[46:19-46:22][len]]]
	]]
	AssignmentStatement[49:1-51:13][MemberExpression[49:1-49:13][Identifier[49:1-49:7][String].Identifier[49:8-49:13][split]] = Function[49:16-51:13][Identifier[49:25-49:34][seperator] =>
		ReturnStatement[50:3-50:35][CallExpression[50:10-50:35][MemberExpression[50:10-50:24][MemberExpression[50:10-50:18][Identifier[50:10-50:14][self].Identifier[50:15-50:18][str]].Identifier[50:19-50:24][split]](Identifier[50:25-50:34][seperator])]]
	]]
	AssignmentStatement[53:1-55:13][MemberExpression[53:1-53:12][Identifier[53:1-53:7][String].Identifier[53:8-53:12][trim]] = Function[53:15-55:13][Identifier[53:24-53:33][seperator] =>
		ReturnStatement[54:3-54:49][CallExpression[54:10-54:49][MemberExpression[54:10-54:32][UnaryExpression[54:11-54:19][new Identifier[54:15-54:19][self]].Identifier[54:21-54:32][constructor]](CallExpression[54:33-54:48][MemberExpression[54:33-54:46][MemberExpression[54:33-54:41][Identifier[54:33-54:37][self].Identifier[54:38-54:41][str]].Identifier[54:42-54:46][trim]]()])]]
	]]
	AssignmentStatement[57:1-57:11][Identifier[57:1-57:6][Error] = MapConstructor[57:9-57:11][]]
	AssignmentStatement[59:1-59:22][MemberExpression[59:1-59:13][Identifier[59:1-59:6][Error].Identifier[59:7-59:13][String]] = Identifier[59:16-59:22][String]]
	AssignmentStatement[61:1-68:13][MemberExpression[61:1-61:18][Identifier[61:1-61:6][Error].Identifier[61:7-61:18][constructor]] = Function[61:21-68:13][Identifier[61:30-61:37][message], Identifier[61:39-61:45][values] =>
		AssignmentStatement[62:3-62:11][Identifier[62:3-62:4][m] = Identifier[62:7-62:11][self]]
		AssignmentStatement[63:3-63:22][MemberExpression[63:3-63:12][Identifier[63:3-63:4][m].Identifier[63:5-63:12][message]] = Identifier[63:15-63:22][message]]
		IfStatement[64:3-66:9][
			IfClause[64:3-66:9][BinaryExpression[64:7-64:21][Identifier[64:7-64:13][values] != Literal[64:17-64:21][null]]
				AssignmentStatement[65:5-65:77][MemberExpression[65:5-65:14][Identifier[65:5-65:6][m].Identifier[65:7-65:14][message]] = CallExpression[65:17-65:77][MemberExpression[65:17-65:75][CallExpression[65:17-65:66][MemberExpression[65:17-65:58][CallExpression[65:17-65:52][MemberExpression[65:17-65:43][UnaryExpression[65:18-65:30][new MemberExpression[65:22-65:30][Identifier[65:22-65:23][m].Identifier[65:24-65:30][String]]].Identifier[65:32-65:43][constructor]](Identifier[65:44-65:51][message])].Identifier[65:53-65:58][parse]](Identifier[65:59-65:65][values])].Identifier[65:67-65:75][toString]]()]]
			]
		]
		ReturnStatement[67:3-67:11][Identifier[67:10-67:11][m]]
	]]
	AssignmentStatement[70:1-72:13][MemberExpression[70:1-70:12][Identifier[70:1-70:6][Error].Identifier[70:7-70:12][throw]] = Function[70:15-72:13][ =>
		CallExpression[71:3-71:54][Identifier[71:3-71:7][exit](BinaryExpression[71:8-71:53][BinaryExpression[71:8-71:40][Literal[71:8-71:25][<color=#ff0000>] + MemberExpression[71:28-71:40][Identifier[71:28-71:32][self].Identifier[71:33-71:40][message]]] + Literal[71:43-71:53][</color>]])]
	]]
	AssignmentStatement[74:1-74:12][Identifier[74:1-74:7][Crypto] = MapConstructor[74:10-74:12][]]
	AssignmentStatement[76:1-76:91][MemberExpression[76:1-76:22][Identifier[76:1-76:7][Crypto].Identifier[76:8-76:22][defaultCharset]] = Literal[76:25-76:91][QWERTZUIOPASDFGHJKLYXCVBNMqwertzuiopasdfghjklyxcvbnm1234567890+-]]
	AssignmentStatement[77:1-77:33][MemberExpression[77:1-77:21][Identifier[77:1-77:7][Crypto].Identifier[77:8-77:21][defaultSecret]] = Literal[77:24-77:33][test123]]
	AssignmentStatement[78:1-78:27][MemberExpression[78:1-78:19][Identifier[78:1-78:7][Crypto].Identifier[78:8-78:19][maxCharCode]] = Literal[78:22-78:27][55295]]
	AssignmentStatement[79:1-79:21][MemberExpression[79:1-79:13][Identifier[79:1-79:7][Crypto].Identifier[79:8-79:13][Error]] = Identifier[79:16-79:21][Error]]
	AssignmentStatement[81:1-90:13][MemberExpression[81:1-81:19][Identifier[81:1-81:7][Crypto].Identifier[81:8-81:19][constructor]] = Function[81:22-90:13][Identifier[81:31-81:44][defaultSecret], Identifier[81:46-81:52][hashFn], Identifier[81:54-81:61][charset] =>
		AssignmentStatement[82:3-82:12][Identifier[82:3-82:5][me] = Identifier[82:8-82:12][self]]
		AssignmentStatement[83:3-83:35][MemberExpression[83:3-83:19][Identifier[83:3-83:5][me].Identifier[83:6-83:19][defaultSecret]] = Identifier[83:22-83:35][defaultSecret]]
		AssignmentStatement[84:3-84:21][MemberExpression[84:3-84:11][Identifier[84:3-84:5][me].Identifier[84:6-84:11][table]] = Identifier[84:14-84:21][charset]]
		AssignmentStatement[85:3-85:22][MemberExpression[85:3-85:12][Identifier[85:3-85:5][me].Identifier[85:6-85:12][hashFn]] = UnaryExpression[85:15-85:22][@ Identifier[85:16-85:22][hashFn]]]
		IfStatement[86:3-86:45][
			IfShortcutClause[86:3-86:45][BinaryExpression[86:7-86:22][UnaryExpression[86:7-86:14][@ Identifier[86:8-86:14][hashFn]] == Literal[86:18-86:22][null]]
				AssignmentStatement[86:29-86:45][MemberExpression[86:29-86:38][Identifier[86:29-86:31][me].Identifier[86:32-86:38][hashFn]] = UnaryExpression[86:41-86:45][@ Identifier[86:42-86:45][md5]]]
			]
		]
		IfStatement[87:3-87:55][
			IfShortcutClause[87:3-87:55][BinaryExpression[87:6-87:21][Identifier[87:6-87:13][charset] == Literal[87:17-87:21][null]]
				AssignmentStatement[87:27-87:55][MemberExpression[87:27-87:35][Identifier[87:27-87:29][me].Identifier[87:30-87:35][table]] = MemberExpression[87:38-87:55][Identifier[87:38-87:40][me].Identifier[87:41-87:55][defaultCharset]]]
			]
		]
		IfStatement[88:3-88:101][
			IfShortcutClause[88:3-88:101][BinaryExpression[88:6-88:24][MemberExpression[88:6-88:18][MemberExpression[88:6-88:14][Identifier[88:6-88:8][me].Identifier[88:9-88:14][table]].Identifier[88:15-88:18][len]] != Literal[88:22-88:24][64]]
				CallExpression[88:30-88:101][MemberExpression[88:30-88:99][CallExpression[88:30-88:93][MemberExpression[88:30-88:56][UnaryExpression[88:31-88:43][new MemberExpression[88:35-88:43][Identifier[88:35-88:37][me].Identifier[88:38-88:43][Error]]].Identifier[88:45-88:56][constructor]](Literal[88:57-88:80][Invalid charset $0...], ListConstructor[88:82-88:92][
					ListValue[88:83-88:91][MemberExpression[88:83-88:91][Identifier[88:83-88:85][me].Identifier[88:86-88:91][table]]]
				])].Identifier[88:94-88:99][throw]]()]
			]
		]
		ReturnStatement[89:3-89:12][Identifier[89:10-89:12][me]]
	]]
	AssignmentStatement[92:1-101:13][MemberExpression[92:1-92:15][Identifier[92:1-92:7][Crypto].Identifier[92:8-92:15][getHash]] = Function[92:18-101:13][Identifier[92:27-92:29][pw] =>
		AssignmentStatement[93:3-93:12][Identifier[93:3-93:5][me] = Identifier[93:8-93:12][self]]
		AssignmentStatement[94:3-94:12][Identifier[94:3-94:7][hash] = ListConstructor[94:10-94:12][]]
		AssignmentStatement[95:3-95:20][Identifier[95:3-95:4][x] = CallExpression[95:7-95:20][MemberExpression[95:7-95:16][Identifier[95:7-95:9][me].Identifier[95:10-95:16][hashFn]](Identifier[95:17-95:19][pw])]]
		For[96:3-98:10][Identifier[96:7-96:11][char] in Identifier[96:15-96:16][x]
			CallExpression[97:5-97:25][MemberExpression[97:5-97:14][Identifier[97:5-97:9][hash].Identifier[97:10-97:14][push]](MemberExpression[97:15-97:24][Identifier[97:15-97:19][char].Identifier[97:20-97:24][code]])]
		]
		MemberExpression[99:3-99:15][Identifier[99:3-99:7][hash].Identifier[99:8-99:15][reverse]]
		ReturnStatement[100:3-100:14][Identifier[100:10-100:14][hash]]
	]]
	AssignmentStatement[103:1-156:13][MemberExpression[103:1-103:15][Identifier[103:1-103:7][Crypto].Identifier[103:8-103:15][encrypt]] = Function[103:18-156:13][Identifier[103:27-103:30][str], Identifier[103:32-103:34][pw] =>
		AssignmentStatement[104:3-104:12][Identifier[104:3-104:5][me] = Identifier[104:8-104:12][self]]
		IfStatement[105:3-105:45][
			IfShortcutClause[105:3-105:45][BinaryExpression[105:7-105:17][Identifier[105:7-105:9][pw] == Literal[105:13-105:17][null]]
				AssignmentStatement[105:24-105:45][Identifier[105:24-105:26][pw] = MemberExpression[105:29-105:45][Identifier[105:29-105:31][me].Identifier[105:32-105:45][defaultSecret]]]
			]
		]
		AssignmentStatement[106:3-106:24][Identifier[106:3-106:7][hash] = CallExpression[106:10-106:24][MemberExpression[106:10-106:20][Identifier[106:10-106:12][me].Identifier[106:13-106:20][getHash]](Identifier[106:21-106:23][pw])]]
		AssignmentStatement[107:3-107:18][Identifier[107:3-107:14][hashPointer] = Literal[107:17-107:18][0]]
		AssignmentStatement[108:3-108:14][Identifier[108:3-108:9][output] = ListConstructor[108:12-108:14][]]
		AssignmentStatement[109:3-109:15][Identifier[109:3-109:11][position] = Literal[109:14-109:15][0]]
		AssignmentStatement[110:3-110:24][Identifier[110:3-110:10][padding] = BinaryExpression[110:13-110:24][MemberExpression[110:13-110:20][Identifier[110:13-110:16][str].Identifier[110:17-110:20][len]] % Literal[110:23-110:24][3]]]
		AssignmentStatement[111:3-111:26][Identifier[111:3-111:6][max] = BinaryExpression[111:9-111:26][MemberExpression[111:9-111:16][Identifier[111:9-111:12][str].Identifier[111:13-111:16][len]] - Identifier[111:19-111:26][padding]]]
		AssignmentStatement[112:3-117:15][Identifier[112:3-112:6][get] = Function[112:9-117:15][Identifier[112:18-112:19][v] =>
			IfStatement[113:5-115:11][
				IfClause[113:5-115:11][NegationExpression[113:9-113:33][not CallExpression[113:13-113:33][MemberExpression[113:13-113:30][MemberExpression[113:13-113:21][Identifier[113:13-113:15][me].Identifier[113:16-113:21][table]].Identifier[113:22-113:30][hasIndex]](Identifier[113:31-113:32][v])]]
					CallExpression[114:7-114:69][MemberExpression[114:7-114:67][CallExpression[114:7-114:61][MemberExpression[114:7-114:33][UnaryExpression[114:8-114:20][new MemberExpression[114:12-114:20][Identifier[114:12-114:14][me].Identifier[114:15-114:20][Error]]].Identifier[114:22-114:33][constructor]](Literal[114:34-114:55][Invalid index $0...], ListConstructor[114:57-114:60][
						ListValue[114:58-114:59][Identifier[114:58-114:59][v]]
					])].Identifier[114:62-114:67][throw]]()]
				]
			]
			ReturnStatement[116:5-116:23][IndexExpression[116:12-116:23][MemberExpression[116:12-116:20][Identifier[116:12-116:14][me].Identifier[116:15-116:20][table]][Identifier[116:21-116:22][v]]]]
		]]
		AssignmentStatement[118:3-120:15][Identifier[118:3-118:6][AND] = Function[118:9-120:15][Identifier[118:18-118:19][a], Identifier[118:21-118:22][b] =>
			ReturnStatement[119:5-119:30][CallExpression[119:12-119:30][Identifier[119:12-119:19][bitwise](Literal[119:20-119:23][&], Identifier[119:25-119:26][a], Identifier[119:28-119:29][b])]]
		]]
		AssignmentStatement[121:3-123:15][Identifier[121:3-121:9][LSHIFT] = Function[121:12-123:15][Identifier[121:21-121:22][a], Identifier[121:24-121:25][b] =>
			ReturnStatement[122:5-122:31][CallExpression[122:12-122:31][Identifier[122:12-122:19][bitwise](Literal[122:20-122:24][<<], Identifier[122:26-122:27][a], Identifier[122:29-122:30][b])]]
		]]
		AssignmentStatement[124:3-126:15][Identifier[124:3-124:9][RSHIFT] = Function[124:12-126:15][Identifier[124:21-124:22][a], Identifier[124:24-124:25][b] =>
			ReturnStatement[125:5-125:31][CallExpression[125:12-125:31][Identifier[125:12-125:19][bitwise](Literal[125:20-125:24][>>], Identifier[125:26-125:27][a], Identifier[125:29-125:30][b])]]
		]]
		WhileStatement[127:3-138:12][BinaryExpression[127:9-127:23][Identifier[127:9-127:17][position] < Identifier[127:20-127:23][max]]
			AssignmentStatement[128:5-128:38][Identifier[128:5-128:6][m] = IndexExpression[128:9-128:38][Identifier[128:9-128:13][hash][BinaryExpression[128:14-128:37][BinaryExpression[128:14-128:33][Identifier[128:14-128:22][position] % MemberExpression[128:25-128:33][Identifier[128:25-128:29][hash].Identifier[128:30-128:33][len]]] - Literal[128:36-128:37][1]]]]]
			AssignmentStatement[129:5-129:43][Identifier[129:5-129:6][a] = CallExpression[129:9-129:43][Identifier[129:9-129:15][LSHIFT](BinaryExpression[129:16-129:38][MemberExpression[129:16-129:34][IndexExpression[129:16-129:29][Identifier[129:16-129:19][str][Identifier[129:20-129:28][position]]].Identifier[129:30-129:34][code]] + Identifier[129:37-129:38][m]], Literal[129:40-129:42][16])]]
			AssignmentStatement[130:5-130:46][Identifier[130:5-130:6][b] = CallExpression[130:9-130:46][Identifier[130:9-130:15][LSHIFT](BinaryExpression[130:16-130:42][MemberExpression[130:16-130:38][IndexExpression[130:16-130:33][Identifier[130:16-130:19][str][BinaryExpression[130:20-130:32][Identifier[130:20-130:28][position] + Literal[130:31-130:32][1]]]].Identifier[130:34-130:38][code]] + Identifier[130:41-130:42][m]], Literal[130:44-130:45][8])]]
			AssignmentStatement[131:5-131:35][Identifier[131:5-131:6][c] = BinaryExpression[131:9-131:35][MemberExpression[131:9-131:31][IndexExpression[131:9-131:26][Identifier[131:9-131:12][str][BinaryExpression[131:13-131:25][Identifier[131:13-131:21][position] + Literal[131:24-131:25][2]]]].Identifier[131:27-131:31][code]] + Identifier[131:34-131:35][m]]]
			AssignmentStatement[132:5-132:23][Identifier[132:5-132:11][buffer] = BinaryExpression[132:14-132:23][BinaryExpression[132:14-132:19][Identifier[132:14-132:15][a] + Identifier[132:18-132:19][b]] + Identifier[132:22-132:23][c]]]
			CallExpression[133:5-133:50][MemberExpression[133:5-133:16][Identifier[133:5-133:11][output].Identifier[133:12-133:16][push]](CallExpression[133:17-133:49][Identifier[133:17-133:20][get](CallExpression[133:21-133:48][Identifier[133:21-133:24][AND](CallExpression[133:25-133:43][Identifier[133:25-133:31][RSHIFT](Identifier[133:32-133:38][buffer], Literal[133:40-133:42][18])], Literal[133:45-133:47][63])])])]
			CallExpression[134:5-134:50][MemberExpression[134:5-134:16][Identifier[134:5-134:11][output].Identifier[134:12-134:16][push]](CallExpression[134:17-134:49][Identifier[134:17-134:20][get](CallExpression[134:21-134:48][Identifier[134:21-134:24][AND](CallExpression[134:25-134:43][Identifier[134:25-134:31][RSHIFT](Identifier[134:32-134:38][buffer], Literal[134:40-134:42][12])], Literal[134:45-134:47][63])])])]
			CallExpression[135:5-135:49][MemberExpression[135:5-135:16][Identifier[135:5-135:11][output].Identifier[135:12-135:16][push]](CallExpression[135:17-135:48][Identifier[135:17-135:20][get](CallExpression[135:21-135:47][Identifier[135:21-135:24][AND](CallExpression[135:25-135:42][Identifier[135:25-135:31][RSHIFT](Identifier[135:32-135:38][buffer], Literal[135:40-135:41][6])], Literal[135:44-135:46][63])])])]
			CallExpression[136:5-136:38][MemberExpression[136:5-136:16][Identifier[136:5-136:11][output].Identifier[136:12-136:16][push]](CallExpression[136:17-136:37][Identifier[136:17-136:20][get](CallExpression[136:21-136:36][Identifier[136:21-136:24][AND](Identifier[136:25-136:31][buffer], Literal[136:33-136:35][63])])])]
			AssignmentStatement[137:5-137:28][Identifier[137:5-137:13][position] = BinaryExpression[137:16-137:28][Identifier[137:16-137:24][position] + Literal[137:27-137:28][3]]]
		]
		IfStatement[139:3-154:9][
			IfClause[139:3-148:10][BinaryExpression[139:7-139:19][Identifier[139:7-139:14][padding] == Literal[139:18-139:19][2]]
				AssignmentStatement[140:5-140:38][Identifier[140:5-140:6][m] = IndexExpression[140:9-140:38][Identifier[140:9-140:13][hash][BinaryExpression[140:14-140:37][BinaryExpression[140:14-140:33][Identifier[140:14-140:22][position] % MemberExpression[140:25-140:33][Identifier[140:25-140:29][hash].Identifier[140:30-140:33][len]]] - Literal[140:36-140:37][1]]]]]
				AssignmentStatement[141:5-141:42][Identifier[141:5-141:6][a] = CallExpression[141:9-141:42][Identifier[141:9-141:15][LSHIFT](BinaryExpression[141:16-141:38][MemberExpression[141:16-141:34][IndexExpression[141:16-141:29][Identifier[141:16-141:19][str][Identifier[141:20-141:28][position]]].Identifier[141:30-141:34][code]] + Identifier[141:37-141:38][m]], Literal[141:40-141:41][8])]]
				AssignmentStatement[142:5-142:35][Identifier[142:5-142:6][b] = BinaryExpression[142:9-142:35][MemberExpression[142:9-142:31][IndexExpression[142:9-142:26][Identifier[142:9-142:12][str][BinaryExpression[142:13-142:25][Identifier[142:13-142:21][position] + Literal[142:24-142:25][1]]]].Identifier[142:27-142:31][code]] + Identifier[142:34-142:35][m]]]
				AssignmentStatement[143:5-143:19][Identifier[143:5-143:11][buffer] = BinaryExpression[143:14-143:19][Identifier[143:14-143:15][a] + Identifier[143:18-143:19][b]]]
				CallExpression[144:5-144:41][MemberExpression[144:5-144:16][Identifier[144:5-144:11][output].Identifier[144:12-144:16][push]](CallExpression[144:17-144:40][Identifier[144:17-144:20][get](CallExpression[144:21-144:39][Identifier[144:21-144:27][RSHIFT](Identifier[144:28-144:34][buffer], Literal[144:36-144:38][10])])])]
				CallExpression[145:5-145:49][MemberExpression[145:5-145:16][Identifier[145:5-145:11][output].Identifier[145:12-145:16][push]](CallExpression[145:17-145:48][Identifier[145:17-145:20][get](CallExpression[145:21-145:47][Identifier[145:21-145:24][AND](CallExpression[145:25-145:42][Identifier[145:25-145:31][RSHIFT](Identifier[145:32-145:38][buffer], Literal[145:40-145:41][4])], Literal[145:44-145:46][63])])])]
				CallExpression[146:5-146:49][MemberExpression[146:5-146:16][Identifier[146:5-146:11][output].Identifier[146:12-146:16][push]](CallExpression[146:17-146:48][Identifier[146:17-146:20][get](CallExpression[146:21-146:47][Identifier[146:21-146:24][AND](CallExpression[146:25-146:42][Identifier[146:25-146:31][LSHIFT](Identifier[146:32-146:38][buffer], Literal[146:40-146:41][2])], Literal[146:44-146:46][63])])])]
				CallExpression[147:5-147:21][MemberExpression[147:5-147:16][Identifier[147:5-147:11][output].Identifier[147:12-147:16][push]](Literal[147:17-147:20][=])]
			]
			ElseifClause[148:11-154:9][BinaryExpression[148:12-148:24][Identifier[148:12-148:19][padding] == Literal[148:23-148:24][1]]
				AssignmentStatement[149:5-149:38][Identifier[149:5-149:6][m] = IndexExpression[149:9-149:38][Identifier[149:9-149:13][hash][BinaryExpression[149:14-149:37][BinaryExpression[149:14-149:33][Identifier[149:14-149:22][position] % MemberExpression[149:25-149:33][Identifier[149:25-149:29][hash].Identifier[149:30-149:33][len]]] - Literal[149:36-149:37][1]]]]]
				AssignmentStatement[150:5-150:36][Identifier[150:5-150:11][buffer] = BinaryExpression[150:14-150:36][MemberExpression[150:14-150:32][IndexExpression[150:14-150:27][Identifier[150:14-150:17][str][Identifier[150:18-150:26][position]]].Identifier[150:28-150:32][code]] + Identifier[150:35-150:36][m]]]
				CallExpression[151:5-151:40][MemberExpression[151:5-151:16][Identifier[151:5-151:11][output].Identifier[151:12-151:16][push]](CallExpression[151:17-151:39][Identifier[151:17-151:20][get](CallExpression[151:21-151:38][Identifier[151:21-151:27][RSHIFT](Identifier[151:28-151:34][buffer], Literal[151:36-151:37][2])])])]
				CallExpression[152:5-152:49][MemberExpression[152:5-152:16][Identifier[152:5-152:11][output].Identifier[152:12-152:16][push]](CallExpression[152:17-152:48][Identifier[152:17-152:20][get](CallExpression[152:21-152:47][Identifier[152:21-152:24][AND](CallExpression[152:25-152:42][Identifier[152:25-152:31][LSHIFT](Identifier[152:32-152:38][buffer], Literal[152:40-152:41][4])], Literal[152:44-152:46][63])])])]
				CallExpression[153:5-153:22][MemberExpression[153:5-153:16][Identifier[153:5-153:11][output].Identifier[153:12-153:16][push]](Literal[153:17-153:21][==])]
			]
		]
		ReturnStatement[155:3-155:25][CallExpression[155:10-155:25][MemberExpression[155:10-155:21][Identifier[155:10-155:16][output].Identifier[155:17-155:21][join]](Literal[155:22-155:24][])]]
	]]
	AssignmentStatement[158:1-202:13][MemberExpression[158:1-158:15][Identifier[158:1-158:7][Crypto].Identifier[158:8-158:15][decrypt]] = Function[158:18-202:13][Identifier[158:27-158:30][str], Identifier[158:32-158:34][pw] =>
		AssignmentStatement[159:3-159:12][Identifier[159:3-159:5][me] = Identifier[159:8-159:12][self]]
		IfStatement[160:3-160:45][
			IfShortcutClause[160:3-160:45][BinaryExpression[160:7-160:17][Identifier[160:7-160:9][pw] == Literal[160:13-160:17][null]]
				AssignmentStatement[160:24-160:45][Identifier[160:24-160:26][pw] = MemberExpression[160:29-160:45][Identifier[160:29-160:31][me].Identifier[160:32-160:45][defaultSecret]]]
			]
		]
		AssignmentStatement[161:3-161:24][Identifier[161:3-161:7][hash] = CallExpression[161:10-161:24][MemberExpression[161:10-161:20][Identifier[161:10-161:12][me].Identifier[161:13-161:20][getHash]](Identifier[161:21-161:23][pw])]]
		AssignmentStatement[162:3-162:18][Identifier[162:3-162:14][hashPointer] = Literal[162:17-162:18][0]]
		AssignmentStatement[163:3-163:24][Identifier[163:3-163:13][hashLength] = MemberExpression[163:16-163:24][Identifier[163:16-163:20][hash].Identifier[163:21-163:24][len]]]
		AssignmentStatement[164:3-164:14][Identifier[164:3-164:9][output] = ListConstructor[164:12-164:14][]]
		AssignmentStatement[165:3-165:17][Identifier[165:3-165:13][bitCounter] = Literal[165:16-165:17][0]]
		AssignmentStatement[166:3-166:17][Identifier[166:3-166:13][bitStorage] = Literal[166:16-166:17][0]]
		AssignmentStatement[167:3-167:15][Identifier[167:3-167:11][position] = Literal[167:14-167:15][0]]
		AssignmentStatement[168:3-168:18][Identifier[168:3-168:14][hashPointer] = Literal[168:17-168:18][0]]
		AssignmentStatement[169:3-169:16][Identifier[169:3-169:6][max] = MemberExpression[169:9-169:16][Identifier[169:9-169:12][str].Identifier[169:13-169:16][len]]]
		AssignmentStatement[170:3-172:15][Identifier[170:3-170:6][AND] = Function[170:9-172:15][Identifier[170:18-170:19][a], Identifier[170:21-170:22][b] =>
			ReturnStatement[171:5-171:30][CallExpression[171:12-171:30][Identifier[171:12-171:19][bitwise](Literal[171:20-171:23][&], Identifier[171:25-171:26][a], Identifier[171:28-171:29][b])]]
		]]
		AssignmentStatement[173:3-175:15][Identifier[173:3-173:9][RSHIFT] = Function[173:12-175:15][Identifier[173:21-173:22][a], Identifier[173:24-173:25][b] =>
			ReturnStatement[174:5-174:31][CallExpression[174:12-174:31][Identifier[174:12-174:19][bitwise](Literal[174:20-174:24][>>], Identifier[174:26-174:27][a], Identifier[174:29-174:30][b])]]
		]]
		WhileStatement[176:3-200:12][BinaryExpression[176:9-176:23][Identifier[176:9-176:17][position] < Identifier[176:20-176:23][max]]
			AssignmentStatement[177:5-177:45][Identifier[177:5-177:11][buffer] = CallExpression[177:14-177:45][MemberExpression[177:14-177:30][MemberExpression[177:14-177:22][Identifier[177:14-177:16][me].Identifier[177:17-177:22][table]].Identifier[177:23-177:30][indexOf]](IndexExpression[177:31-177:44][Identifier[177:31-177:34][str][Identifier[177:35-177:43][position]]])]]
			AssignmentStatement[178:5-178:28][Identifier[178:5-178:15][currentBit] = Identifier[178:18-178:28][bitCounter]]
			AssignmentStatement[179:5-179:32][Identifier[179:5-179:15][bitCounter] = BinaryExpression[179:18-179:32][Identifier[179:18-179:28][bitCounter] + Literal[179:31-179:32][1]]]
			IfStatement[180:5-184:11][
				IfClause[180:5-182:9][BinaryExpression[180:9-180:23][Identifier[180:9-180:19][currentBit] % Literal[180:22-180:23][4]]
					AssignmentStatement[181:7-181:44][Identifier[181:7-181:17][bitStorage] = BinaryExpression[181:20-181:44][BinaryExpression[181:20-181:35][Identifier[181:20-181:30][bitStorage] * Literal[181:33-181:35][64]] + Identifier[181:38-181:44][buffer]]]
				]
				ElseClause[182:9-184:11][
					AssignmentStatement[183:7-183:26][Identifier[183:7-183:17][bitStorage] = Identifier[183:20-183:26][buffer]]
				}]
			]
			IfStatement[185:5-198:11][
				IfClause[185:5-198:11][BinaryExpression[185:9-185:23][Identifier[185:9-185:19][currentBit] % Literal[185:22-185:23][4]]
					AssignmentStatement[186:7-186:72][Identifier[186:7-186:24][expectedHashIndex] = BinaryExpression[186:27-186:72][BinaryExpression[186:27-186:68][BinaryExpression[186:28-186:54][CallExpression[186:28-186:50][Identifier[186:28-186:33][floor](BinaryExpression[186:34-186:49][Identifier[186:34-186:45][hashPointer] / Literal[186:48-186:49][3]])] * Literal[186:53-186:54][3]] % Identifier[186:58-186:68][hashLength]] - Literal[186:71-186:72][1]]]
					IfStatement[187:7-187:59][
						IfShortcutClause[187:7-187:59][NegationExpression[187:11-187:47][not CallExpression[187:15-187:47][MemberExpression[187:15-187:28][Identifier[187:15-187:19][hash].Identifier[187:20-187:28][hasIndex]](Identifier[187:29-187:46][expectedHashIndex])]]
							BreakStatement[187:54-187:59][]
						]
					]
					AssignmentStatement[188:7-188:34][Identifier[188:7-188:8][m] = IndexExpression[188:11-188:34][Identifier[188:11-188:15][hash][Identifier[188:16-188:33][expectedHashIndex]]]]
					AssignmentStatement[189:7-189:42][Identifier[189:7-189:16][operation] = CallExpression[189:19-189:42][Identifier[189:19-189:22][AND](BinaryExpression[189:23-189:38][BinaryNegatedExpression[189:23-189:25][- Literal[189:24-189:25][2]] * Identifier[189:28-189:38][bitCounter]], Literal[189:40-189:41][6])]]
					AssignmentStatement[190:7-190:48][Identifier[190:7-190:16][operation] = CallExpression[190:19-190:48][Identifier[190:19-190:25][RSHIFT](Identifier[190:26-190:36][bitStorage], Identifier[190:38-190:47][operation])]]
					AssignmentStatement[191:7-191:38][Identifier[191:7-191:16][operation] = CallExpression[191:19-191:38][Identifier[191:19-191:22][AND](Literal[191:23-191:26][255], Identifier[191:28-191:37][operation])]]
					IfStatement[192:7-196:13][
						IfClause[192:7-196:13][BinaryExpression[192:11-192:25][Identifier[192:11-192:20][operation] != Literal[192:24-192:25][0]]
							AssignmentStatement[193:9-193:33][Identifier[193:9-193:17][charCode] = BinaryExpression[193:20-193:33][Identifier[193:20-193:29][operation] - Identifier[193:32-193:33][m]]]
							IfStatement[194:9-194:50][
								IfShortcutClause[194:9-194:50][BinaryExpression[194:13-194:38][Identifier[194:13-194:21][charCode] > MemberExpression[194:24-194:38][Identifier[194:24-194:26][me].Identifier[194:27-194:38][maxCharCode]]]
									BreakStatement[194:45-194:50][]
								]
							]
							CallExpression[195:9-195:36][MemberExpression[195:9-195:20][Identifier[195:9-195:15][output].Identifier[195:16-195:20][push]](CallExpression[195:21-195:35][Identifier[195:21-195:25][char](Identifier[195:26-195:34][charCode])])]
						]
					]
					AssignmentStatement[197:7-197:36][Identifier[197:7-197:18][hashPointer] = BinaryExpression[197:21-197:36][Identifier[197:21-197:32][hashPointer] + Literal[197:35-197:36][1]]]
				]
			]
			AssignmentStatement[199:5-199:28][Identifier[199:5-199:13][position] = BinaryExpression[199:16-199:28][Identifier[199:16-199:24][position] + Literal[199:27-199:28][1]]]
		]
		ReturnStatement[201:3-201:25][CallExpression[201:10-201:25][MemberExpression[201:10-201:21][Identifier[201:10-201:16][output].Identifier[201:17-201:21][join]](Literal[201:22-201:24][])]]
	]]
	AssignmentStatement[204:1-204:40][Identifier[204:1-204:5][test] = CallExpression[204:8-204:40][MemberExpression[204:8-204:32][UnaryExpression[204:9-204:19][new Identifier[204:13-204:19][Crypto]].Identifier[204:21-204:32][constructor]](Literal[204:33-204:39][test])]]
	AssignmentStatement[206:1-206:14][Identifier[206:1-206:4][pwd] = Literal[206:7-206:14][abcde]]
	AssignmentStatement[208:1-208:24][Identifier[208:1-208:4][foo] = CallExpression[208:7-208:24][MemberExpression[208:7-208:19][Identifier[208:7-208:11][test].Identifier[208:12-208:19][encrypt]](Identifier[208:20-208:23][pwd])]]
	AssignmentStatement[209:1-209:30][Identifier[209:1-209:10][decrypted] = CallExpression[209:13-209:30][MemberExpression[209:13-209:25][Identifier[209:13-209:17][test].Identifier[209:18-209:25][decrypt]](Identifier[209:26-209:29][foo])]]
	CallExpression[211:1-211:11][Identifier[211:1-211:6][print](Identifier[211:7-211:10][foo])]
	CallExpression[212:1-212:17][Identifier[212:1-212:6][print](Identifier[212:7-212:16][decrypted])]
]"
`;

exports[`parse default scripts random.ms 1`] = `
"Chunk[1:1-62:39][
	AssignmentStatement[1:1-1:12][Identifier[1:1-1:7][Random] = MapConstructor[1:10-1:12][]]
	AssignmentStatement[3:1-3:17][MemberExpression[3:1-3:12][Identifier[3:1-3:7][Random].Identifier[3:8-3:12][pool]] = MapConstructor[3:15-3:17][]]
	AssignmentStatement[4:1-4:30][MemberExpression[4:1-4:19][Identifier[4:1-4:7][Random].Identifier[4:8-4:19][defaultSeed]] = Literal[4:22-4:30][random]]
	AssignmentStatement[6:1-8:13][MemberExpression[6:1-6:18][Identifier[6:1-6:7][Random].Identifier[6:8-6:18][createPool]] = Function[6:21-8:13][Identifier[6:30-6:34][seed], Identifier[6:36-6:39][val] =>
		ReturnStatement[7:3-7:57][MapConstructor[7:10-7:57][
			MapKeyString[7:12-7:24][Literal[7:12-7:18][seed]: Identifier[7:20-7:24][seed]]
			MapKeyString[7:26-7:38][Literal[7:26-7:33][value]: Identifier[7:35-7:38][val]]
			MapKeyString[7:40-7:55][Literal[7:40-7:52][generation]: Literal[7:54-7:55][0]]
		]]
	]]
	AssignmentStatement[10:1-20:13][MemberExpression[10:1-10:16][Identifier[10:1-10:7][Random].Identifier[10:8-10:16][calcSeed]] = Function[10:19-20:13][Identifier[10:28-10:32][seed] =>
		AssignmentStatement[11:3-11:14][Identifier[11:3-11:10][seedVal] = Literal[11:13-11:14][0]]
		AssignmentStatement[12:3-12:17][Identifier[12:3-12:6][pos] = MemberExpression[12:9-12:17][Identifier[12:9-12:13][seed].Identifier[12:14-12:17][len]]]
		For[14:3-17:10][Identifier[14:7-14:11][char] in Identifier[14:15-14:19][seed]
			AssignmentStatement[15:5-15:40][Identifier[15:5-15:12][seedVal] = BinaryExpression[15:15-15:40][BinaryExpression[15:15-15:34][Identifier[15:15-15:22][seedVal] + MemberExpression[15:25-15:34][Identifier[15:25-15:29][char].Identifier[15:30-15:34][code]]] + Identifier[15:37-15:40][pos]]]
			AssignmentStatement[16:5-16:18][Identifier[16:5-16:8][pos] = BinaryExpression[16:11-16:18][Identifier[16:11-16:14][pos] - Literal[16:17-16:18][1]]]
		]
		ReturnStatement[19:3-19:17][Identifier[19:10-19:17][seedVal]]
	]]
	AssignmentStatement[22:1-42:13][MemberExpression[22:1-22:11][Identifier[22:1-22:7][Random].Identifier[22:8-22:11][gen]] = Function[22:14-42:13][Identifier[22:23-22:26][min], Identifier[22:28-22:31][max], Identifier[22:33-22:37][seed], Identifier[22:39-22:42][inc] =>
		AssignmentStatement[23:3-23:12][Identifier[23:3-23:5][me] = Identifier[23:8-23:12][self]]
		AssignmentStatement[24:3-24:17][Identifier[24:3-24:7][pool] = MemberExpression[24:10-24:17][Identifier[24:10-24:12][me].Identifier[24:13-24:17][pool]]]
		IfStatement[25:3-25:35][
			IfShortcutClause[25:3-25:35][BinaryExpression[25:7-25:18][Identifier[25:7-25:10][inc] == Literal[25:14-25:18][null]]
				AssignmentStatement[25:25-25:35][Identifier[25:25-25:28][inc] = Literal[25:31-25:35][true]]
			]
		]
		IfStatement[26:3-26:47][
			IfShortcutClause[26:3-26:47][BinaryExpression[26:7-26:19][Identifier[26:7-26:11][seed] == Literal[26:15-26:19][null]]
				AssignmentStatement[26:26-26:47][Identifier[26:26-26:30][seed] = MemberExpression[26:33-26:47][Identifier[26:33-26:35][me].Identifier[26:36-26:47][defaultSeed]]]
			]
		]
		IfStatement[27:3-34:9][
			IfClause[27:3-34:9][CallExpression[27:7-27:26][MemberExpression[27:7-27:20][Identifier[27:7-27:11][pool].Identifier[27:12-27:20][hasIndex]](Identifier[27:21-27:25][seed])]
				AssignmentStatement[28:5-28:20][Identifier[28:5-28:7][ps] = IndexExpression[28:10-28:20][Identifier[28:10-28:14][pool][Identifier[28:15-28:19][seed]]]]
				IfStatement[29:5-29:38][
					IfShortcutClause[29:5-29:38][NegationExpression[29:9-29:16][not Identifier[29:13-29:16][inc]]
						ReturnStatement[29:23-29:38][MemberExpression[29:30-29:38][Identifier[29:30-29:32][ps].Identifier[29:33-29:38][value]]]
					]
				]
				AssignmentStatement[30:5-30:38][MemberExpression[30:5-30:18][Identifier[30:5-30:7][ps].Identifier[30:8-30:18][generation]] = BinaryExpression[30:21-30:38][MemberExpression[30:21-30:34][Identifier[30:21-30:23][ps].Identifier[30:24-30:34][generation]] + Literal[30:37-30:38][1]]]
				AssignmentStatement[31:5-31:69][Identifier[31:5-31:8][val] = CallExpression[31:11-31:69][Identifier[31:11-31:16][floor](BinaryExpression[31:17-31:68][BinaryExpression[31:18-31:61][CallExpression[31:18-31:47][Identifier[31:18-31:21][rnd](BinaryExpression[31:22-31:46][MemberExpression[31:22-31:30][Identifier[31:22-31:24][ps].Identifier[31:25-31:30][value]] + MemberExpression[31:33-31:46][Identifier[31:33-31:35][ps].Identifier[31:36-31:46][generation]]])] * BinaryExpression[31:51-31:60][Identifier[31:51-31:54][max] - Identifier[31:57-31:60][min]]] + Identifier[31:65-31:68][min]])]]
				AssignmentStatement[32:5-32:19][MemberExpression[32:5-32:13][Identifier[32:5-32:7][ps].Identifier[32:8-32:13][value]] = Identifier[32:16-32:19][val]]
				ReturnStatement[33:5-33:15][Identifier[33:12-33:15][val]]
			]
		]
		AssignmentStatement[36:3-36:30][Identifier[36:3-36:10][seedVal] = CallExpression[36:13-36:30][MemberExpression[36:13-36:24][Identifier[36:13-36:15][me].Identifier[36:16-36:24][calcSeed]](Identifier[36:25-36:29][seed])]]
		AssignmentStatement[38:3-38:50][Identifier[38:3-38:6][val] = CallExpression[38:9-38:50][Identifier[38:9-38:14][floor](BinaryExpression[38:15-38:49][BinaryExpression[38:16-38:42][CallExpression[38:16-38:28][Identifier[38:16-38:19][rnd](Identifier[38:20-38:27][seedVal])] * BinaryExpression[38:32-38:41][Identifier[38:32-38:35][max] - Identifier[38:38-38:41][min]]] + Identifier[38:46-38:49][min]])]]
		AssignmentStatement[39:3-39:43][IndexExpression[39:3-39:13][Identifier[39:3-39:7][pool][Identifier[39:8-39:12][seed]]] = CallExpression[39:16-39:43][MemberExpression[39:16-39:29][Identifier[39:16-39:18][me].Identifier[39:19-39:29][createPool]](Identifier[39:30-39:37][seedVal], Identifier[39:39-39:42][val])]]
		ReturnStatement[41:3-41:13][Identifier[41:10-41:13][val]]
	]]
	AssignmentStatement[44:1-55:13][MemberExpression[44:1-44:11][Identifier[44:1-44:7][Random].Identifier[44:8-44:11][seq]] = Function[44:14-55:13][Identifier[44:23-44:26][min], Identifier[44:28-44:31][max], Identifier[44:33-44:37][seed], Identifier[44:39-44:45][amount], Identifier[44:47-44:55][keepPool] =>
		AssignmentStatement[45:3-45:12][Identifier[45:3-45:5][me] = Identifier[45:8-45:12][self]]
		AssignmentStatement[46:3-46:12][Identifier[46:3-46:8][index] = Literal[46:11-46:12][0]]
		AssignmentStatement[47:3-47:14][Identifier[47:3-47:9][result] = ListConstructor[47:12-47:14][]]
		WhileStatement[48:3-52:12][BinaryExpression[48:9-48:23][Identifier[48:9-48:14][index] < Identifier[48:17-48:23][amount]]
			AssignmentStatement[49:5-49:34][Identifier[49:5-49:9][temp] = CallExpression[49:12-49:34][MemberExpression[49:12-49:18][Identifier[49:12-49:14][me].Identifier[49:15-49:18][gen]](Identifier[49:19-49:22][min], Identifier[49:24-49:27][max], Identifier[49:29-49:33][seed])]]
			CallExpression[50:5-50:23][MemberExpression[50:5-50:16][Identifier[50:5-50:11][result].Identifier[50:12-50:16][push]](Identifier[50:17-50:21][temp])]
			AssignmentStatement[51:5-51:22][Identifier[51:5-51:10][index] = BinaryExpression[51:13-51:22][Identifier[51:13-51:18][index] + Literal[51:21-51:22][1]]]
		]
		IfStatement[53:3-53:50][
			IfShortcutClause[53:3-53:50][BinaryExpression[53:7-53:23][Identifier[53:7-53:15][keepPool] != Literal[53:19-53:23][true]]
				CallExpression[53:30-53:50][MemberExpression[53:30-53:44][MemberExpression[53:30-53:37][Identifier[53:30-53:32][me].Identifier[53:33-53:37][pool]].Identifier[53:38-53:44][remove]](Identifier[53:45-53:49][seed])]
			]
		]
		ReturnStatement[54:3-54:16][Identifier[54:10-54:16][result]]
	]]
	AssignmentStatement[57:1-59:13][MemberExpression[57:1-57:11][Identifier[57:1-57:7][Random].Identifier[57:8-57:11][get]] = Function[57:14-59:13][Identifier[57:23-57:26][min], Identifier[57:28-57:31][max] =>
		ReturnStatement[58:3-58:28][CallExpression[58:10-58:28][MemberExpression[58:10-58:18][Identifier[58:10-58:14][self].Identifier[58:15-58:18][gen]](Identifier[58:19-58:22][min], Identifier[58:24-58:27][max])]]
	]]
	CallExpression[61:1-61:27][Identifier[61:1-61:6][print](CallExpression[61:7-61:26][MemberExpression[61:7-61:17][Identifier[61:7-61:13][Random].Identifier[61:14-61:17][get]](Literal[61:18-61:21][100], Literal[61:22-61:25][500])])]
	CallExpression[62:1-62:39][Identifier[62:1-62:6][print](CallExpression[62:7-62:38][MemberExpression[62:7-62:17][Identifier[62:7-62:13][Random].Identifier[62:14-62:17][seq]](Literal[62:18-62:21][100], Literal[62:22-62:25][500], Literal[62:27-62:33][test], Literal[62:35-62:37][10])])]
]"
`;

exports[`parse default scripts random.ms 2`] = `undefined`;

exports[`parse default scripts random.ms 3`] = `20`;

exports[`parse default scripts random.ms 4`] = `8`;

exports[`parse default scripts random.ms unsafe 1`] = `
"Chunk[1:1-62:39][
	AssignmentStatement[1:1-1:12][Identifier[1:1-1:7][Random] = MapConstructor[1:10-1:12][]]
	AssignmentStatement[3:1-3:17][MemberExpression[3:1-3:12][Identifier[3:1-3:7][Random].Identifier[3:8-3:12][pool]] = MapConstructor[3:15-3:17][]]
	AssignmentStatement[4:1-4:30][MemberExpression[4:1-4:19][Identifier[4:1-4:7][Random].Identifier[4:8-4:19][defaultSeed]] = Literal[4:22-4:30][random]]
	AssignmentStatement[6:1-8:13][MemberExpression[6:1-6:18][Identifier[6:1-6:7][Random].Identifier[6:8-6:18][createPool]] = Function[6:21-8:13][Identifier[6:30-6:34][seed], Identifier[6:36-6:39][val] =>
		ReturnStatement[7:3-7:57][MapConstructor[7:10-7:57][
			MapKeyString[7:12-7:24][Literal[7:12-7:18][seed]: Identifier[7:20-7:24][seed]]
			MapKeyString[7:26-7:38][Literal[7:26-7:33][value]: Identifier[7:35-7:38][val]]
			MapKeyString[7:40-7:55][Literal[7:40-7:52][generation]: Literal[7:54-7:55][0]]
		]]
	]]
	AssignmentStatement[10:1-20:13][MemberExpression[10:1-10:16][Identifier[10:1-10:7][Random].Identifier[10:8-10:16][calcSeed]] = Function[10:19-20:13][Identifier[10:28-10:32][seed] =>
		AssignmentStatement[11:3-11:14][Identifier[11:3-11:10][seedVal] = Literal[11:13-11:14][0]]
		AssignmentStatement[12:3-12:17][Identifier[12:3-12:6][pos] = MemberExpression[12:9-12:17][Identifier[12:9-12:13][seed].Identifier[12:14-12:17][len]]]
		For[14:3-17:10][Identifier[14:7-14:11][char] in Identifier[14:15-14:19][seed]
			AssignmentStatement[15:5-15:40][Identifier[15:5-15:12][seedVal] = BinaryExpression[15:15-15:40][BinaryExpression[15:15-15:34][Identifier[15:15-15:22][seedVal] + MemberExpression[15:25-15:34][Identifier[15:25-15:29][char].Identifier[15:30-15:34][code]]] + Identifier[15:37-15:40][pos]]]
			AssignmentStatement[16:5-16:18][Identifier[16:5-16:8][pos] = BinaryExpression[16:11-16:18][Identifier[16:11-16:14][pos] - Literal[16:17-16:18][1]]]
		]
		ReturnStatement[19:3-19:17][Identifier[19:10-19:17][seedVal]]
	]]
	AssignmentStatement[22:1-42:13][MemberExpression[22:1-22:11][Identifier[22:1-22:7][Random].Identifier[22:8-22:11][gen]] = Function[22:14-42:13][Identifier[22:23-22:26][min], Identifier[22:28-22:31][max], Identifier[22:33-22:37][seed], Identifier[22:39-22:42][inc] =>
		AssignmentStatement[23:3-23:12][Identifier[23:3-23:5][me] = Identifier[23:8-23:12][self]]
		AssignmentStatement[24:3-24:17][Identifier[24:3-24:7][pool] = MemberExpression[24:10-24:17][Identifier[24:10-24:12][me].Identifier[24:13-24:17][pool]]]
		IfStatement[25:3-25:35][
			IfShortcutClause[25:3-25:35][BinaryExpression[25:7-25:18][Identifier[25:7-25:10][inc] == Literal[25:14-25:18][null]]
				AssignmentStatement[25:25-25:35][Identifier[25:25-25:28][inc] = Literal[25:31-25:35][true]]
			]
		]
		IfStatement[26:3-26:47][
			IfShortcutClause[26:3-26:47][BinaryExpression[26:7-26:19][Identifier[26:7-26:11][seed] == Literal[26:15-26:19][null]]
				AssignmentStatement[26:26-26:47][Identifier[26:26-26:30][seed] = MemberExpression[26:33-26:47][Identifier[26:33-26:35][me].Identifier[26:36-26:47][defaultSeed]]]
			]
		]
		IfStatement[27:3-34:9][
			IfClause[27:3-34:9][CallExpression[27:7-27:26][MemberExpression[27:7-27:20][Identifier[27:7-27:11][pool].Identifier[27:12-27:20][hasIndex]](Identifier[27:21-27:25][seed])]
				AssignmentStatement[28:5-28:20][Identifier[28:5-28:7][ps] = IndexExpression[28:10-28:20][Identifier[28:10-28:14][pool][Identifier[28:15-28:19][seed]]]]
				IfStatement[29:5-29:38][
					IfShortcutClause[29:5-29:38][NegationExpression[29:9-29:16][not Identifier[29:13-29:16][inc]]
						ReturnStatement[29:23-29:38][MemberExpression[29:30-29:38][Identifier[29:30-29:32][ps].Identifier[29:33-29:38][value]]]
					]
				]
				AssignmentStatement[30:5-30:38][MemberExpression[30:5-30:18][Identifier[30:5-30:7][ps].Identifier[30:8-30:18][generation]] = BinaryExpression[30:21-30:38][MemberExpression[30:21-30:34][Identifier[30:21-30:23][ps].Identifier[30:24-30:34][generation]] + Literal[30:37-30:38][1]]]
				AssignmentStatement[31:5-31:69][Identifier[31:5-31:8][val] = CallExpression[31:11-31:69][Identifier[31:11-31:16][floor](BinaryExpression[31:17-31:68][BinaryExpression[31:18-31:61][CallExpression[31:18-31:47][Identifier[31:18-31:21][rnd](BinaryExpression[31:22-31:46][MemberExpression[31:22-31:30][Identifier[31:22-31:24][ps].Identifier[31:25-31:30][value]] + MemberExpression[31:33-31:46][Identifier[31:33-31:35][ps].Identifier[31:36-31:46][generation]]])] * BinaryExpression[31:51-31:60][Identifier[31:51-31:54][max] - Identifier[31:57-31:60][min]]] + Identifier[31:65-31:68][min]])]]
				AssignmentStatement[32:5-32:19][MemberExpression[32:5-32:13][Identifier[32:5-32:7][ps].Identifier[32:8-32:13][value]] = Identifier[32:16-32:19][val]]
				ReturnStatement[33:5-33:15][Identifier[33:12-33:15][val]]
			]
		]
		AssignmentStatement[36:3-36:30][Identifier[36:3-36:10][seedVal] = CallExpression[36:13-36:30][MemberExpression[36:13-36:24][Identifier[36:13-36:15][me].Identifier[36:16-36:24][calcSeed]](Identifier[36:25-36:29][seed])]]
		AssignmentStatement[38:3-38:50][Identifier[38:3-38:6][val] = CallExpression[38:9-38:50][Identifier[38:9-38:14][floor](BinaryExpression[38:15-38:49][BinaryExpression[38:16-38:42][CallExpression[38:16-38:28][Identifier[38:16-38:19][rnd](Identifier[38:20-38:27][seedVal])] * BinaryExpression[38:32-38:41][Identifier[38:32-38:35][max] - Identifier[38:38-38:41][min]]] + Identifier[38:46-38:49][min]])]]
		AssignmentStatement[39:3-39:43][IndexExpression[39:3-39:13][Identifier[39:3-39:7][pool][Identifier[39:8-39:12][seed]]] = CallExpression[39:16-39:43][MemberExpression[39:16-39:29][Identifier[39:16-39:18][me].Identifier[39:19-39:29][createPool]](Identifier[39:30-39:37][seedVal], Identifier[39:39-39:42][val])]]
		ReturnStatement[41:3-41:13][Identifier[41:10-41:13][val]]
	]]
	AssignmentStatement[44:1-55:13][MemberExpression[44:1-44:11][Identifier[44:1-44:7][Random].Identifier[44:8-44:11][seq]] = Function[44:14-55:13][Identifier[44:23-44:26][min], Identifier[44:28-44:31][max], Identifier[44:33-44:37][seed], Identifier[44:39-44:45][amount], Identifier[44:47-44:55][keepPool] =>
		AssignmentStatement[45:3-45:12][Identifier[45:3-45:5][me] = Identifier[45:8-45:12][self]]
		AssignmentStatement[46:3-46:12][Identifier[46:3-46:8][index] = Literal[46:11-46:12][0]]
		AssignmentStatement[47:3-47:14][Identifier[47:3-47:9][result] = ListConstructor[47:12-47:14][]]
		WhileStatement[48:3-52:12][BinaryExpression[48:9-48:23][Identifier[48:9-48:14][index] < Identifier[48:17-48:23][amount]]
			AssignmentStatement[49:5-49:34][Identifier[49:5-49:9][temp] = CallExpression[49:12-49:34][MemberExpression[49:12-49:18][Identifier[49:12-49:14][me].Identifier[49:15-49:18][gen]](Identifier[49:19-49:22][min], Identifier[49:24-49:27][max], Identifier[49:29-49:33][seed])]]
			CallExpression[50:5-50:23][MemberExpression[50:5-50:16][Identifier[50:5-50:11][result].Identifier[50:12-50:16][push]](Identifier[50:17-50:21][temp])]
			AssignmentStatement[51:5-51:22][Identifier[51:5-51:10][index] = BinaryExpression[51:13-51:22][Identifier[51:13-51:18][index] + Literal[51:21-51:22][1]]]
		]
		IfStatement[53:3-53:50][
			IfShortcutClause[53:3-53:50][BinaryExpression[53:7-53:23][Identifier[53:7-53:15][keepPool] != Literal[53:19-53:23][true]]
				CallExpression[53:30-53:50][MemberExpression[53:30-53:44][MemberExpression[53:30-53:37][Identifier[53:30-53:32][me].Identifier[53:33-53:37][pool]].Identifier[53:38-53:44][remove]](Identifier[53:45-53:49][seed])]
			]
		]
		ReturnStatement[54:3-54:16][Identifier[54:10-54:16][result]]
	]]
	AssignmentStatement[57:1-59:13][MemberExpression[57:1-57:11][Identifier[57:1-57:7][Random].Identifier[57:8-57:11][get]] = Function[57:14-59:13][Identifier[57:23-57:26][min], Identifier[57:28-57:31][max] =>
		ReturnStatement[58:3-58:28][CallExpression[58:10-58:28][MemberExpression[58:10-58:18][Identifier[58:10-58:14][self].Identifier[58:15-58:18][gen]](Identifier[58:19-58:22][min], Identifier[58:24-58:27][max])]]
	]]
	CallExpression[61:1-61:27][Identifier[61:1-61:6][print](CallExpression[61:7-61:26][MemberExpression[61:7-61:17][Identifier[61:7-61:13][Random].Identifier[61:14-61:17][get]](Literal[61:18-61:21][100], Literal[61:22-61:25][500])])]
	CallExpression[62:1-62:39][Identifier[62:1-62:6][print](CallExpression[62:7-62:38][MemberExpression[62:7-62:17][Identifier[62:7-62:13][Random].Identifier[62:14-62:17][seq]](Literal[62:18-62:21][100], Literal[62:22-62:25][500], Literal[62:27-62:33][test], Literal[62:35-62:37][10])])]
]"
`;

exports[`parse default scripts shorthand.ms 1`] = `
"Chunk[1:1-51:34][
	IfStatement[1:1-1:29][
		IfShortcutClause[1:1-1:29][Literal[1:5-1:9][true]
			CallExpression[1:16-1:29][Identifier[1:16-1:21][print](Literal[1:22-1:28][true])]
		]
	]
	IfStatement[2:1-2:49][
		IfShortcutClause[2:1-2:35][Literal[2:5-2:10][false]
			CallExpression[2:17-2:30][Identifier[2:17-2:22][print](Literal[2:23-2:29][true])]
		]
		ElseShortcutClause[2:36-2:49][
			CallExpression[2:36-2:49][Identifier[2:36-2:41][print](Literal[2:42-2:48][true])]
		}]
	]
	CallExpression[3:1-3:13][Identifier[3:1-3:6][print](Literal[3:7-3:12][was])]
	IfStatement[4:1-8:7][
		IfClause[4:1-6:5][Literal[4:5-4:10][false]
			CallExpression[5:3-5:15][Identifier[5:3-5:8][print](Literal[5:9-5:14][false])]
		]
		ElseClause[6:5-8:7][
			CallExpression[7:3-7:14][Identifier[7:3-7:8][print](Literal[7:9-7:13][true])]
		}]
	]
	IfStatement[9:1-14:7][
		IfClause[9:1-11:5][Literal[9:5-9:10][false]
			CallExpression[10:3-10:15][Identifier[10:3-10:8][print](Literal[10:9-10:14][false])]
		]
		ElseClause[11:5-14:7][
			CallExpression[12:3-12:14][Identifier[12:3-12:8][print](Literal[12:9-12:13][true])]
			IfStatement[13:3-13:51][
				IfShortcutClause[13:3-13:37][Literal[13:7-13:12][false]
					CallExpression[13:19-13:32][Identifier[13:19-13:24][print](Literal[13:25-13:31][true])]
				]
				ElseShortcutClause[13:38-13:51][
					CallExpression[13:38-13:51][Identifier[13:38-13:43][print](Literal[13:44-13:50][true])]
				}]
			]
		}]
	]
	For[16:1-16:21][Identifier[16:5-16:6][i] in ListConstructor[16:10-16:13][]
		CallExpression[16:13-16:21][Identifier[16:13-16:18][print](Identifier[16:19-16:20][i])]
	]
	For[17:1-19:8][Identifier[17:5-17:6][b] in ListConstructor[17:10-17:12][]
		CallExpression[18:3-18:11][Identifier[18:3-18:8][print](Identifier[18:9-18:10][b])]
	]
	WhileStatement[20:1-20:21][BinaryExpression[20:8-20:13][Identifier[20:8-20:9][i] < Identifier[20:12-20:13][b]]
		AssignmentStatement[20:15-20:21][Identifier[20:15-20:16][i] = BinaryExpression[20:20-20:21][Identifier[20:15-20:16][i] + Literal[20:20-20:21][1]]]
	]
	WhileStatement[21:1-23:10][BinaryExpression[21:8-21:13][Identifier[21:8-21:9][b] < Identifier[21:12-21:13][i]]
		AssignmentStatement[22:3-22:9][Identifier[22:3-22:4][b] = BinaryExpression[22:8-22:9][Identifier[22:3-22:4][b] + Literal[22:8-22:9][1]]]
	]
	AssignmentStatement[24:1-26:13][Identifier[24:1-24:11][myFunction] = Function[24:14-26:13][Identifier[24:23-24:24][v] =>
		CallExpression[25:3-25:11][Identifier[25:3-25:8][print](Identifier[25:9-25:10][v])]
	]]
	AssignmentStatement[27:1-29:13][Identifier[27:1-27:14][otherFunction] = Function[27:17-29:13][Identifier[27:26-27:27][n] =>
		CallExpression[28:3-28:11][Identifier[28:3-28:8][print](Identifier[28:9-28:10][n])]
	]]
	IfStatement[31:1-32:7][
		IfClause[31:1-32:7][NegationExpression[31:4-31:12][not UnaryExpression[31:8-31:12][@ Identifier[31:9-31:12][ref]]]]
	]
	IfStatement[34:1-37:7][
		IfClause[34:1-36:5][Literal[34:4-34:8][true]
			AssignmentStatement[35:3-35:24][Identifier[35:3-35:16][elseSomething] = Literal[35:19-35:24][false]]
		]
		ElseClause[]
	]
	For[39:1-41:8][Identifier[39:5-39:6][c] in Identifier[39:10-39:15][clist]
		Comment[39:16-39:19][x]
		CallExpression[40:3-40:15][Identifier[40:3-40:8][print](Literal[40:9-40:14][moo])]
	]
	WhileStatement[43:1-45:10][Literal[43:7-43:11][true]
		Comment[43:12-43:15][x]
		CallExpression[44:3-44:15][Identifier[44:3-44:8][print](Literal[44:9-44:14][moo])]
	]
	IfStatement[47:1-49:7][
		IfClause[47:1-49:7][Literal[47:4-47:8][true]
			Comment[47:14-47:17][x]
			CallExpression[48:3-48:15][Identifier[48:3-48:8][print](Literal[48:9-48:14][moo])]
		]
	]
	IfStatement[51:1-51:34][
		IfShortcutClause[51:1-51:26][BinaryExpression[51:4-51:9][Identifier[51:4-51:5][x] < Literal[51:8-51:9][0]]
			ReturnStatement[51:15-51:21][null]
		]
		ElseShortcutClause[51:27-51:34][
			CallExpression[51:27-51:34][Identifier[51:27-51:32][print](Identifier[51:33-51:34][x])]
		}]
	]
]"
`;

exports[`parse default scripts shorthand.ms 2`] = `undefined`;

exports[`parse default scripts shorthand.ms 3`] = `25`;

exports[`parse default scripts shorthand.ms 4`] = `11`;

exports[`parse default scripts shorthand.ms unsafe 1`] = `
"Chunk[1:1-51:34][
	IfStatement[1:1-1:29][
		IfShortcutClause[1:1-1:29][Literal[1:5-1:9][true]
			CallExpression[1:16-1:29][Identifier[1:16-1:21][print](Literal[1:22-1:28][true])]
		]
	]
	IfStatement[2:1-2:49][
		IfShortcutClause[2:1-2:35][Literal[2:5-2:10][false]
			CallExpression[2:17-2:30][Identifier[2:17-2:22][print](Literal[2:23-2:29][true])]
		]
		ElseShortcutClause[2:36-2:49][
			CallExpression[2:36-2:49][Identifier[2:36-2:41][print](Literal[2:42-2:48][true])]
		}]
	]
	CallExpression[3:1-3:13][Identifier[3:1-3:6][print](Literal[3:7-3:12][was])]
	IfStatement[4:1-8:7][
		IfClause[4:1-6:5][Literal[4:5-4:10][false]
			CallExpression[5:3-5:15][Identifier[5:3-5:8][print](Literal[5:9-5:14][false])]
		]
		ElseClause[6:5-8:7][
			CallExpression[7:3-7:14][Identifier[7:3-7:8][print](Literal[7:9-7:13][true])]
		}]
	]
	IfStatement[9:1-14:7][
		IfClause[9:1-11:5][Literal[9:5-9:10][false]
			CallExpression[10:3-10:15][Identifier[10:3-10:8][print](Literal[10:9-10:14][false])]
		]
		ElseClause[11:5-14:7][
			CallExpression[12:3-12:14][Identifier[12:3-12:8][print](Literal[12:9-12:13][true])]
			IfStatement[13:3-13:51][
				IfShortcutClause[13:3-13:37][Literal[13:7-13:12][false]
					CallExpression[13:19-13:32][Identifier[13:19-13:24][print](Literal[13:25-13:31][true])]
				]
				ElseShortcutClause[13:38-13:51][
					CallExpression[13:38-13:51][Identifier[13:38-13:43][print](Literal[13:44-13:50][true])]
				}]
			]
		}]
	]
	For[16:1-16:21][Identifier[16:5-16:6][i] in ListConstructor[16:10-16:13][]
		CallExpression[16:13-16:21][Identifier[16:13-16:18][print](Identifier[16:19-16:20][i])]
	]
	For[17:1-19:8][Identifier[17:5-17:6][b] in ListConstructor[17:10-17:12][]
		CallExpression[18:3-18:11][Identifier[18:3-18:8][print](Identifier[18:9-18:10][b])]
	]
	WhileStatement[20:1-20:21][BinaryExpression[20:8-20:13][Identifier[20:8-20:9][i] < Identifier[20:12-20:13][b]]
		AssignmentStatement[20:15-20:21][Identifier[20:15-20:16][i] = BinaryExpression[20:20-20:21][Identifier[20:15-20:16][i] + Literal[20:20-20:21][1]]]
	]
	WhileStatement[21:1-23:10][BinaryExpression[21:8-21:13][Identifier[21:8-21:9][b] < Identifier[21:12-21:13][i]]
		AssignmentStatement[22:3-22:9][Identifier[22:3-22:4][b] = BinaryExpression[22:8-22:9][Identifier[22:3-22:4][b] + Literal[22:8-22:9][1]]]
	]
	AssignmentStatement[24:1-26:13][Identifier[24:1-24:11][myFunction] = Function[24:14-26:13][Identifier[24:23-24:24][v] =>
		CallExpression[25:3-25:11][Identifier[25:3-25:8][print](Identifier[25:9-25:10][v])]
	]]
	AssignmentStatement[27:1-29:13][Identifier[27:1-27:14][otherFunction] = Function[27:17-29:13][Identifier[27:26-27:27][n] =>
		CallExpression[28:3-28:11][Identifier[28:3-28:8][print](Identifier[28:9-28:10][n])]
	]]
	IfStatement[31:1-32:7][
		IfClause[31:1-32:7][NegationExpression[31:4-31:12][not UnaryExpression[31:8-31:12][@ Identifier[31:9-31:12][ref]]]]
	]
	IfStatement[34:1-37:7][
		IfClause[34:1-36:5][Literal[34:4-34:8][true]
			AssignmentStatement[35:3-35:24][Identifier[35:3-35:16][elseSomething] = Literal[35:19-35:24][false]]
		]
		ElseClause[]
	]
	For[39:1-41:8][Identifier[39:5-39:6][c] in Identifier[39:10-39:15][clist]
		Comment[39:16-39:19][x]
		CallExpression[40:3-40:15][Identifier[40:3-40:8][print](Literal[40:9-40:14][moo])]
	]
	WhileStatement[43:1-45:10][Literal[43:7-43:11][true]
		Comment[43:12-43:15][x]
		CallExpression[44:3-44:15][Identifier[44:3-44:8][print](Literal[44:9-44:14][moo])]
	]
	IfStatement[47:1-49:7][
		IfClause[47:1-49:7][Literal[47:4-47:8][true]
			Comment[47:14-47:17][x]
			CallExpression[48:3-48:15][Identifier[48:3-48:8][print](Literal[48:9-48:14][moo])]
		]
	]
	IfStatement[51:1-51:34][
		IfShortcutClause[51:1-51:26][BinaryExpression[51:4-51:9][Identifier[51:4-51:5][x] < Literal[51:8-51:9][0]]
			ReturnStatement[51:15-51:21][null]
		]
		ElseShortcutClause[51:27-51:34][
			CallExpression[51:27-51:34][Identifier[51:27-51:32][print](Identifier[51:33-51:34][x])]
		}]
	]
]"
`;

exports[`parse default scripts simple-object.ms 1`] = `
"Chunk[1:1-9:18][
	AssignmentStatement[1:1-1:10][Identifier[1:1-1:5][test] = MapConstructor[1:8-1:10][]]
	AssignmentStatement[3:1-3:18][MemberExpression[3:1-3:10][Identifier[3:1-3:5][test].Identifier[3:6-3:10][here]] = Literal[3:13-3:18][was]]
	AssignmentStatement[5:1-7:13][MemberExpression[5:1-5:9][Identifier[5:1-5:5][test].Identifier[5:6-5:9][was]] = Function[5:12-7:13][ =>
		CallExpression[6:3-6:19][Identifier[6:3-6:8][print](MemberExpression[6:9-6:18][Identifier[6:9-6:13][self].Identifier[6:14-6:18][here]])]
	]]
	CallExpression[9:1-9:18][Identifier[9:1-9:6][print](CallExpression[9:7-9:17][MemberExpression[9:7-9:15][Identifier[9:7-9:11][test].Identifier[9:12-9:15][was]]()])]
]"
`;

exports[`parse default scripts simple-object.ms 2`] = `undefined`;

exports[`parse default scripts simple-object.ms 3`] = `1`;

exports[`parse default scripts simple-object.ms 4`] = `3`;

exports[`parse default scripts simple-object.ms unsafe 1`] = `
"Chunk[1:1-9:18][
	AssignmentStatement[1:1-1:10][Identifier[1:1-1:5][test] = MapConstructor[1:8-1:10][]]
	AssignmentStatement[3:1-3:18][MemberExpression[3:1-3:10][Identifier[3:1-3:5][test].Identifier[3:6-3:10][here]] = Literal[3:13-3:18][was]]
	AssignmentStatement[5:1-7:13][MemberExpression[5:1-5:9][Identifier[5:1-5:5][test].Identifier[5:6-5:9][was]] = Function[5:12-7:13][ =>
		CallExpression[6:3-6:19][Identifier[6:3-6:8][print](MemberExpression[6:9-6:18][Identifier[6:9-6:13][self].Identifier[6:14-6:18][here]])]
	]]
	CallExpression[9:1-9:18][Identifier[9:1-9:6][print](CallExpression[9:7-9:17][MemberExpression[9:7-9:15][Identifier[9:7-9:11][test].Identifier[9:12-9:15][was]]()])]
]"
`;

exports[`parse default scripts slice.ms 1`] = `
"Chunk[1:1-27:21][
	AssignmentStatement[1:1-13:13][Identifier[1:1-1:13][divideString] = Function[1:16-13:13][Identifier[1:25-1:28][str], Identifier[1:29-1:34][limit] =>
		AssignmentStatement[2:3-2:13][Identifier[2:3-2:9][offset] = Literal[2:12-2:13][0]]
		AssignmentStatement[3:3-3:19][Identifier[3:3-3:9][maxLen] = MemberExpression[3:12-3:19][Identifier[3:12-3:15][str].Identifier[3:16-3:19][len]]]
		AssignmentStatement[4:3-4:13][Identifier[4:3-4:8][frags] = ListConstructor[4:11-4:13][]]
		WhileStatement[6:3-10:12][BinaryExpression[6:9-6:24][Identifier[6:9-6:15][offset] < Identifier[6:18-6:24][maxLen]]
			AssignmentStatement[7:5-7:26][Identifier[7:5-7:9][next] = BinaryExpression[7:12-7:26][Identifier[7:12-7:18][offset] + Identifier[7:21-7:26][limit]]]
			CallExpression[8:5-8:33][MemberExpression[8:5-8:15][Identifier[8:5-8:10][frags].Identifier[8:11-8:15][push]](SliceExpression[8:16-8:32][Identifier[8:16-8:19][str][Identifier[8:20-8:26][offset]:Identifier[8:27-8:31][next]]])]
			AssignmentStatement[9:5-9:18][Identifier[9:5-9:11][offset] = Identifier[9:14-9:18][next]]
		]
		ReturnStatement[12:3-12:15][Identifier[12:10-12:15][frags]]
	]]
	CallExpression[15:1-15:59][Identifier[15:1-15:6][print](CallExpression[15:7-15:58][Identifier[15:7-15:19][divideString](Literal[15:20-15:55][blahhblahhblahhblahhblahhblahhgad], Literal[15:56-15:57][5])])]
	AssignmentStatement[17:1-17:81][MemberExpression[17:1-17:18][Identifier[17:1-17:5][test].Identifier[17:6-17:18][current_path]] = BinaryExpression[17:21-17:81][Literal[17:21-17:29][/home/] + SliceExpression[17:30-17:81][MemberExpression[17:30-17:47][IndexExpression[17:30-17:42][MemberExpression[17:30-17:38][Identifier[17:30-17:34][test].Identifier[17:35-17:38][moo]][BinaryNegatedExpression[17:39-17:41][- Literal[17:40-17:41][1]]]].Identifier[17:43-17:47][user]][BinaryExpression[17:48-17:79][CallExpression[17:48-17:77][MemberExpression[17:48-17:72][MemberExpression[17:48-17:64][IndexExpression[17:48-17:60][MemberExpression[17:48-17:56][Identifier[17:48-17:52][test].Identifier[17:53-17:56][bar]][BinaryNegatedExpression[17:57-17:59][- Literal[17:58-17:59][1]]]].Identifier[17:61-17:64][foo]].Identifier[17:65-17:72][indexOf]](Literal[17:73-17:76][@])] + Literal[17:78-17:79][1]]:EmptyExpression[17:79-17:80][]]]]]
	For[19:1-21:8][Identifier[19:5-19:6][i] in CallExpression[19:10-19:26][Identifier[19:10-19:15][range](Literal[19:16-19:17][0], BinaryExpression[19:18-19:25][MemberExpression[19:18-19:23][Identifier[19:18-19:19][s].Identifier[19:20-19:23][len]] - Literal[19:24-19:25][4]])]
		IfStatement[20:3-20:79][
			IfShortcutClause[20:3-20:57][CallExpression[20:6-20:26][MemberExpression[20:6-20:16][Identifier[20:6-20:7][f].Identifier[20:8-20:16][hasIndex]](SliceExpression[20:17-20:25][Identifier[20:17-20:18][s][Identifier[20:19-20:20][i]:BinaryExpression[20:21-20:24][Identifier[20:21-20:22][i] + Literal[20:23-20:24][3]]]])]
				AssignmentStatement[20:32-20:52][IndexExpression[20:32-20:50][IndexExpression[20:32-20:43][Identifier[20:32-20:33][f][SliceExpression[20:34-20:42][Identifier[20:34-20:35][s][Identifier[20:36-20:37][i]:BinaryExpression[20:38-20:41][Identifier[20:38-20:39][i] + Literal[20:40-20:41][3]]]]]][MemberExpression[20:44-20:49][Identifier[20:44-20:45][s].Identifier[20:46-20:49][len]]]] = Literal[20:51-20:52][1]]
			]
			ElseShortcutClause[20:58-20:79][
				AssignmentStatement[20:58-20:79][IndexExpression[20:58-20:69][Identifier[20:58-20:59][f][SliceExpression[20:60-20:68][Identifier[20:60-20:61][s][Identifier[20:62-20:63][i]:BinaryExpression[20:64-20:67][Identifier[20:64-20:65][i] + Literal[20:66-20:67][3]]]]]] = MapConstructor[20:70-20:79][
					MapKeyString[20:71-20:78][MemberExpression[20:71-20:76][Identifier[20:71-20:72][s].Identifier[20:73-20:76][len]]: Literal[20:77-20:78][1]]
				]]
			}]
		]
	]
	SliceExpression[23:1-23:8][Identifier[23:1-23:4][foo][Literal[23:5-23:6][1]:EmptyExpression[23:6-23:7][]]]
	SliceExpression[24:1-24:8][Identifier[24:1-24:4][foo][EmptyExpression[24:4-24:5][]:Literal[24:6-24:7][1]]]
	SliceExpression[25:1-25:14][Identifier[25:1-25:4][foo][SliceExpression[25:5-25:12][Identifier[25:5-25:8][foo][Literal[25:9-25:10][1]:EmptyExpression[25:10-25:11][]]]:EmptyExpression[25:12-25:13][]]]
	SliceExpression[26:1-26:14][Identifier[26:1-26:4][foo][EmptyExpression[26:4-26:5][]:SliceExpression[26:6-26:13][Identifier[26:6-26:9][foo][EmptyExpression[26:9-26:10][]:Literal[26:11-26:12][1]]]]]
	SliceExpression[27:1-27:21][Identifier[27:1-27:4][foo][SliceExpression[27:5-27:12][Identifier[27:5-27:8][foo][Literal[27:9-27:10][1]:EmptyExpression[27:10-27:11][]]]:SliceExpression[27:13-27:20][Identifier[27:13-27:16][foo][EmptyExpression[27:16-27:17][]:Literal[27:18-27:19][1]]]]]
]"
`;

exports[`parse default scripts slice.ms 2`] = `undefined`;

exports[`parse default scripts slice.ms 3`] = `21`;

exports[`parse default scripts slice.ms 4`] = `7`;

exports[`parse default scripts slice.ms unsafe 1`] = `
"Chunk[1:1-27:21][
	AssignmentStatement[1:1-13:13][Identifier[1:1-1:13][divideString] = Function[1:16-13:13][Identifier[1:25-1:28][str], Identifier[1:29-1:34][limit] =>
		AssignmentStatement[2:3-2:13][Identifier[2:3-2:9][offset] = Literal[2:12-2:13][0]]
		AssignmentStatement[3:3-3:19][Identifier[3:3-3:9][maxLen] = MemberExpression[3:12-3:19][Identifier[3:12-3:15][str].Identifier[3:16-3:19][len]]]
		AssignmentStatement[4:3-4:13][Identifier[4:3-4:8][frags] = ListConstructor[4:11-4:13][]]
		WhileStatement[6:3-10:12][BinaryExpression[6:9-6:24][Identifier[6:9-6:15][offset] < Identifier[6:18-6:24][maxLen]]
			AssignmentStatement[7:5-7:26][Identifier[7:5-7:9][next] = BinaryExpression[7:12-7:26][Identifier[7:12-7:18][offset] + Identifier[7:21-7:26][limit]]]
			CallExpression[8:5-8:33][MemberExpression[8:5-8:15][Identifier[8:5-8:10][frags].Identifier[8:11-8:15][push]](SliceExpression[8:16-8:32][Identifier[8:16-8:19][str][Identifier[8:20-8:26][offset]:Identifier[8:27-8:31][next]]])]
			AssignmentStatement[9:5-9:18][Identifier[9:5-9:11][offset] = Identifier[9:14-9:18][next]]
		]
		ReturnStatement[12:3-12:15][Identifier[12:10-12:15][frags]]
	]]
	CallExpression[15:1-15:59][Identifier[15:1-15:6][print](CallExpression[15:7-15:58][Identifier[15:7-15:19][divideString](Literal[15:20-15:55][blahhblahhblahhblahhblahhblahhgad], Literal[15:56-15:57][5])])]
	AssignmentStatement[17:1-17:81][MemberExpression[17:1-17:18][Identifier[17:1-17:5][test].Identifier[17:6-17:18][current_path]] = BinaryExpression[17:21-17:81][Literal[17:21-17:29][/home/] + SliceExpression[17:30-17:81][MemberExpression[17:30-17:47][IndexExpression[17:30-17:42][MemberExpression[17:30-17:38][Identifier[17:30-17:34][test].Identifier[17:35-17:38][moo]][BinaryNegatedExpression[17:39-17:41][- Literal[17:40-17:41][1]]]].Identifier[17:43-17:47][user]][BinaryExpression[17:48-17:79][CallExpression[17:48-17:77][MemberExpression[17:48-17:72][MemberExpression[17:48-17:64][IndexExpression[17:48-17:60][MemberExpression[17:48-17:56][Identifier[17:48-17:52][test].Identifier[17:53-17:56][bar]][BinaryNegatedExpression[17:57-17:59][- Literal[17:58-17:59][1]]]].Identifier[17:61-17:64][foo]].Identifier[17:65-17:72][indexOf]](Literal[17:73-17:76][@])] + Literal[17:78-17:79][1]]:EmptyExpression[17:79-17:80][]]]]]
	For[19:1-21:8][Identifier[19:5-19:6][i] in CallExpression[19:10-19:26][Identifier[19:10-19:15][range](Literal[19:16-19:17][0], BinaryExpression[19:18-19:25][MemberExpression[19:18-19:23][Identifier[19:18-19:19][s].Identifier[19:20-19:23][len]] - Literal[19:24-19:25][4]])]
		IfStatement[20:3-20:79][
			IfShortcutClause[20:3-20:57][CallExpression[20:6-20:26][MemberExpression[20:6-20:16][Identifier[20:6-20:7][f].Identifier[20:8-20:16][hasIndex]](SliceExpression[20:17-20:25][Identifier[20:17-20:18][s][Identifier[20:19-20:20][i]:BinaryExpression[20:21-20:24][Identifier[20:21-20:22][i] + Literal[20:23-20:24][3]]]])]
				AssignmentStatement[20:32-20:52][IndexExpression[20:32-20:50][IndexExpression[20:32-20:43][Identifier[20:32-20:33][f][SliceExpression[20:34-20:42][Identifier[20:34-20:35][s][Identifier[20:36-20:37][i]:BinaryExpression[20:38-20:41][Identifier[20:38-20:39][i] + Literal[20:40-20:41][3]]]]]][MemberExpression[20:44-20:49][Identifier[20:44-20:45][s].Identifier[20:46-20:49][len]]]] = Literal[20:51-20:52][1]]
			]
			ElseShortcutClause[20:58-20:79][
				AssignmentStatement[20:58-20:79][IndexExpression[20:58-20:69][Identifier[20:58-20:59][f][SliceExpression[20:60-20:68][Identifier[20:60-20:61][s][Identifier[20:62-20:63][i]:BinaryExpression[20:64-20:67][Identifier[20:64-20:65][i] + Literal[20:66-20:67][3]]]]]] = MapConstructor[20:70-20:79][
					MapKeyString[20:71-20:78][MemberExpression[20:71-20:76][Identifier[20:71-20:72][s].Identifier[20:73-20:76][len]]: Literal[20:77-20:78][1]]
				]]
			}]
		]
	]
	SliceExpression[23:1-23:8][Identifier[23:1-23:4][foo][Literal[23:5-23:6][1]:EmptyExpression[23:6-23:7][]]]
	SliceExpression[24:1-24:8][Identifier[24:1-24:4][foo][EmptyExpression[24:4-24:5][]:Literal[24:6-24:7][1]]]
	SliceExpression[25:1-25:14][Identifier[25:1-25:4][foo][SliceExpression[25:5-25:12][Identifier[25:5-25:8][foo][Literal[25:9-25:10][1]:EmptyExpression[25:10-25:11][]]]:EmptyExpression[25:12-25:13][]]]
	SliceExpression[26:1-26:14][Identifier[26:1-26:4][foo][EmptyExpression[26:4-26:5][]:SliceExpression[26:6-26:13][Identifier[26:6-26:9][foo][EmptyExpression[26:9-26:10][]:Literal[26:11-26:12][1]]]]]
	SliceExpression[27:1-27:21][Identifier[27:1-27:4][foo][SliceExpression[27:5-27:12][Identifier[27:5-27:8][foo][Literal[27:9-27:10][1]:EmptyExpression[27:10-27:11][]]]:SliceExpression[27:13-27:20][Identifier[27:13-27:16][foo][EmptyExpression[27:16-27:17][]:Literal[27:18-27:19][1]]]]]
]"
`;

exports[`parse default scripts unary.ms 1`] = `
"Chunk[1:1-11:1][
	AssignmentStatement[1:1-3:13][Identifier[1:1-1:5][test] = Function[1:8-3:13][ =>
		ReturnStatement[2:3-2:14][Literal[2:10-2:14][null]]
	]]
	CallExpression[5:1-5:45][Identifier[5:1-5:6][print](LogicalExpression[5:7-5:44][UnaryExpression[5:7-5:19][@ MemberExpression[5:8-5:19][Literal[5:8-5:13][was].Identifier[5:14-5:19][split]]] and LogicalExpression[5:25-5:43][Literal[5:25-5:30][false] or NegationExpression[5:34-5:43][not Literal[5:38-5:43][false]]]])]
	CallExpression[6:1-6:47][Identifier[6:1-6:6][print](UnaryExpression[6:7-6:46][@ LogicalExpression[6:9-6:45][MemberExpression[6:9-6:20][Literal[6:9-6:14][was].Identifier[6:15-6:20][split]] and LogicalExpression[6:26-6:44][Literal[6:26-6:31][false] or NegationExpression[6:35-6:44][not Literal[6:39-6:44][false]]]]])]
	CallExpression[7:1-7:48][Identifier[7:1-7:6][print](LogicalExpression[7:7-7:47][NegationExpression[7:7-7:22][not MemberExpression[7:11-7:22][Literal[7:11-7:16][was].Identifier[7:17-7:22][split]]] and LogicalExpression[7:28-7:46][Literal[7:28-7:33][false] or NegationExpression[7:37-7:46][not Literal[7:41-7:46][false]]]])]
	CallExpression[8:1-8:50][Identifier[8:1-8:6][print](NegationExpression[8:7-8:49][not LogicalExpression[8:12-8:48][MemberExpression[8:12-8:23][Literal[8:12-8:17][was].Identifier[8:18-8:23][split]] and LogicalExpression[8:29-8:47][Literal[8:29-8:34][false] or NegationExpression[8:38-8:47][not Literal[8:42-8:47][false]]]]])]
	CallExpression[9:1-9:14][Identifier[9:1-9:6][print](BinaryExpression[9:7-9:13][BinaryNegatedExpression[9:7-9:9][- Literal[9:8-9:9][1]] + Literal[9:12-9:13][2]])]
	CallExpression[10:1-10:16][Identifier[10:1-10:6][print](BinaryNegatedExpression[10:7-10:15][- BinaryExpression[10:9-10:14][Literal[10:9-10:10][1] + Literal[10:13-10:14][2]]])]
]"
`;

exports[`parse default scripts unary.ms 2`] = `undefined`;

exports[`parse default scripts unary.ms 3`] = `17`;

exports[`parse default scripts unary.ms 4`] = `1`;

exports[`parse default scripts unary.ms unsafe 1`] = `
"Chunk[1:1-11:1][
	AssignmentStatement[1:1-3:13][Identifier[1:1-1:5][test] = Function[1:8-3:13][ =>
		ReturnStatement[2:3-2:14][Literal[2:10-2:14][null]]
	]]
	CallExpression[5:1-5:45][Identifier[5:1-5:6][print](LogicalExpression[5:7-5:44][UnaryExpression[5:7-5:19][@ MemberExpression[5:8-5:19][Literal[5:8-5:13][was].Identifier[5:14-5:19][split]]] and LogicalExpression[5:25-5:43][Literal[5:25-5:30][false] or NegationExpression[5:34-5:43][not Literal[5:38-5:43][false]]]])]
	CallExpression[6:1-6:47][Identifier[6:1-6:6][print](UnaryExpression[6:7-6:46][@ LogicalExpression[6:9-6:45][MemberExpression[6:9-6:20][Literal[6:9-6:14][was].Identifier[6:15-6:20][split]] and LogicalExpression[6:26-6:44][Literal[6:26-6:31][false] or NegationExpression[6:35-6:44][not Literal[6:39-6:44][false]]]]])]
	CallExpression[7:1-7:48][Identifier[7:1-7:6][print](LogicalExpression[7:7-7:47][NegationExpression[7:7-7:22][not MemberExpression[7:11-7:22][Literal[7:11-7:16][was].Identifier[7:17-7:22][split]]] and LogicalExpression[7:28-7:46][Literal[7:28-7:33][false] or NegationExpression[7:37-7:46][not Literal[7:41-7:46][false]]]])]
	CallExpression[8:1-8:50][Identifier[8:1-8:6][print](NegationExpression[8:7-8:49][not LogicalExpression[8:12-8:48][MemberExpression[8:12-8:23][Literal[8:12-8:17][was].Identifier[8:18-8:23][split]] and LogicalExpression[8:29-8:47][Literal[8:29-8:34][false] or NegationExpression[8:38-8:47][not Literal[8:42-8:47][false]]]]])]
	CallExpression[9:1-9:14][Identifier[9:1-9:6][print](BinaryExpression[9:7-9:13][BinaryNegatedExpression[9:7-9:9][- Literal[9:8-9:9][1]] + Literal[9:12-9:13][2]])]
	CallExpression[10:1-10:16][Identifier[10:1-10:6][print](BinaryNegatedExpression[10:7-10:15][- BinaryExpression[10:9-10:14][Literal[10:9-10:10][1] + Literal[10:13-10:14][2]]])]
]"
`;

exports[`parse default scripts using repeat keyword 1`] = `Array []`;

exports[`parse default scripts using repeat keyword 2`] = `
Array [
  [Error: unexpected keyword Keyword[2:9 - 2:15: value = 'repeat'] at start of line],
  [Error: no matching open function block],
]
`;
